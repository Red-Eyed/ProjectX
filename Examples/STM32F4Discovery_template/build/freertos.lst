ARM GAS  /tmp/ccungb89.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	defaultTaskHandle,4,4
  20              		.section	.rodata
  21              		.align	2
  22              	.LC0:
  23 0000 64656661 		.ascii	"defaultTask\000"
  23      756C7454 
  23      61736B00 
  24              		.align	2
  25              	.LC2:
  26 000c 00000000 		.word	.LC0
  27 0010 00000000 		.word	StartDefaultTask
  28 0014 0000     		.short	0
  29 0016 0000     		.space	2
  30 0018 00000000 		.word	0
  31 001c 80000000 		.word	128
  32              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  33              		.align	2
  34              		.global	MX_FREERTOS_Init
  35              		.thumb
  36              		.thumb_func
  38              	MX_FREERTOS_Init:
  39              	.LFB29:
  40              		.file 1 "Src/freertos.c"
   1:Src/freertos.c **** /**
   2:Src/freertos.c ****   ******************************************************************************
   3:Src/freertos.c ****   * File Name          : freertos.c
   4:Src/freertos.c ****   * Description        : Code for freertos applications
   5:Src/freertos.c ****   ******************************************************************************
   6:Src/freertos.c ****   *
   7:Src/freertos.c ****   * COPYRIGHT(c) 2016 STMicroelectronics
   8:Src/freertos.c ****   *
   9:Src/freertos.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/freertos.c ****   * are permitted provided that the following conditions are met:
  11:Src/freertos.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/freertos.c ****   *      this list of conditions and the following disclaimer.
  13:Src/freertos.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/freertos.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/freertos.c ****   *      and/or other materials provided with the distribution.
  16:Src/freertos.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccungb89.s 			page 2


  17:Src/freertos.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/freertos.c ****   *      without specific prior written permission.
  19:Src/freertos.c ****   *
  20:Src/freertos.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/freertos.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/freertos.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/freertos.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/freertos.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/freertos.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/freertos.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/freertos.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/freertos.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/freertos.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/freertos.c ****   *
  31:Src/freertos.c ****   ******************************************************************************
  32:Src/freertos.c ****   */
  33:Src/freertos.c **** 
  34:Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  35:Src/freertos.c **** #include "FreeRTOS.h"
  36:Src/freertos.c **** #include "task.h"
  37:Src/freertos.c **** #include "cmsis_os.h"
  38:Src/freertos.c **** 
  39:Src/freertos.c **** /* USER CODE BEGIN Includes */     
  40:Src/freertos.c **** 
  41:Src/freertos.c **** /* USER CODE END Includes */
  42:Src/freertos.c **** 
  43:Src/freertos.c **** /* Variables -----------------------------------------------------------------*/
  44:Src/freertos.c **** osThreadId defaultTaskHandle;
  45:Src/freertos.c **** 
  46:Src/freertos.c **** /* USER CODE BEGIN Variables */
  47:Src/freertos.c **** 
  48:Src/freertos.c **** /* USER CODE END Variables */
  49:Src/freertos.c **** 
  50:Src/freertos.c **** /* Function prototypes -------------------------------------------------------*/
  51:Src/freertos.c **** void StartDefaultTask(void const * argument);
  52:Src/freertos.c **** 
  53:Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  54:Src/freertos.c **** 
  55:Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  56:Src/freertos.c **** 
  57:Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  58:Src/freertos.c **** 
  59:Src/freertos.c **** /* Hook prototypes */
  60:Src/freertos.c **** 
  61:Src/freertos.c **** /* Init FreeRTOS */
  62:Src/freertos.c **** 
  63:Src/freertos.c **** void MX_FREERTOS_Init(void) {
  41              		.loc 1 63 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 24
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 B0B5     		push	{r4, r5, r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 16
  48              		.cfi_offset 4, -16
  49              		.cfi_offset 5, -12
  50              		.cfi_offset 7, -8
ARM GAS  /tmp/ccungb89.s 			page 3


  51              		.cfi_offset 14, -4
  52 0002 86B0     		sub	sp, sp, #24
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 40
  55 0004 00AF     		add	r7, sp, #0
  56              	.LCFI2:
  57              		.cfi_def_cfa_register 7
  64:Src/freertos.c ****   /* USER CODE BEGIN Init */
  65:Src/freertos.c ****        
  66:Src/freertos.c ****   /* USER CODE END Init */
  67:Src/freertos.c **** 
  68:Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
  69:Src/freertos.c ****   /* add mutexes, ... */
  70:Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
  71:Src/freertos.c **** 
  72:Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  73:Src/freertos.c ****   /* add semaphores, ... */
  74:Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  75:Src/freertos.c **** 
  76:Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  77:Src/freertos.c ****   /* start timers, add new ones, ... */
  78:Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
  79:Src/freertos.c **** 
  80:Src/freertos.c ****   /* Create the thread(s) */
  81:Src/freertos.c ****   /* definition and creation of defaultTask */
  82:Src/freertos.c ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
  58              		.loc 1 82 0
  59 0006 094B     		ldr	r3, .L2
  60 0008 3C1D     		adds	r4, r7, #4
  61 000a 1D46     		mov	r5, r3
  62 000c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
  63 000e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
  64 0010 2B68     		ldr	r3, [r5]
  65 0012 2360     		str	r3, [r4]
  83:Src/freertos.c ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
  66              		.loc 1 83 0
  67 0014 3B1D     		adds	r3, r7, #4
  68 0016 1846     		mov	r0, r3
  69 0018 0021     		movs	r1, #0
  70 001a FFF7FEFF 		bl	osThreadCreate
  71 001e 0246     		mov	r2, r0
  72 0020 034B     		ldr	r3, .L2+4
  73 0022 1A60     		str	r2, [r3]
  84:Src/freertos.c **** 
  85:Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
  86:Src/freertos.c ****   /* add threads, ... */
  87:Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
  88:Src/freertos.c **** 
  89:Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
  90:Src/freertos.c ****   /* add queues, ... */
  91:Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
  92:Src/freertos.c **** }
  74              		.loc 1 92 0
  75 0024 1837     		adds	r7, r7, #24
  76              	.LCFI3:
  77              		.cfi_def_cfa_offset 16
  78 0026 BD46     		mov	sp, r7
ARM GAS  /tmp/ccungb89.s 			page 4


  79              	.LCFI4:
  80              		.cfi_def_cfa_register 13
  81              		@ sp needed
  82 0028 B0BD     		pop	{r4, r5, r7, pc}
  83              	.L3:
  84 002a 00BF     		.align	2
  85              	.L2:
  86 002c 0C000000 		.word	.LC2
  87 0030 00000000 		.word	defaultTaskHandle
  88              		.cfi_endproc
  89              	.LFE29:
  91              		.section	.text.StartDefaultTask,"ax",%progbits
  92              		.align	2
  93              		.global	StartDefaultTask
  94              		.thumb
  95              		.thumb_func
  97              	StartDefaultTask:
  98              	.LFB30:
  93:Src/freertos.c **** 
  94:Src/freertos.c **** /* StartDefaultTask function */
  95:Src/freertos.c **** void StartDefaultTask(void const * argument)
  96:Src/freertos.c **** {
  99              		.loc 1 96 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103 0000 80B5     		push	{r7, lr}
 104              	.LCFI5:
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 82B0     		sub	sp, sp, #8
 109              	.LCFI6:
 110              		.cfi_def_cfa_offset 16
 111 0004 00AF     		add	r7, sp, #0
 112              	.LCFI7:
 113              		.cfi_def_cfa_register 7
 114 0006 7860     		str	r0, [r7, #4]
 115              	.L5:
  97:Src/freertos.c **** 
  98:Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
  99:Src/freertos.c ****   /* Infinite loop */
 100:Src/freertos.c ****   for(;;)
 101:Src/freertos.c ****   {
 102:Src/freertos.c ****     osDelay(1);
 116              		.loc 1 102 0 discriminator 1
 117 0008 0120     		movs	r0, #1
 118 000a FFF7FEFF 		bl	osDelay
 103:Src/freertos.c ****   }
 119              		.loc 1 103 0 discriminator 1
 120 000e FBE7     		b	.L5
 121              		.cfi_endproc
 122              	.LFE30:
 124              		.text
 125              	.Letext0:
 126              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 127              		.file 3 "/usr/include/newlib/stdint.h"
ARM GAS  /tmp/ccungb89.s 			page 5


 128              		.file 4 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
 129              		.file 5 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
ARM GAS  /tmp/ccungb89.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccungb89.s:21     .rodata:0000000000000000 $d
     /tmp/ccungb89.s:97     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccungb89.s:33     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccungb89.s:38     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccungb89.s:86     .text.MX_FREERTOS_Init:000000000000002c $d
     /tmp/ccungb89.s:92     .text.StartDefaultTask:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
osThreadCreate
osDelay
