ARM GAS  /tmp/ccdaF48n.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	pxCurrentTCB
  20              		.section	.bss.pxCurrentTCB,"aw",%nobits
  21              		.align	2
  24              	pxCurrentTCB:
  25 0000 00000000 		.space	4
  26              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  27              		.align	2
  30              	pxReadyTasksLists:
  31 0000 00000000 		.space	140
  31      00000000 
  31      00000000 
  31      00000000 
  31      00000000 
  32              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  33              		.align	2
  36              	xDelayedTaskList1:
  37 0000 00000000 		.space	20
  37      00000000 
  37      00000000 
  37      00000000 
  37      00000000 
  38              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  39              		.align	2
  42              	xDelayedTaskList2:
  43 0000 00000000 		.space	20
  43      00000000 
  43      00000000 
  43      00000000 
  43      00000000 
  44              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  45              		.align	2
  48              	pxDelayedTaskList:
  49 0000 00000000 		.space	4
  50              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  51              		.align	2
  54              	pxOverflowDelayedTaskList:
  55 0000 00000000 		.space	4
  56              		.section	.bss.xPendingReadyList,"aw",%nobits
  57              		.align	2
ARM GAS  /tmp/ccdaF48n.s 			page 2


  60              	xPendingReadyList:
  61 0000 00000000 		.space	20
  61      00000000 
  61      00000000 
  61      00000000 
  61      00000000 
  62              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  63              		.align	2
  66              	xTasksWaitingTermination:
  67 0000 00000000 		.space	20
  67      00000000 
  67      00000000 
  67      00000000 
  67      00000000 
  68              		.section	.bss.uxTasksDeleted,"aw",%nobits
  69              		.align	2
  72              	uxTasksDeleted:
  73 0000 00000000 		.space	4
  74              		.section	.bss.xSuspendedTaskList,"aw",%nobits
  75              		.align	2
  78              	xSuspendedTaskList:
  79 0000 00000000 		.space	20
  79      00000000 
  79      00000000 
  79      00000000 
  79      00000000 
  80              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
  81              		.align	2
  84              	uxCurrentNumberOfTasks:
  85 0000 00000000 		.space	4
  86              		.section	.bss.xTickCount,"aw",%nobits
  87              		.align	2
  90              	xTickCount:
  91 0000 00000000 		.space	4
  92              		.section	.bss.uxTopReadyPriority,"aw",%nobits
  93              		.align	2
  96              	uxTopReadyPriority:
  97 0000 00000000 		.space	4
  98              		.section	.bss.xSchedulerRunning,"aw",%nobits
  99              		.align	2
 102              	xSchedulerRunning:
 103 0000 00000000 		.space	4
 104              		.section	.bss.uxPendedTicks,"aw",%nobits
 105              		.align	2
 108              	uxPendedTicks:
 109 0000 00000000 		.space	4
 110              		.section	.bss.xYieldPending,"aw",%nobits
 111              		.align	2
 114              	xYieldPending:
 115 0000 00000000 		.space	4
 116              		.section	.bss.xNumOfOverflows,"aw",%nobits
 117              		.align	2
 120              	xNumOfOverflows:
 121 0000 00000000 		.space	4
 122              		.section	.bss.uxTaskNumber,"aw",%nobits
 123              		.align	2
 126              	uxTaskNumber:
ARM GAS  /tmp/ccdaF48n.s 			page 3


 127 0000 00000000 		.space	4
 128              		.section	.data.xNextTaskUnblockTime,"aw",%progbits
 129              		.align	2
 132              	xNextTaskUnblockTime:
 133 0000 FFFFFFFF 		.word	-1
 134              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 135              		.align	2
 138              	uxSchedulerSuspended:
 139 0000 00000000 		.space	4
 140              		.section	.text.xTaskGenericCreate,"ax",%progbits
 141              		.align	2
 142              		.global	xTaskGenericCreate
 143              		.thumb
 144              		.thumb_func
 146              	xTaskGenericCreate:
 147              	.LFB4:
 148              		.file 1 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
   1:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS V8.2.1 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     All rights reserved
   4:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   5:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   7:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
   9:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  12:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  13:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  14:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  19:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  20:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  25:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  26:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  27:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    is the industry's de facto standard.                               *
  31:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  32:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****      *                                                                       *
  37:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     ***************************************************************************
  38:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  39:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
ARM GAS  /tmp/ccdaF48n.s 			page 4


  41:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     defined configASSERT()?
  42:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     participating in the support forum.
  46:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  47:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  56:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  63:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     mission critical applications that require provable dependability.
  66:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****     1 tab == 4 spaces!
  68:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** */
  69:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  70:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  71:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  72:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  73:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  77:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  79:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  80:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  81:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  82:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  83:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "StackMacros.h"
  84:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  85:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  88:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  91:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  93:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
ARM GAS  /tmp/ccdaF48n.s 			page 5


  98:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  99:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sanity check the configuration. */
 102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configUSE_TICKLESS_IDLE != 0
 103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if INCLUDE_vTaskSuspend != 1
 104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#error INCLUDE_vTaskSuspend must be set to 1 if configUSE_TICKLESS_IDLE is not set to 0
 105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
 106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
 107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Defines the size, in words, of the stack allocated to the idle task.
 110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskIDLE_STACK_SIZE	configMINIMAL_STACK_SIZE
 112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Value that can be assigned to the eNotifyState member of the TCB. */
 122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef enum
 123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eNotWaitingNotification = 0,
 125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eWaitingNotification,
 126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eNotified
 127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } eNotifyValue;
 128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t		xUsingStaticallyAllocatedStack; /* Set to pdTRUE if the stack is a statically allocat
 141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xGenericListItem;	/*< The list that the state list item of a task is reference from d
 144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t 	uxCriticalNesting; 	/*< Holds the critical section nesting depth for ports that do n
ARM GAS  /tmp/ccdaF48n.s 			page 6


 155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t  	uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. 
 160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t 	uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t 	uxMutexesHeld;
 165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct 	_reent xNewLib_reent;
 188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile eNotifyValue eNotifyState;
 193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to to
 203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * be global, rather than file scope.
 204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static variables must be declared volatile. */
 211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 7


 212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxTasksDeleted = ( UBaseType_t ) 0U;
 226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
 236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;			/*< Holds the handle of the idle tas
 238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= portMAX_DELAY;
 251:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 252:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 253:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xGenericListItem of a TCB, or any of the
 254:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xGenericListItem can be referenced from, if the scheduler is suspended.
 255:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 256:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 257:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 258:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 259:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 260:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 261:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 262:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 263:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 265:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 266:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 267:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 268:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 8


 269:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint +e956 */
 270:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 271:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Debugging and trace facilities private variables and macros. ------------*/
 272:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 274:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 275:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 276:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 277:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 278:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 280:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 281:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 282:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 283:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 284:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 285:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 286:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 288:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 289:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 290:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 292:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 293:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 294:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 295:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 296:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 297:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 298:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 299:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 300:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 301:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 302:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 303:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 304:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 306:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 307:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 308:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 309:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 310:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopReadyPriority ] ) ) )						\
 311:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 312:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopReadyPriority );															\
 313:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopReadyPriority;																		\
 314:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 315:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 316:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 317:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 318:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopReadyPriority ] ) );		\
 319:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 320:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 322:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 323:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 324:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 325:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
ARM GAS  /tmp/ccdaF48n.s 			page 9


 326:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 327:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 328:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 330:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 332:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 333:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 334:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 336:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 337:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 338:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 339:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 340:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 341:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 342:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 343:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 344:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */							\
 345:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 346:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 347:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 348:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 349:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 351:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 353:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 354:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 355:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 356:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 357:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 358:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 359:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 360:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 361:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 362:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 364:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 366:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 368:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 369:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 370:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 371:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 372:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 373:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 374:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 375:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 376:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 377:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 378:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 379:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 380:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 381:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 382:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 10


 383:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 384:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 385:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 386:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 387:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 388:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 389:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 390:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 391:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 392:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xGenericListItem ) 
 393:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 394:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 396:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 397:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 398:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 399:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 400:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 401:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 402:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 403:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 404:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 405:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 406:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 407:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 408:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 409:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 410:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 411:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configUSE_16_BIT_TICKS == 1
 412:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 413:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 414:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 415:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 418:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configCHECK_FOR_STACK_OVERFLOW > 0
 419:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 420:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 421:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 422:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configUSE_TICK_HOOK > 0
 423:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 424:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 425:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 427:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 429:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready a TCB for a given task.  Mainly just copies the parameters
 430:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * into the TCB structure.
 431:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 432:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTCBVariables( TCB_t * const pxTCB, const char * const pcName, UBaseType_t 
 433:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 435:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 436:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 437:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 438:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 439:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  /tmp/ccdaF48n.s 			page 11


 440:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 441:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 442:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 443:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 444:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 445:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 446:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 448:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 451:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 452:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 453:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 454:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 455:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 456:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 457:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 458:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 460:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 461:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 464:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 465:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 466:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 467:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 468:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 469:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 470:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 471:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 472:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 473:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 474:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 477:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 478:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 479:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 480:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 481:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 482:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 483:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 484:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 485:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 486:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( const TickType_t xTimeToWake ) PRIVILEGED_FUNCTION;
 487:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 488:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 489:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Allocates memory from the heap for a TCB and associated stack.  Checks the
 490:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocation was successful.
 491:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 492:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static TCB_t *prvAllocateTCBAndStack( const uint16_t usStackDepth, StackType_t * const puxStackBuff
 493:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 494:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 495:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 496:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
ARM GAS  /tmp/ccdaF48n.s 			page 12


 497:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 498:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 499:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 500:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 501:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 502:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 503:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 504:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTaskWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, e
 505:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 507:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 509:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 510:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 511:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 512:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 513:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 514:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 515:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 516:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 517:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 518:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 519:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 520:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 521:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 522:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 523:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 524:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 525:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 526:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 527:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 528:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 529:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 530:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 531:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 532:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 533:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 534:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 535:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 536:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 537:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 538:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 539:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 540:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 541:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 542:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 543:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 544:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 545:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 546:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName );
 547:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 548:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 549:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 550:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 551:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskGenericCreate( TaskFunction_t pxTaskCode, const char * const pcName, const uint16_t
 552:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 149              		.loc 1 552 0
ARM GAS  /tmp/ccdaF48n.s 			page 13


 150              		.cfi_startproc
 151              		@ args = 16, pretend = 0, frame = 40
 152              		@ frame_needed = 1, uses_anonymous_args = 0
 153 0000 80B5     		push	{r7, lr}
 154              	.LCFI0:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 8CB0     		sub	sp, sp, #48
 159              	.LCFI1:
 160              		.cfi_def_cfa_offset 56
 161 0004 02AF     		add	r7, sp, #8
 162              	.LCFI2:
 163              		.cfi_def_cfa 7, 48
 164 0006 F860     		str	r0, [r7, #12]
 165 0008 B960     		str	r1, [r7, #8]
 166 000a 3B60     		str	r3, [r7]
 167 000c 1346     		mov	r3, r2	@ movhi
 168 000e FB80     		strh	r3, [r7, #6]	@ movhi
 553:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 554:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxNewTCB;
 555:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 556:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 557:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTaskCode );
 169              		.loc 1 557 0
 170 0010 FB68     		ldr	r3, [r7, #12]
 171 0012 002B     		cmp	r3, #0
 172 0014 09D1     		bne	.L2
 173              	.LBB91:
 174              	.LBB92:
 175              		.file 2 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
   1:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V8.2.1 - Copyright (C) 2015 Real Time Engineers Ltd.
   3:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  12:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
ARM GAS  /tmp/ccdaF48n.s 			page 14


  27:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  74:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  81:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /tmp/ccdaF48n.s 			page 15


  84:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  90:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
ARM GAS  /tmp/ccdaF48n.s 			page 16


 141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31 - ucPort
 192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
ARM GAS  /tmp/ccdaF48n.s 			page 17


 198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 176              		.loc 2 215 0 discriminator 1
 177              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 178 0016 4FF05003 			mov r3, #80												
 179 001a 83F31188 		msr basepri, r3											
 180 001e BFF36F8F 		isb														
 181 0022 BFF34F8F 		dsb														
 182              	
 183              	@ 0 "" 2
 184              		.thumb
 185 0026 BB61     		str	r3, [r7, #24]
 186              	.L3:
 187              	.LBE92:
 188              	.LBE91:
 189              		.loc 1 557 0 discriminator 1
 190 0028 FEE7     		b	.L3
 191              	.L2:
 558:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( ( uxPriority & ( UBaseType_t ) ( ~portPRIVILEGE_BIT ) ) < ( UBaseType_t ) configMA
 192              		.loc 1 558 0
 193 002a 3B6B     		ldr	r3, [r7, #48]
 194 002c 062B     		cmp	r3, #6
 195 002e 09D9     		bls	.L4
 196              	.LBB93:
 197              	.LBB94:
 198              		.loc 2 215 0 discriminator 1
 199              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 200 0030 4FF05003 			mov r3, #80												
 201 0034 83F31188 		msr basepri, r3											
 202 0038 BFF36F8F 		isb														
 203 003c BFF34F8F 		dsb														
 204              	
 205              	@ 0 "" 2
 206              		.thumb
 207 0040 7B61     		str	r3, [r7, #20]
 208              	.L5:
 209              	.LBE94:
 210              	.LBE93:
 211              		.loc 1 558 0 discriminator 2
 212 0042 FEE7     		b	.L5
 213              	.L4:
ARM GAS  /tmp/ccdaF48n.s 			page 18


 559:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Allocate the memory required by the TCB and stack for the new task,
 561:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	checking that the allocation was successful. */
 562:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
 214              		.loc 1 562 0
 215 0044 FB88     		ldrh	r3, [r7, #6]
 216 0046 1846     		mov	r0, r3
 217 0048 B96B     		ldr	r1, [r7, #56]
 218 004a FFF7FEFF 		bl	prvAllocateTCBAndStack
 219 004e 3862     		str	r0, [r7, #32]
 563:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 564:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxNewTCB != NULL )
 220              		.loc 1 564 0
 221 0050 3B6A     		ldr	r3, [r7, #32]
 222 0052 002B     		cmp	r3, #0
 223 0054 7AD0     		beq	.L6
 565:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 566:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 567:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should the task be created in privileged mode? */
 568:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			BaseType_t xRunPrivileged;
 569:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 570:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 571:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xRunPrivileged = pdTRUE;
 572:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 573:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 574:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 575:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xRunPrivileged = pdFALSE;
 576:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 577:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxPriority &= ~portPRIVILEGE_BIT;
 578:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( puxStackBuffer != NULL )
 580:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 581:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The application provided its own stack.  Note this so no
 582:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				attempt is made to delete the stack should that task be
 583:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				deleted. */
 584:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->xUsingStaticallyAllocatedStack = pdTRUE;
 585:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 586:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 587:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 588:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The stack was allocated dynamically.  Note this so it can be
 589:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				deleted again if the task is deleted. */
 590:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->xUsingStaticallyAllocatedStack = pdFALSE;
 591:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 592:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portUSING_MPU_WRAPPERS == 1 */
 593:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 594:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the top of stack address.  This depends on whether the
 595:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stack grows from high memory to low (as per the 80x86) or vice versa.
 596:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSTACK_GROWTH is used to make the result positive or negative as
 597:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		required by the port. */
 598:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH < 0 )
 599:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 600:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( uint16_t ) 1 );
 224              		.loc 1 600 0
 225 0056 3B6A     		ldr	r3, [r7, #32]
 226 0058 1A6B     		ldr	r2, [r3, #48]
 227 005a FB88     		ldrh	r3, [r7, #6]
 228 005c 03F18043 		add	r3, r3, #1073741824
ARM GAS  /tmp/ccdaF48n.s 			page 19


 229 0060 013B     		subs	r3, r3, #1
 230 0062 9B00     		lsls	r3, r3, #2
 231 0064 1344     		add	r3, r3, r2
 232 0066 FB61     		str	r3, [r7, #28]
 601:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINT
 233              		.loc 1 601 0
 234 0068 FB69     		ldr	r3, [r7, #28]
 235 006a 23F00703 		bic	r3, r3, #7
 236 006e FB61     		str	r3, [r7, #28]
 602:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 603:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Check the alignment of the calculated top of stack is correct. */
 604:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_AL
 237              		.loc 1 604 0
 238 0070 FB69     		ldr	r3, [r7, #28]
 239 0072 03F00703 		and	r3, r3, #7
 240 0076 002B     		cmp	r3, #0
 241 0078 09D0     		beq	.L7
 242              	.LBB95:
 243              	.LBB96:
 244              		.loc 2 215 0 discriminator 1
 245              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 246 007a 4FF05003 			mov r3, #80												
 247 007e 83F31188 		msr basepri, r3											
 248 0082 BFF36F8F 		isb														
 249 0086 BFF34F8F 		dsb														
 250              	
 251              	@ 0 "" 2
 252              		.thumb
 253 008a 3B61     		str	r3, [r7, #16]
 254              	.L8:
 255              	.LBE96:
 256              	.LBE95:
 257              		.loc 1 604 0 discriminator 3
 258 008c FEE7     		b	.L8
 259              	.L7:
 605:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 606:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 607:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 608:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTopOfStack = pxNewTCB->pxStack;
 609:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 610:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Check the alignment of the stack buffer is correct. */
 611:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBY
 612:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 613:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we want to use stack checking on architectures that use
 614:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			a positive stack growth direction then we also need to store the
 615:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			other extreme of the stack space. */
 616:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
 617:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 619:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 620:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setup the newly allocated TCB with the initial state of the task. */
 621:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
 260              		.loc 1 621 0
 261 008e FB88     		ldrh	r3, [r7, #6]
 262 0090 0093     		str	r3, [sp]
 263 0092 386A     		ldr	r0, [r7, #32]
 264 0094 B968     		ldr	r1, [r7, #8]
ARM GAS  /tmp/ccdaF48n.s 			page 20


 265 0096 3A6B     		ldr	r2, [r7, #48]
 266 0098 FB6B     		ldr	r3, [r7, #60]
 267 009a FFF7FEFF 		bl	prvInitialiseTCBVariables
 622:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialize the TCB stack to look as if the task was already running,
 624:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but had been interrupted by the scheduler.  The return address is set
 625:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the start of the task function. Once the stack has been initialised
 626:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	top of stack variable is updated. */
 627:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
 628:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 629:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
 630:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 631:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portUSING_MPU_WRAPPERS */
 632:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 633:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 268              		.loc 1 633 0
 269 009e F869     		ldr	r0, [r7, #28]
 270 00a0 F968     		ldr	r1, [r7, #12]
 271 00a2 3A68     		ldr	r2, [r7]
 272 00a4 FFF7FEFF 		bl	pxPortInitialiseStack
 273 00a8 0246     		mov	r2, r0
 274 00aa 3B6A     		ldr	r3, [r7, #32]
 275 00ac 1A60     		str	r2, [r3]
 634:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 635:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portUSING_MPU_WRAPPERS */
 636:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 637:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( void * ) pxCreatedTask != NULL )
 276              		.loc 1 637 0
 277 00ae 7B6B     		ldr	r3, [r7, #52]
 278 00b0 002B     		cmp	r3, #0
 279 00b2 02D0     		beq	.L9
 638:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 639:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Pass the TCB out - in an anonymous way.  The calling function/
 640:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task can use this as a handle to delete the task later if
 641:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			required.*/
 642:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 280              		.loc 1 642 0
 281 00b4 7B6B     		ldr	r3, [r7, #52]
 282 00b6 3A6A     		ldr	r2, [r7, #32]
 283 00b8 1A60     		str	r2, [r3]
 284              	.L9:
 643:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 644:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 645:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 646:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 647:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 648:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure interrupts don't access the task lists while they are being
 650:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		updated. */
 651:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 285              		.loc 1 651 0
 286 00ba FFF7FEFF 		bl	vPortEnterCritical
 652:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 653:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxCurrentNumberOfTasks++;
 287              		.loc 1 653 0
 288 00be 324B     		ldr	r3, .L15
 289 00c0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 21


 290 00c2 0133     		adds	r3, r3, #1
 291 00c4 304A     		ldr	r2, .L15
 292 00c6 1360     		str	r3, [r2]
 654:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB == NULL )
 293              		.loc 1 654 0
 294 00c8 304B     		ldr	r3, .L15+4
 295 00ca 1B68     		ldr	r3, [r3]
 296 00cc 002B     		cmp	r3, #0
 297 00ce 09D1     		bne	.L10
 655:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 656:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* There are no other tasks, or all the other tasks are in
 657:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the suspended state - make this the current task. */
 658:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB =  pxNewTCB;
 298              		.loc 1 658 0
 299 00d0 2E4A     		ldr	r2, .L15+4
 300 00d2 3B6A     		ldr	r3, [r7, #32]
 301 00d4 1360     		str	r3, [r2]
 659:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 660:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 302              		.loc 1 660 0
 303 00d6 2C4B     		ldr	r3, .L15
 304 00d8 1B68     		ldr	r3, [r3]
 305 00da 012B     		cmp	r3, #1
 306 00dc 0FD1     		bne	.L11
 661:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 662:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* This is the first task to be created so do the preliminary
 663:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					initialisation required.  We will not recover if this call
 664:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					fails, but we will report the failure. */
 665:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvInitialiseTaskLists();
 307              		.loc 1 665 0
 308 00de FFF7FEFF 		bl	prvInitialiseTaskLists
 309 00e2 0CE0     		b	.L11
 310              	.L10:
 666:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 667:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 668:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 669:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 670:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 671:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 672:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 673:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 674:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the scheduler is not already running, make this task the
 675:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				current task if it is the highest priority task to be created
 676:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				so far. */
 677:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xSchedulerRunning == pdFALSE )
 311              		.loc 1 677 0
 312 00e4 2A4B     		ldr	r3, .L15+8
 313 00e6 1B68     		ldr	r3, [r3]
 314 00e8 002B     		cmp	r3, #0
 315 00ea 08D1     		bne	.L11
 678:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 679:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxCurrentTCB->uxPriority <= uxPriority )
 316              		.loc 1 679 0
 317 00ec 274B     		ldr	r3, .L15+4
 318 00ee 1B68     		ldr	r3, [r3]
 319 00f0 DA6A     		ldr	r2, [r3, #44]
 320 00f2 3B6B     		ldr	r3, [r7, #48]
ARM GAS  /tmp/ccdaF48n.s 			page 22


 321 00f4 9A42     		cmp	r2, r3
 322 00f6 02D8     		bhi	.L11
 680:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 681:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxCurrentTCB = pxNewTCB;
 323              		.loc 1 681 0
 324 00f8 244A     		ldr	r2, .L15+4
 325 00fa 3B6A     		ldr	r3, [r7, #32]
 326 00fc 1360     		str	r3, [r2]
 327              	.L11:
 682:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 683:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
 684:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 685:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
 686:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 687:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 688:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 689:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 690:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 691:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 692:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 693:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 694:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
 328              		.loc 1 694 0
 329 00fe 254B     		ldr	r3, .L15+12
 330 0100 1B68     		ldr	r3, [r3]
 331 0102 0133     		adds	r3, r3, #1
 332 0104 234A     		ldr	r2, .L15+12
 333 0106 1360     		str	r3, [r2]
 695:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_TRACE_FACILITY == 1 )
 697:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 698:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add a counter into the TCB for tracing only. */
 699:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->uxTCBNumber = uxTaskNumber;
 334              		.loc 1 699 0
 335 0108 224B     		ldr	r3, .L15+12
 336 010a 1A68     		ldr	r2, [r3]
 337 010c 3B6A     		ldr	r3, [r7, #32]
 338 010e 5A64     		str	r2, [r3, #68]
 700:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 701:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configUSE_TRACE_FACILITY */
 702:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_CREATE( pxNewTCB );
 703:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 704:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddTaskToReadyList( pxNewTCB );
 339              		.loc 1 704 0
 340 0110 3B6A     		ldr	r3, [r7, #32]
 341 0112 DB6A     		ldr	r3, [r3, #44]
 342 0114 1A46     		mov	r2, r3
 343 0116 0123     		movs	r3, #1
 344 0118 03FA02F2 		lsl	r2, r3, r2
 345 011c 1E4B     		ldr	r3, .L15+16
 346 011e 1B68     		ldr	r3, [r3]
 347 0120 1343     		orrs	r3, r3, r2
 348 0122 1D4A     		ldr	r2, .L15+16
 349 0124 1360     		str	r3, [r2]
 350 0126 3B6A     		ldr	r3, [r7, #32]
 351 0128 DA6A     		ldr	r2, [r3, #44]
 352 012a 1346     		mov	r3, r2
ARM GAS  /tmp/ccdaF48n.s 			page 23


 353 012c 9B00     		lsls	r3, r3, #2
 354 012e 1344     		add	r3, r3, r2
 355 0130 9B00     		lsls	r3, r3, #2
 356 0132 1A4A     		ldr	r2, .L15+20
 357 0134 1A44     		add	r2, r2, r3
 358 0136 3B6A     		ldr	r3, [r7, #32]
 359 0138 0433     		adds	r3, r3, #4
 360 013a 1046     		mov	r0, r2
 361 013c 1946     		mov	r1, r3
 362 013e FFF7FEFF 		bl	vListInsertEnd
 705:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 706:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 363              		.loc 1 706 0
 364 0142 0123     		movs	r3, #1
 365 0144 7B62     		str	r3, [r7, #36]
 707:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portSETUP_TCB( pxNewTCB );
 708:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 709:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 366              		.loc 1 709 0
 367 0146 FFF7FEFF 		bl	vPortExitCritical
 368 014a 02E0     		b	.L12
 369              	.L6:
 710:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 711:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 712:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 713:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 370              		.loc 1 713 0
 371 014c 4FF0FF33 		mov	r3, #-1
 372 0150 7B62     		str	r3, [r7, #36]
 373              	.L12:
 714:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE_FAILED();
 715:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 716:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 717:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
 374              		.loc 1 717 0
 375 0152 7B6A     		ldr	r3, [r7, #36]
 376 0154 012B     		cmp	r3, #1
 377 0156 11D1     		bne	.L13
 718:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 719:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 378              		.loc 1 719 0
 379 0158 0D4B     		ldr	r3, .L15+8
 380 015a 1B68     		ldr	r3, [r3]
 381 015c 002B     		cmp	r3, #0
 382 015e 0DD0     		beq	.L13
 720:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 721:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the created task is of a higher priority than the current task
 722:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it should run now. */
 723:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxPriority < uxPriority )
 383              		.loc 1 723 0
 384 0160 0A4B     		ldr	r3, .L15+4
 385 0162 1B68     		ldr	r3, [r3]
 386 0164 DA6A     		ldr	r2, [r3, #44]
 387 0166 3B6B     		ldr	r3, [r7, #48]
 388 0168 9A42     		cmp	r2, r3
 389 016a 07D2     		bcs	.L13
 724:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccdaF48n.s 			page 24


 725:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD_IF_USING_PREEMPTION();
 390              		.loc 1 725 0
 391 016c 0C4B     		ldr	r3, .L15+24
 392 016e 4FF08052 		mov	r2, #268435456
 393 0172 1A60     		str	r2, [r3]
 394              	@ 725 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 395 0174 BFF34F8F 		dsb
 396              	@ 0 "" 2
 397              	@ 725 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 398 0178 BFF36F8F 		isb
 399              	@ 0 "" 2
 400              		.thumb
 401              	.L13:
 726:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 727:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 728:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 729:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 730:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 731:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 732:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 733:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 734:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 735:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 736:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 737:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 738:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 402              		.loc 1 738 0
 403 017c 7B6A     		ldr	r3, [r7, #36]
 739:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 404              		.loc 1 739 0
 405 017e 1846     		mov	r0, r3
 406 0180 2837     		adds	r7, r7, #40
 407              	.LCFI3:
 408              		.cfi_def_cfa_offset 8
 409 0182 BD46     		mov	sp, r7
 410              	.LCFI4:
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0184 80BD     		pop	{r7, pc}
 414              	.L16:
 415 0186 00BF     		.align	2
 416              	.L15:
 417 0188 00000000 		.word	uxCurrentNumberOfTasks
 418 018c 00000000 		.word	pxCurrentTCB
 419 0190 00000000 		.word	xSchedulerRunning
 420 0194 00000000 		.word	uxTaskNumber
 421 0198 00000000 		.word	uxTopReadyPriority
 422 019c 00000000 		.word	pxReadyTasksLists
 423 01a0 04ED00E0 		.word	-536810236
 424              		.cfi_endproc
 425              	.LFE4:
 427              		.section	.text.vTaskDelete,"ax",%progbits
 428              		.align	2
 429              		.global	vTaskDelete
 430              		.thumb
 431              		.thumb_func
 433              	vTaskDelete:
ARM GAS  /tmp/ccdaF48n.s 			page 25


 434              	.LFB5:
 740:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 741:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 742:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 743:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 744:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
 745:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 435              		.loc 1 745 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              	.LCFI5:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 84B0     		sub	sp, sp, #16
 445              	.LCFI6:
 446              		.cfi_def_cfa_offset 24
 447 0004 00AF     		add	r7, sp, #0
 448              	.LCFI7:
 449              		.cfi_def_cfa_register 7
 450 0006 7860     		str	r0, [r7, #4]
 746:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 747:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 748:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 451              		.loc 1 748 0
 452 0008 FFF7FEFF 		bl	vPortEnterCritical
 749:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 750:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
 751:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
 752:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 453              		.loc 1 752 0
 454 000c 7B68     		ldr	r3, [r7, #4]
 455 000e 002B     		cmp	r3, #0
 456 0010 02D1     		bne	.L18
 457              		.loc 1 752 0 is_stmt 0 discriminator 1
 458 0012 334B     		ldr	r3, .L27
 459 0014 1B68     		ldr	r3, [r3]
 460 0016 00E0     		b	.L19
 461              	.L18:
 462              		.loc 1 752 0 discriminator 2
 463 0018 7B68     		ldr	r3, [r7, #4]
 464              	.L19:
 465              		.loc 1 752 0 discriminator 4
 466 001a FB60     		str	r3, [r7, #12]
 753:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 754:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list and place in the	termination list.
 755:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			This will stop the task from be scheduled.  The idle task will check
 756:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the termination list and free up any memory allocated by the
 757:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler for the TCB and stack. */
 758:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 467              		.loc 1 758 0 is_stmt 1 discriminator 4
 468 001c FB68     		ldr	r3, [r7, #12]
 469 001e 0433     		adds	r3, r3, #4
 470 0020 1846     		mov	r0, r3
 471 0022 FFF7FEFF 		bl	uxListRemove
ARM GAS  /tmp/ccdaF48n.s 			page 26


 472 0026 0346     		mov	r3, r0
 473 0028 002B     		cmp	r3, #0
 474 002a 15D1     		bne	.L20
 759:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 760:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 475              		.loc 1 760 0
 476 002c FB68     		ldr	r3, [r7, #12]
 477 002e DA6A     		ldr	r2, [r3, #44]
 478 0030 2C49     		ldr	r1, .L27+4
 479 0032 1346     		mov	r3, r2
 480 0034 9B00     		lsls	r3, r3, #2
 481 0036 1344     		add	r3, r3, r2
 482 0038 9B00     		lsls	r3, r3, #2
 483 003a 0B44     		add	r3, r3, r1
 484 003c 1B68     		ldr	r3, [r3]
 485 003e 002B     		cmp	r3, #0
 486 0040 0AD1     		bne	.L20
 487              		.loc 1 760 0 is_stmt 0 discriminator 1
 488 0042 FB68     		ldr	r3, [r7, #12]
 489 0044 DB6A     		ldr	r3, [r3, #44]
 490 0046 1A46     		mov	r2, r3
 491 0048 0123     		movs	r3, #1
 492 004a 9340     		lsls	r3, r3, r2
 493 004c DA43     		mvns	r2, r3
 494 004e 264B     		ldr	r3, .L27+8
 495 0050 1B68     		ldr	r3, [r3]
 496 0052 1340     		ands	r3, r3, r2
 497 0054 244A     		ldr	r2, .L27+8
 498 0056 1360     		str	r3, [r2]
 499              	.L20:
 761:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 762:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 763:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 764:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 765:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 766:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 767:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
 768:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 500              		.loc 1 768 0 is_stmt 1
 501 0058 FB68     		ldr	r3, [r7, #12]
 502 005a 9B6A     		ldr	r3, [r3, #40]
 503 005c 002B     		cmp	r3, #0
 504 005e 04D0     		beq	.L22
 769:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 505              		.loc 1 770 0
 506 0060 FB68     		ldr	r3, [r7, #12]
 507 0062 1833     		adds	r3, r3, #24
 508 0064 1846     		mov	r0, r3
 509 0066 FFF7FEFF 		bl	uxListRemove
 510              	.L22:
 771:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 772:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 773:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 774:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 775:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 776:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 27


 777:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
 511              		.loc 1 777 0
 512 006a FB68     		ldr	r3, [r7, #12]
 513 006c 0433     		adds	r3, r3, #4
 514 006e 1F48     		ldr	r0, .L27+12
 515 0070 1946     		mov	r1, r3
 516 0072 FFF7FEFF 		bl	vListInsertEnd
 778:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 779:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the ucTasksDeleted variable so the idle task knows
 780:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			there is a task that has been deleted and that it should therefore
 781:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check the xTasksWaitingTermination list. */
 782:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			++uxTasksDeleted;
 517              		.loc 1 782 0
 518 0076 1E4B     		ldr	r3, .L27+16
 519 0078 1B68     		ldr	r3, [r3]
 520 007a 0133     		adds	r3, r3, #1
 521 007c 1C4A     		ldr	r2, .L27+16
 522 007e 1360     		str	r3, [r2]
 783:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 784:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumberVariable also so kernel aware debuggers
 785:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			can detect that the task lists need re-generating. */
 786:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
 523              		.loc 1 786 0
 524 0080 1C4B     		ldr	r3, .L27+20
 525 0082 1B68     		ldr	r3, [r3]
 526 0084 0133     		adds	r3, r3, #1
 527 0086 1B4A     		ldr	r2, .L27+20
 528 0088 1360     		str	r3, [r2]
 787:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 788:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
 789:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 529              		.loc 1 790 0
 530 008a FFF7FEFF 		bl	vPortExitCritical
 791:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
 793:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
 794:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 531              		.loc 1 794 0
 532 008e 1A4B     		ldr	r3, .L27+24
 533 0090 1B68     		ldr	r3, [r3]
 534 0092 002B     		cmp	r3, #0
 535 0094 21D0     		beq	.L17
 795:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 796:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 536              		.loc 1 796 0
 537 0096 124B     		ldr	r3, .L27
 538 0098 1B68     		ldr	r3, [r3]
 539 009a FA68     		ldr	r2, [r7, #12]
 540 009c 9A42     		cmp	r2, r3
 541 009e 16D1     		bne	.L24
 797:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 798:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 542              		.loc 1 798 0
 543 00a0 164B     		ldr	r3, .L27+28
 544 00a2 1B68     		ldr	r3, [r3]
 545 00a4 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdaF48n.s 			page 28


 546 00a6 09D0     		beq	.L25
 547              	.LBB97:
 548              	.LBB98:
 549              		.loc 2 215 0 discriminator 1
 550              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 551 00a8 4FF05003 			mov r3, #80												
 552 00ac 83F31188 		msr basepri, r3											
 553 00b0 BFF36F8F 		isb														
 554 00b4 BFF34F8F 		dsb														
 555              	
 556              	@ 0 "" 2
 557              		.thumb
 558 00b8 BB60     		str	r3, [r7, #8]
 559              	.L26:
 560              	.LBE98:
 561              	.LBE97:
 562              		.loc 1 798 0 discriminator 1
 563 00ba FEE7     		b	.L26
 564              	.L25:
 799:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 800:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
 801:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
 802:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
 803:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
 804:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
 805:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
 806:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 565              		.loc 1 806 0
 566 00bc 104B     		ldr	r3, .L27+32
 567 00be 4FF08052 		mov	r2, #268435456
 568 00c2 1A60     		str	r2, [r3]
 569              	@ 806 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 570 00c4 BFF34F8F 		dsb
 571              	@ 0 "" 2
 572              	@ 806 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 573 00c8 BFF36F8F 		isb
 574              	@ 0 "" 2
 575              		.thumb
 576 00cc 05E0     		b	.L17
 577              	.L24:
 807:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 808:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 809:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
 811:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
 812:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
 578              		.loc 1 812 0
 579 00ce FFF7FEFF 		bl	vPortEnterCritical
 813:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 814:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 580              		.loc 1 814 0
 581 00d2 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 815:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 816:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
 582              		.loc 1 816 0
 583 00d6 FFF7FEFF 		bl	vPortExitCritical
 584              	.L17:
ARM GAS  /tmp/ccdaF48n.s 			page 29


 817:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 818:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 819:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 585              		.loc 1 819 0
 586 00da 1037     		adds	r7, r7, #16
 587              	.LCFI8:
 588              		.cfi_def_cfa_offset 8
 589 00dc BD46     		mov	sp, r7
 590              	.LCFI9:
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00de 80BD     		pop	{r7, pc}
 594              	.L28:
 595              		.align	2
 596              	.L27:
 597 00e0 00000000 		.word	pxCurrentTCB
 598 00e4 00000000 		.word	pxReadyTasksLists
 599 00e8 00000000 		.word	uxTopReadyPriority
 600 00ec 00000000 		.word	xTasksWaitingTermination
 601 00f0 00000000 		.word	uxTasksDeleted
 602 00f4 00000000 		.word	uxTaskNumber
 603 00f8 00000000 		.word	xSchedulerRunning
 604 00fc 00000000 		.word	uxSchedulerSuspended
 605 0100 04ED00E0 		.word	-536810236
 606              		.cfi_endproc
 607              	.LFE5:
 609              		.section	.text.vTaskDelay,"ax",%progbits
 610              		.align	2
 611              		.global	vTaskDelay
 612              		.thumb
 613              		.thumb_func
 615              	vTaskDelay:
 616              	.LFB6:
 820:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
 822:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
 825:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 826:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
 827:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 828:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 829:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 830:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 831:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
 832:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 833:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 834:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 835:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 836:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 837:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
 838:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
 839:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
 840:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 841:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
 842:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 843:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 30


 844:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
 845:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 846:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
 847:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
 848:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
 849:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
 850:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
 851:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
 852:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 853:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 854:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 855:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 856:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 857:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 858:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 859:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 860:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 861:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 862:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
 863:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
 864:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
 865:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
 866:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 867:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 868:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 869:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 870:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 871:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 872:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 873:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 874:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
 876:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 877:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
 879:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 880:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL();
 881:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the task from the ready list before adding it to the
 883:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				blocked list as the same list item is used for both lists. */
 884:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 885:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 886:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The current task must be in a ready list, so there is
 887:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					no need to check, and the port reset macro can be called
 888:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					directly. */
 889:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 890:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 891:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 892:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 893:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 894:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 895:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 896:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake );
 897:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 898:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 899:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 900:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccdaF48n.s 			page 31


 901:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 902:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 903:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 904:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 905:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 906:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
 907:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 908:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 909:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 910:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 911:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 912:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 913:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 914:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 915:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
 918:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 919:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 920:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
 921:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
 923:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 617              		.loc 1 923 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 24
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621 0000 80B5     		push	{r7, lr}
 622              	.LCFI10:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 7, -8
 625              		.cfi_offset 14, -4
 626 0002 86B0     		sub	sp, sp, #24
 627              	.LCFI11:
 628              		.cfi_def_cfa_offset 32
 629 0004 00AF     		add	r7, sp, #0
 630              	.LCFI12:
 631              		.cfi_def_cfa_register 7
 632 0006 7860     		str	r0, [r7, #4]
 924:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
 925:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 633              		.loc 1 925 0
 634 0008 0023     		movs	r3, #0
 635 000a 7B61     		str	r3, [r7, #20]
 926:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 927:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
 929:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
 636              		.loc 1 929 0
 637 000c 7B68     		ldr	r3, [r7, #4]
 638 000e 002B     		cmp	r3, #0
 639 0010 2FD0     		beq	.L30
 930:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 931:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
 640              		.loc 1 931 0
 641 0012 1F4B     		ldr	r3, .L35
 642 0014 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 32


 643 0016 002B     		cmp	r3, #0
 644 0018 09D0     		beq	.L31
 645              	.LBB99:
 646              	.LBB100:
 647              		.loc 2 215 0 discriminator 1
 648              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 649 001a 4FF05003 			mov r3, #80												
 650 001e 83F31188 		msr basepri, r3											
 651 0022 BFF36F8F 		isb														
 652 0026 BFF34F8F 		dsb														
 653              	
 654              	@ 0 "" 2
 655              		.thumb
 656 002a FB60     		str	r3, [r7, #12]
 657              	.L32:
 658              	.LBE100:
 659              	.LBE99:
 660              		.loc 1 931 0 discriminator 1
 661 002c FEE7     		b	.L32
 662              	.L31:
 932:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 663              		.loc 1 932 0
 664 002e FFF7FEFF 		bl	vTaskSuspendAll
 933:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 934:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
 935:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
 937:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
 938:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
 939:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
 940:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
 942:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
 943:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 944:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Calculate the time to wake - this may overflow but this is
 945:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not a problem. */
 946:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xTimeToWake = xTickCount + xTicksToDelay;
 665              		.loc 1 946 0
 666 0032 184B     		ldr	r3, .L35+4
 667 0034 1A68     		ldr	r2, [r3]
 668 0036 7B68     		ldr	r3, [r7, #4]
 669 0038 1344     		add	r3, r3, r2
 670 003a 3B61     		str	r3, [r7, #16]
 947:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* We must remove ourselves from the ready list before adding
 949:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ourselves to the blocked list as the same list item is used for
 950:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				both lists. */
 951:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 671              		.loc 1 951 0
 672 003c 164B     		ldr	r3, .L35+8
 673 003e 1B68     		ldr	r3, [r3]
 674 0040 0433     		adds	r3, r3, #4
 675 0042 1846     		mov	r0, r3
 676 0044 FFF7FEFF 		bl	uxListRemove
 677 0048 0346     		mov	r3, r0
 678 004a 002B     		cmp	r3, #0
 679 004c 0BD1     		bne	.L33
ARM GAS  /tmp/ccdaF48n.s 			page 33


 952:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 953:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The current task must be in a ready list, so there is
 954:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					no need to check, and the port reset macro can be called
 955:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					directly. */
 956:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 680              		.loc 1 956 0
 681 004e 124B     		ldr	r3, .L35+8
 682 0050 1B68     		ldr	r3, [r3]
 683 0052 DB6A     		ldr	r3, [r3, #44]
 684 0054 1A46     		mov	r2, r3
 685 0056 0123     		movs	r3, #1
 686 0058 9340     		lsls	r3, r3, r2
 687 005a DA43     		mvns	r2, r3
 688 005c 0F4B     		ldr	r3, .L35+12
 689 005e 1B68     		ldr	r3, [r3]
 690 0060 1340     		ands	r3, r3, r2
 691 0062 0E4A     		ldr	r2, .L35+12
 692 0064 1360     		str	r3, [r2]
 693              	.L33:
 957:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 958:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 959:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 960:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 961:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 962:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake );
 694              		.loc 1 962 0
 695 0066 3869     		ldr	r0, [r7, #16]
 696 0068 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 963:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 964:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 697              		.loc 1 964 0
 698 006c FFF7FEFF 		bl	xTaskResumeAll
 699 0070 7861     		str	r0, [r7, #20]
 700              	.L30:
 965:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 966:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 967:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 968:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 969:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 970:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 971:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
 972:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
 973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 701              		.loc 1 973 0
 702 0072 7B69     		ldr	r3, [r7, #20]
 703 0074 002B     		cmp	r3, #0
 704 0076 07D1     		bne	.L29
 974:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 975:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 705              		.loc 1 975 0
 706 0078 094B     		ldr	r3, .L35+16
 707 007a 4FF08052 		mov	r2, #268435456
 708 007e 1A60     		str	r2, [r3]
 709              	@ 975 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 710 0080 BFF34F8F 		dsb
 711              	@ 0 "" 2
 712              	@ 975 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
ARM GAS  /tmp/ccdaF48n.s 			page 34


 713 0084 BFF36F8F 		isb
 714              	@ 0 "" 2
 715              		.thumb
 716              	.L29:
 976:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 977:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 978:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 979:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 980:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 981:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 717              		.loc 1 981 0
 718 0088 1837     		adds	r7, r7, #24
 719              	.LCFI13:
 720              		.cfi_def_cfa_offset 8
 721 008a BD46     		mov	sp, r7
 722              	.LCFI14:
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 008c 80BD     		pop	{r7, pc}
 726              	.L36:
 727 008e 00BF     		.align	2
 728              	.L35:
 729 0090 00000000 		.word	uxSchedulerSuspended
 730 0094 00000000 		.word	xTickCount
 731 0098 00000000 		.word	pxCurrentTCB
 732 009c 00000000 		.word	uxTopReadyPriority
 733 00a0 04ED00E0 		.word	-536810236
 734              		.cfi_endproc
 735              	.LFE6:
 737              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 738              		.align	2
 739              		.global	uxTaskPriorityGet
 740              		.thumb
 741              		.thumb_func
 743              	uxTaskPriorityGet:
 744              	.LFB7:
 982:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 983:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
 984:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 985:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 986:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_eTaskGetState == 1 )
 987:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
 989:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
 991:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
 992:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 993:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
 995:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 996:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 997:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 998:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
 999:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1000:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1001:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1002:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccdaF48n.s 			page 35


1003:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1004:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1005:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xGenericListItem ) );
1006:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1007:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1008:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1009:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1010:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1011:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1012:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1013:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1014:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1015:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1016:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1017:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1018:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1019:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1020:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1021:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1022:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1023:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1024:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1025:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1026:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1027:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1028:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1029:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1030:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1031:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1032:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1033:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1034:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xTasksWaitingTermination )
1035:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1036:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1037:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list. */
1038:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1039:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1040:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1041:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1042:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1043:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1044:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1045:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1046:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1047:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1048:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1049:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1050:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1051:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1052:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1053:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1054:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1055:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1056:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1057:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1058:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1059:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccdaF48n.s 			page 36


 745              		.loc 1 1059 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 16
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              	.LCFI15:
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 84B0     		sub	sp, sp, #16
 755              	.LCFI16:
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI17:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
1060:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1061:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1062:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1063:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 761              		.loc 1 1063 0
 762 0008 FFF7FEFF 		bl	vPortEnterCritical
1064:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1065:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then we are changing the
1066:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority of the calling function. */
1067:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 763              		.loc 1 1067 0
 764 000c 7B68     		ldr	r3, [r7, #4]
 765 000e 002B     		cmp	r3, #0
 766 0010 02D1     		bne	.L38
 767              		.loc 1 1067 0 is_stmt 0 discriminator 1
 768 0012 074B     		ldr	r3, .L41
 769 0014 1B68     		ldr	r3, [r3]
 770 0016 00E0     		b	.L39
 771              	.L38:
 772              		.loc 1 1067 0 discriminator 2
 773 0018 7B68     		ldr	r3, [r7, #4]
 774              	.L39:
 775              		.loc 1 1067 0 discriminator 4
 776 001a FB60     		str	r3, [r7, #12]
1068:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 777              		.loc 1 1068 0 is_stmt 1 discriminator 4
 778 001c FB68     		ldr	r3, [r7, #12]
 779 001e DB6A     		ldr	r3, [r3, #44]
 780 0020 BB60     		str	r3, [r7, #8]
1069:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1070:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 781              		.loc 1 1070 0 discriminator 4
 782 0022 FFF7FEFF 		bl	vPortExitCritical
1071:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1072:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 783              		.loc 1 1072 0 discriminator 4
 784 0026 BB68     		ldr	r3, [r7, #8]
1073:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 785              		.loc 1 1073 0 discriminator 4
 786 0028 1846     		mov	r0, r3
 787 002a 1037     		adds	r7, r7, #16
ARM GAS  /tmp/ccdaF48n.s 			page 37


 788              	.LCFI18:
 789              		.cfi_def_cfa_offset 8
 790 002c BD46     		mov	sp, r7
 791              	.LCFI19:
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 002e 80BD     		pop	{r7, pc}
 795              	.L42:
 796              		.align	2
 797              	.L41:
 798 0030 00000000 		.word	pxCurrentTCB
 799              		.cfi_endproc
 800              	.LFE7:
 802              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 803              		.align	2
 804              		.global	uxTaskPriorityGetFromISR
 805              		.thumb
 806              		.thumb_func
 808              	uxTaskPriorityGetFromISR:
 809              	.LFB8:
1074:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1075:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1076:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1077:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1079:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1081:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 810              		.loc 1 1081 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 32
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              	.LCFI20:
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 88B0     		sub	sp, sp, #32
 820              	.LCFI21:
 821              		.cfi_def_cfa_offset 40
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI22:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
1082:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1083:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1084:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1085:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1086:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1087:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1088:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1089:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1090:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1091:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1092:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1093:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1094:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
ARM GAS  /tmp/ccdaF48n.s 			page 38


1095:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1096:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1097:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1098:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1099:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 826              		.loc 1 1101 0
 827 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 828              	.LBB101:
 829              	.LBB102:
 216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 830              		.loc 2 231 0
 831              	@ 231 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 832 000c EFF31182 			mrs r2, basepri											
 833 0010 4FF05003 		mov r3, #80												
 834 0014 83F31188 		msr basepri, r3											
 835 0018 BFF36F8F 		isb														
 836 001c BFF34F8F 		dsb														
 837              	
 838              	@ 0 "" 2
 839              		.thumb
 840 0020 3A61     		str	r2, [r7, #16]
 841 0022 FB60     		str	r3, [r7, #12]
 232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 842              		.loc 2 243 0
 843 0024 3B69     		ldr	r3, [r7, #16]
 844              	.LBE102:
 845              	.LBE101:
1102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  /tmp/ccdaF48n.s 			page 39


 846              		.loc 1 1103 0
 847 0026 FB61     		str	r3, [r7, #28]
1104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 848              		.loc 1 1107 0
 849 0028 7B68     		ldr	r3, [r7, #4]
 850 002a 002B     		cmp	r3, #0
 851 002c 02D1     		bne	.L45
 852              		.loc 1 1107 0 is_stmt 0 discriminator 1
 853 002e 094B     		ldr	r3, .L48
 854 0030 1B68     		ldr	r3, [r3]
 855 0032 00E0     		b	.L46
 856              	.L45:
 857              		.loc 1 1107 0 discriminator 2
 858 0034 7B68     		ldr	r3, [r7, #4]
 859              	.L46:
 860              		.loc 1 1107 0 discriminator 4
 861 0036 BB61     		str	r3, [r7, #24]
1108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 862              		.loc 1 1108 0 is_stmt 1 discriminator 4
 863 0038 BB69     		ldr	r3, [r7, #24]
 864 003a DB6A     		ldr	r3, [r3, #44]
 865 003c 7B61     		str	r3, [r7, #20]
 866 003e FB69     		ldr	r3, [r7, #28]
 867 0040 BB60     		str	r3, [r7, #8]
 868              	.LBB103:
 869              	.LBB104:
 244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 870              		.loc 2 249 0 discriminator 4
 871 0042 BB68     		ldr	r3, [r7, #8]
 872              	@ 249 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 873 0044 83F31188 			msr basepri, r3	
 874              	@ 0 "" 2
 875              		.thumb
 876              	.LBE104:
 877              	.LBE103:
1109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 878              		.loc 1 1112 0 discriminator 4
 879 0048 7B69     		ldr	r3, [r7, #20]
1113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 880              		.loc 1 1113 0 discriminator 4
 881 004a 1846     		mov	r0, r3
 882 004c 2037     		adds	r7, r7, #32
 883              	.LCFI23:
 884              		.cfi_def_cfa_offset 8
 885 004e BD46     		mov	sp, r7
 886              	.LCFI24:
ARM GAS  /tmp/ccdaF48n.s 			page 40


 887              		.cfi_def_cfa_register 13
 888              		@ sp needed
 889 0050 80BD     		pop	{r7, pc}
 890              	.L49:
 891 0052 00BF     		.align	2
 892              	.L48:
 893 0054 00000000 		.word	pxCurrentTCB
 894              		.cfi_endproc
 895              	.LFE8:
 897              		.section	.text.vTaskPrioritySet,"ax",%progbits
 898              		.align	2
 899              		.global	vTaskPrioritySet
 900              		.thumb
 901              		.thumb_func
 903              	vTaskPrioritySet:
 904              	.LFB9:
1114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 905              		.loc 1 1121 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 32
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              	.LCFI25:
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 88B0     		sub	sp, sp, #32
 915              	.LCFI26:
 916              		.cfi_def_cfa_offset 40
 917 0004 00AF     		add	r7, sp, #0
 918              	.LCFI27:
 919              		.cfi_def_cfa_register 7
 920 0006 7860     		str	r0, [r7, #4]
 921 0008 3960     		str	r1, [r7]
1122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 922              		.loc 1 1124 0
 923 000a 0023     		movs	r3, #0
 924 000c FB61     		str	r3, [r7, #28]
1125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 925              		.loc 1 1126 0
 926 000e 3B68     		ldr	r3, [r7]
 927 0010 062B     		cmp	r3, #6
 928 0012 09D9     		bls	.L51
 929              	.LBB105:
 930              	.LBB106:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 931              		.loc 2 215 0 discriminator 1
ARM GAS  /tmp/ccdaF48n.s 			page 41


 932              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 933 0014 4FF05003 			mov r3, #80												
 934 0018 83F31188 		msr basepri, r3											
 935 001c BFF36F8F 		isb														
 936 0020 BFF34F8F 		dsb														
 937              	
 938              	@ 0 "" 2
 939              		.thumb
 940 0024 FB60     		str	r3, [r7, #12]
 941              	.L52:
 942              	.LBE106:
 943              	.LBE105:
 944              		.loc 1 1126 0 discriminator 1
 945 0026 FEE7     		b	.L52
 946              	.L51:
1127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 947              		.loc 1 1129 0
 948 0028 3B68     		ldr	r3, [r7]
 949 002a 062B     		cmp	r3, #6
 950 002c 01D9     		bls	.L53
1130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 951              		.loc 1 1131 0
 952 002e 0623     		movs	r3, #6
 953 0030 3B60     		str	r3, [r7]
 954              	.L53:
1132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 955              		.loc 1 1138 0
 956 0032 FFF7FEFF 		bl	vPortEnterCritical
1139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 957              		.loc 1 1142 0
 958 0036 7B68     		ldr	r3, [r7, #4]
 959 0038 002B     		cmp	r3, #0
 960 003a 02D1     		bne	.L54
 961              		.loc 1 1142 0 is_stmt 0 discriminator 1
 962 003c 434B     		ldr	r3, .L65
 963 003e 1B68     		ldr	r3, [r3]
 964 0040 00E0     		b	.L55
 965              	.L54:
 966              		.loc 1 1142 0 discriminator 2
 967 0042 7B68     		ldr	r3, [r7, #4]
 968              	.L55:
 969              		.loc 1 1142 0 discriminator 4
 970 0044 BB61     		str	r3, [r7, #24]
1143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
ARM GAS  /tmp/ccdaF48n.s 			page 42


1145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
 971              		.loc 1 1148 0 is_stmt 1 discriminator 4
 972 0046 BB69     		ldr	r3, [r7, #24]
 973 0048 DB6C     		ldr	r3, [r3, #76]
 974 004a 7B61     		str	r3, [r7, #20]
1149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
 975              		.loc 1 1156 0 discriminator 4
 976 004c 7A69     		ldr	r2, [r7, #20]
 977 004e 3B68     		ldr	r3, [r7]
 978 0050 9A42     		cmp	r2, r3
 979 0052 76D0     		beq	.L56
1157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
 980              		.loc 1 1160 0
 981 0054 3A68     		ldr	r2, [r7]
 982 0056 7B69     		ldr	r3, [r7, #20]
 983 0058 9A42     		cmp	r2, r3
 984 005a 0DD9     		bls	.L57
1161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
 985              		.loc 1 1162 0
 986 005c 3B4B     		ldr	r3, .L65
 987 005e 1B68     		ldr	r3, [r3]
 988 0060 BA69     		ldr	r2, [r7, #24]
 989 0062 9A42     		cmp	r2, r3
 990 0064 0FD0     		beq	.L58
1163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
 991              		.loc 1 1167 0
 992 0066 394B     		ldr	r3, .L65
 993 0068 1B68     		ldr	r3, [r3]
 994 006a DA6A     		ldr	r2, [r3, #44]
 995 006c 3B68     		ldr	r3, [r7]
 996 006e 9A42     		cmp	r2, r3
 997 0070 09D8     		bhi	.L58
1168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
 998              		.loc 1 1169 0
 999 0072 0123     		movs	r3, #1
 1000 0074 FB61     		str	r3, [r7, #28]
 1001 0076 06E0     		b	.L58
 1002              	.L57:
ARM GAS  /tmp/ccdaF48n.s 			page 43


1170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
 1003              		.loc 1 1183 0
 1004 0078 344B     		ldr	r3, .L65
 1005 007a 1B68     		ldr	r3, [r3]
 1006 007c BA69     		ldr	r2, [r7, #24]
 1007 007e 9A42     		cmp	r2, r3
 1008 0080 01D1     		bne	.L58
1184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
 1009              		.loc 1 1188 0
 1010 0082 0123     		movs	r3, #1
 1011 0084 FB61     		str	r3, [r7, #28]
 1012              	.L58:
1189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
 1013              		.loc 1 1200 0
 1014 0086 BB69     		ldr	r3, [r7, #24]
 1015 0088 DB6A     		ldr	r3, [r3, #44]
 1016 008a 3B61     		str	r3, [r7, #16]
1201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 1017              		.loc 1 1206 0
 1018 008c BB69     		ldr	r3, [r7, #24]
 1019 008e DA6C     		ldr	r2, [r3, #76]
 1020 0090 BB69     		ldr	r3, [r7, #24]
 1021 0092 DB6A     		ldr	r3, [r3, #44]
 1022 0094 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccdaF48n.s 			page 44


 1023 0096 02D1     		bne	.L59
1207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 1024              		.loc 1 1208 0
 1025 0098 BB69     		ldr	r3, [r7, #24]
 1026 009a 3A68     		ldr	r2, [r7]
 1027 009c DA62     		str	r2, [r3, #44]
 1028              	.L59:
1209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 1029              		.loc 1 1216 0
 1030 009e BB69     		ldr	r3, [r7, #24]
 1031 00a0 3A68     		ldr	r2, [r7]
 1032 00a2 DA64     		str	r2, [r3, #76]
1217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
 1033              		.loc 1 1226 0
 1034 00a4 BB69     		ldr	r3, [r7, #24]
 1035 00a6 9B69     		ldr	r3, [r3, #24]
 1036 00a8 002B     		cmp	r3, #0
 1037 00aa 04DB     		blt	.L60
1227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
 1038              		.loc 1 1228 0
 1039 00ac 3B68     		ldr	r3, [r7]
 1040 00ae C3F10702 		rsb	r2, r3, #7
 1041 00b2 BB69     		ldr	r3, [r7, #24]
 1042 00b4 9A61     		str	r2, [r3, #24]
 1043              	.L60:
1229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xGeneri
 1044              		.loc 1 1239 0
 1045 00b6 BB69     		ldr	r3, [r7, #24]
 1046 00b8 5969     		ldr	r1, [r3, #20]
ARM GAS  /tmp/ccdaF48n.s 			page 45


 1047 00ba 3A69     		ldr	r2, [r7, #16]
 1048 00bc 1346     		mov	r3, r2
 1049 00be 9B00     		lsls	r3, r3, #2
 1050 00c0 1344     		add	r3, r3, r2
 1051 00c2 9B00     		lsls	r3, r3, #2
 1052 00c4 224A     		ldr	r2, .L65+4
 1053 00c6 1344     		add	r3, r3, r2
 1054 00c8 9942     		cmp	r1, r3
 1055 00ca 01D1     		bne	.L61
 1056              		.loc 1 1239 0 is_stmt 0 discriminator 1
 1057 00cc 0123     		movs	r3, #1
 1058 00ce 00E0     		b	.L62
 1059              	.L61:
 1060              		.loc 1 1239 0 discriminator 2
 1061 00d0 0023     		movs	r3, #0
 1062              	.L62:
 1063              		.loc 1 1239 0 discriminator 4
 1064 00d2 002B     		cmp	r3, #0
 1065 00d4 2AD0     		beq	.L63
1240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 1066              		.loc 1 1244 0 is_stmt 1
 1067 00d6 BB69     		ldr	r3, [r7, #24]
 1068 00d8 0433     		adds	r3, r3, #4
 1069 00da 1846     		mov	r0, r3
 1070 00dc FFF7FEFF 		bl	uxListRemove
 1071 00e0 0346     		mov	r3, r0
 1072 00e2 002B     		cmp	r3, #0
 1073 00e4 09D1     		bne	.L64
1245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
 1074              		.loc 1 1249 0
 1075 00e6 3B69     		ldr	r3, [r7, #16]
 1076 00e8 0122     		movs	r2, #1
 1077 00ea 02FA03F3 		lsl	r3, r2, r3
 1078 00ee DA43     		mvns	r2, r3
 1079 00f0 184B     		ldr	r3, .L65+8
 1080 00f2 1B68     		ldr	r3, [r3]
 1081 00f4 1340     		ands	r3, r3, r2
 1082 00f6 174A     		ldr	r2, .L65+8
 1083 00f8 1360     		str	r3, [r2]
 1084              	.L64:
1250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1251:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1252:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1253:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1254:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1255:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1085              		.loc 1 1255 0
 1086 00fa BB69     		ldr	r3, [r7, #24]
 1087 00fc DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/ccdaF48n.s 			page 46


 1088 00fe 1A46     		mov	r2, r3
 1089 0100 0123     		movs	r3, #1
 1090 0102 03FA02F2 		lsl	r2, r3, r2
 1091 0106 134B     		ldr	r3, .L65+8
 1092 0108 1B68     		ldr	r3, [r3]
 1093 010a 1343     		orrs	r3, r3, r2
 1094 010c 114A     		ldr	r2, .L65+8
 1095 010e 1360     		str	r3, [r2]
 1096 0110 BB69     		ldr	r3, [r7, #24]
 1097 0112 DA6A     		ldr	r2, [r3, #44]
 1098 0114 1346     		mov	r3, r2
 1099 0116 9B00     		lsls	r3, r3, #2
 1100 0118 1344     		add	r3, r3, r2
 1101 011a 9B00     		lsls	r3, r3, #2
 1102 011c 0C4A     		ldr	r2, .L65+4
 1103 011e 1A44     		add	r2, r2, r3
 1104 0120 BB69     		ldr	r3, [r7, #24]
 1105 0122 0433     		adds	r3, r3, #4
 1106 0124 1046     		mov	r0, r2
 1107 0126 1946     		mov	r1, r3
 1108 0128 FFF7FEFF 		bl	vListInsertEnd
 1109              	.L63:
1256:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1257:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1258:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1259:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1260:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1261:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired == pdTRUE )
 1110              		.loc 1 1262 0
 1111 012c FB69     		ldr	r3, [r7, #28]
 1112 012e 012B     		cmp	r3, #1
 1113 0130 07D1     		bne	.L56
1263:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1264:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 1114              		.loc 1 1264 0
 1115 0132 094B     		ldr	r3, .L65+12
 1116 0134 4FF08052 		mov	r2, #268435456
 1117 0138 1A60     		str	r2, [r3]
 1118              	@ 1264 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1119 013a BFF34F8F 		dsb
 1120              	@ 0 "" 2
 1121              	@ 1264 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1122 013e BFF36F8F 		isb
 1123              	@ 0 "" 2
 1124              		.thumb
 1125              	.L56:
1265:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1266:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1267:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1268:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1269:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1270:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1271:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1272:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1273:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1274:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccdaF48n.s 			page 47


1275:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1276:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1126              		.loc 1 1276 0
 1127 0142 FFF7FEFF 		bl	vPortExitCritical
1277:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1128              		.loc 1 1277 0
 1129 0146 2037     		adds	r7, r7, #32
 1130              	.LCFI28:
 1131              		.cfi_def_cfa_offset 8
 1132 0148 BD46     		mov	sp, r7
 1133              	.LCFI29:
 1134              		.cfi_def_cfa_register 13
 1135              		@ sp needed
 1136 014a 80BD     		pop	{r7, pc}
 1137              	.L66:
 1138              		.align	2
 1139              	.L65:
 1140 014c 00000000 		.word	pxCurrentTCB
 1141 0150 00000000 		.word	pxReadyTasksLists
 1142 0154 00000000 		.word	uxTopReadyPriority
 1143 0158 04ED00E0 		.word	-536810236
 1144              		.cfi_endproc
 1145              	.LFE9:
 1147              		.section	.text.vTaskSuspend,"ax",%progbits
 1148              		.align	2
 1149              		.global	vTaskSuspend
 1150              		.thumb
 1151              		.thumb_func
 1153              	vTaskSuspend:
 1154              	.LFB10:
1278:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1279:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1280:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1281:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1283:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1284:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1285:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1155              		.loc 1 1285 0
 1156              		.cfi_startproc
 1157              		@ args = 0, pretend = 0, frame = 16
 1158              		@ frame_needed = 1, uses_anonymous_args = 0
 1159 0000 80B5     		push	{r7, lr}
 1160              	.LCFI30:
 1161              		.cfi_def_cfa_offset 8
 1162              		.cfi_offset 7, -8
 1163              		.cfi_offset 14, -4
 1164 0002 84B0     		sub	sp, sp, #16
 1165              	.LCFI31:
 1166              		.cfi_def_cfa_offset 24
 1167 0004 00AF     		add	r7, sp, #0
 1168              	.LCFI32:
 1169              		.cfi_def_cfa_register 7
 1170 0006 7860     		str	r0, [r7, #4]
1286:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1287:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1288:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
ARM GAS  /tmp/ccdaF48n.s 			page 48


 1171              		.loc 1 1288 0
 1172 0008 FFF7FEFF 		bl	vPortEnterCritical
1289:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1290:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1291:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1292:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 1173              		.loc 1 1292 0
 1174 000c 7B68     		ldr	r3, [r7, #4]
 1175 000e 002B     		cmp	r3, #0
 1176 0010 02D1     		bne	.L68
 1177              		.loc 1 1292 0 is_stmt 0 discriminator 1
 1178 0012 374B     		ldr	r3, .L80
 1179 0014 1B68     		ldr	r3, [r3]
 1180 0016 00E0     		b	.L69
 1181              	.L68:
 1182              		.loc 1 1292 0 discriminator 2
 1183 0018 7B68     		ldr	r3, [r7, #4]
 1184              	.L69:
 1185              		.loc 1 1292 0 discriminator 4
 1186 001a FB60     		str	r3, [r7, #12]
1293:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1295:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1296:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1297:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1298:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 1187              		.loc 1 1298 0 is_stmt 1 discriminator 4
 1188 001c FB68     		ldr	r3, [r7, #12]
 1189 001e 0433     		adds	r3, r3, #4
 1190 0020 1846     		mov	r0, r3
 1191 0022 FFF7FEFF 		bl	uxListRemove
 1192 0026 0346     		mov	r3, r0
 1193 0028 002B     		cmp	r3, #0
 1194 002a 15D1     		bne	.L70
1299:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1300:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 1195              		.loc 1 1300 0
 1196 002c FB68     		ldr	r3, [r7, #12]
 1197 002e DA6A     		ldr	r2, [r3, #44]
 1198 0030 3049     		ldr	r1, .L80+4
 1199 0032 1346     		mov	r3, r2
 1200 0034 9B00     		lsls	r3, r3, #2
 1201 0036 1344     		add	r3, r3, r2
 1202 0038 9B00     		lsls	r3, r3, #2
 1203 003a 0B44     		add	r3, r3, r1
 1204 003c 1B68     		ldr	r3, [r3]
 1205 003e 002B     		cmp	r3, #0
 1206 0040 0AD1     		bne	.L70
 1207              		.loc 1 1300 0 is_stmt 0 discriminator 1
 1208 0042 FB68     		ldr	r3, [r7, #12]
 1209 0044 DB6A     		ldr	r3, [r3, #44]
 1210 0046 1A46     		mov	r2, r3
 1211 0048 0123     		movs	r3, #1
 1212 004a 9340     		lsls	r3, r3, r2
 1213 004c DA43     		mvns	r2, r3
 1214 004e 2A4B     		ldr	r3, .L80+8
 1215 0050 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 49


 1216 0052 1340     		ands	r3, r3, r2
 1217 0054 284A     		ldr	r2, .L80+8
 1218 0056 1360     		str	r3, [r2]
 1219              	.L70:
1301:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1302:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1303:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1304:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1305:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1306:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1307:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1308:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 1220              		.loc 1 1308 0 is_stmt 1
 1221 0058 FB68     		ldr	r3, [r7, #12]
 1222 005a 9B6A     		ldr	r3, [r3, #40]
 1223 005c 002B     		cmp	r3, #0
 1224 005e 04D0     		beq	.L72
1309:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1310:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1225              		.loc 1 1310 0
 1226 0060 FB68     		ldr	r3, [r7, #12]
 1227 0062 1833     		adds	r3, r3, #24
 1228 0064 1846     		mov	r0, r3
 1229 0066 FFF7FEFF 		bl	uxListRemove
 1230              	.L72:
1311:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1312:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1313:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1314:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1315:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1316:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1317:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) );
 1231              		.loc 1 1317 0
 1232 006a FB68     		ldr	r3, [r7, #12]
 1233 006c 0433     		adds	r3, r3, #4
 1234 006e 2348     		ldr	r0, .L80+12
 1235 0070 1946     		mov	r1, r3
 1236 0072 FFF7FEFF 		bl	vListInsertEnd
1318:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1319:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1237              		.loc 1 1319 0
 1238 0076 FFF7FEFF 		bl	vPortExitCritical
1320:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1321:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1239              		.loc 1 1321 0
 1240 007a 1D4B     		ldr	r3, .L80
 1241 007c 1B68     		ldr	r3, [r3]
 1242 007e FA68     		ldr	r2, [r7, #12]
 1243 0080 9A42     		cmp	r2, r3
 1244 0082 27D1     		bne	.L73
1322:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1323:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 1245              		.loc 1 1323 0
 1246 0084 1E4B     		ldr	r3, .L80+16
 1247 0086 1B68     		ldr	r3, [r3]
 1248 0088 002B     		cmp	r3, #0
 1249 008a 16D0     		beq	.L74
ARM GAS  /tmp/ccdaF48n.s 			page 50


1324:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1325:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1326:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 1250              		.loc 1 1326 0
 1251 008c 1D4B     		ldr	r3, .L80+20
 1252 008e 1B68     		ldr	r3, [r3]
 1253 0090 002B     		cmp	r3, #0
 1254 0092 09D0     		beq	.L75
 1255              	.LBB107:
 1256              	.LBB108:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1257              		.loc 2 215 0 discriminator 1
 1258              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1259 0094 4FF05003 			mov r3, #80												
 1260 0098 83F31188 		msr basepri, r3											
 1261 009c BFF36F8F 		isb														
 1262 00a0 BFF34F8F 		dsb														
 1263              	
 1264              	@ 0 "" 2
 1265              		.thumb
 1266 00a4 BB60     		str	r3, [r7, #8]
 1267              	.L76:
 1268              	.LBE108:
 1269              	.LBE107:
 1270              		.loc 1 1326 0 discriminator 1
 1271 00a6 FEE7     		b	.L76
 1272              	.L75:
1327:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1273              		.loc 1 1327 0
 1274 00a8 174B     		ldr	r3, .L80+24
 1275 00aa 4FF08052 		mov	r2, #268435456
 1276 00ae 1A60     		str	r2, [r3]
 1277              	@ 1327 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1278 00b0 BFF34F8F 		dsb
 1279              	@ 0 "" 2
 1280              	@ 1327 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1281 00b4 BFF36F8F 		isb
 1282              	@ 0 "" 2
 1283              		.thumb
 1284 00b8 16E0     		b	.L67
 1285              	.L74:
1328:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1329:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1330:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1331:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1332:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1333:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1334:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
 1286              		.loc 1 1334 0
 1287 00ba 104B     		ldr	r3, .L80+12
 1288 00bc 1A68     		ldr	r2, [r3]
 1289 00be 134B     		ldr	r3, .L80+28
 1290 00c0 1B68     		ldr	r3, [r3]
 1291 00c2 9A42     		cmp	r2, r3
 1292 00c4 03D1     		bne	.L78
1335:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1336:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
ARM GAS  /tmp/ccdaF48n.s 			page 51


1337:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1338:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1339:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1340:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
 1293              		.loc 1 1340 0
 1294 00c6 0A4B     		ldr	r3, .L80
 1295 00c8 0022     		movs	r2, #0
 1296 00ca 1A60     		str	r2, [r3]
 1297 00cc 0CE0     		b	.L67
 1298              	.L78:
1341:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1342:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1343:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1344:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
 1299              		.loc 1 1344 0
 1300 00ce FFF7FEFF 		bl	vTaskSwitchContext
 1301 00d2 09E0     		b	.L67
 1302              	.L73:
1345:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1346:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1347:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1348:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1349:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1350:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 1303              		.loc 1 1350 0
 1304 00d4 0A4B     		ldr	r3, .L80+16
 1305 00d6 1B68     		ldr	r3, [r3]
 1306 00d8 002B     		cmp	r3, #0
 1307 00da 05D0     		beq	.L67
1351:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1352:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task other than the currently running task was suspended,
1353:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				reset the next expected unblock time in case it referred to the
1354:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task that is now in the Suspended state. */
1355:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
 1308              		.loc 1 1355 0
 1309 00dc FFF7FEFF 		bl	vPortEnterCritical
1356:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1357:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 1310              		.loc 1 1357 0
 1311 00e0 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
1358:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1359:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
 1312              		.loc 1 1359 0
 1313 00e4 FFF7FEFF 		bl	vPortExitCritical
 1314              	.L67:
1360:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1361:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1362:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1363:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1364:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1365:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1366:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1315              		.loc 1 1366 0
 1316 00e8 1037     		adds	r7, r7, #16
 1317              	.LCFI33:
 1318              		.cfi_def_cfa_offset 8
 1319 00ea BD46     		mov	sp, r7
ARM GAS  /tmp/ccdaF48n.s 			page 52


 1320              	.LCFI34:
 1321              		.cfi_def_cfa_register 13
 1322              		@ sp needed
 1323 00ec 80BD     		pop	{r7, pc}
 1324              	.L81:
 1325 00ee 00BF     		.align	2
 1326              	.L80:
 1327 00f0 00000000 		.word	pxCurrentTCB
 1328 00f4 00000000 		.word	pxReadyTasksLists
 1329 00f8 00000000 		.word	uxTopReadyPriority
 1330 00fc 00000000 		.word	xSuspendedTaskList
 1331 0100 00000000 		.word	xSchedulerRunning
 1332 0104 00000000 		.word	uxSchedulerSuspended
 1333 0108 04ED00E0 		.word	-536810236
 1334 010c 00000000 		.word	uxCurrentNumberOfTasks
 1335              		.cfi_endproc
 1336              	.LFE10:
 1338              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
 1339              		.align	2
 1340              		.thumb
 1341              		.thumb_func
 1343              	prvTaskIsTaskSuspended:
 1344              	.LFB11:
1367:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1368:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1369:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1370:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1371:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1372:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1373:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1374:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1345              		.loc 1 1374 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 24
 1348              		@ frame_needed = 1, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350 0000 80B4     		push	{r7}
 1351              	.LCFI35:
 1352              		.cfi_def_cfa_offset 4
 1353              		.cfi_offset 7, -4
 1354 0002 87B0     		sub	sp, sp, #28
 1355              	.LCFI36:
 1356              		.cfi_def_cfa_offset 32
 1357 0004 00AF     		add	r7, sp, #0
 1358              	.LCFI37:
 1359              		.cfi_def_cfa_register 7
 1360 0006 7860     		str	r0, [r7, #4]
1375:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 1361              		.loc 1 1375 0
 1362 0008 0023     		movs	r3, #0
 1363 000a 7B61     		str	r3, [r7, #20]
1376:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 1364              		.loc 1 1376 0
 1365 000c 7B68     		ldr	r3, [r7, #4]
 1366 000e 3B61     		str	r3, [r7, #16]
1377:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1378:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
ARM GAS  /tmp/ccdaF48n.s 			page 53


1379:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1380:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1382:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
 1367              		.loc 1 1382 0
 1368 0010 7B68     		ldr	r3, [r7, #4]
 1369 0012 002B     		cmp	r3, #0
 1370 0014 09D1     		bne	.L83
 1371              	.LBB109:
 1372              	.LBB110:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1373              		.loc 2 215 0 discriminator 1
 1374              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1375 0016 4FF05003 			mov r3, #80												
 1376 001a 83F31188 		msr basepri, r3											
 1377 001e BFF36F8F 		isb														
 1378 0022 BFF34F8F 		dsb														
 1379              	
 1380              	@ 0 "" 2
 1381              		.thumb
 1382 0026 FB60     		str	r3, [r7, #12]
 1383              	.L84:
 1384              	.LBE110:
 1385              	.LBE109:
 1386              		.loc 1 1382 0 discriminator 1
 1387 0028 FEE7     		b	.L84
 1388              	.L83:
1383:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1385:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xGenericListItem ) ) != pdFALSE )
 1389              		.loc 1 1385 0
 1390 002a 3B69     		ldr	r3, [r7, #16]
 1391 002c 5B69     		ldr	r3, [r3, #20]
 1392 002e 0F4A     		ldr	r2, .L91
 1393 0030 9342     		cmp	r3, r2
 1394 0032 01D1     		bne	.L85
 1395              		.loc 1 1385 0 is_stmt 0 discriminator 1
 1396 0034 0123     		movs	r3, #1
 1397 0036 00E0     		b	.L86
 1398              	.L85:
 1399              		.loc 1 1385 0 discriminator 2
 1400 0038 0023     		movs	r3, #0
 1401              	.L86:
 1402              		.loc 1 1385 0 discriminator 4
 1403 003a 002B     		cmp	r3, #0
 1404 003c 0FD0     		beq	.L87
1386:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1387:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1388:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 1405              		.loc 1 1388 0 is_stmt 1
 1406 003e 3B69     		ldr	r3, [r7, #16]
 1407 0040 9B6A     		ldr	r3, [r3, #40]
 1408 0042 0B4A     		ldr	r2, .L91+4
 1409 0044 9342     		cmp	r3, r2
 1410 0046 0AD0     		beq	.L87
1389:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1390:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
ARM GAS  /tmp/ccdaF48n.s 			page 54


1391:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1392:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
 1411              		.loc 1 1392 0
 1412 0048 3B69     		ldr	r3, [r7, #16]
 1413 004a 9B6A     		ldr	r3, [r3, #40]
 1414 004c 002B     		cmp	r3, #0
 1415 004e 01D1     		bne	.L88
 1416              		.loc 1 1392 0 is_stmt 0 discriminator 1
 1417 0050 0123     		movs	r3, #1
 1418 0052 00E0     		b	.L89
 1419              	.L88:
 1420              		.loc 1 1392 0 discriminator 2
 1421 0054 0023     		movs	r3, #0
 1422              	.L89:
 1423              		.loc 1 1392 0 discriminator 4
 1424 0056 002B     		cmp	r3, #0
 1425 0058 01D0     		beq	.L87
1393:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1394:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 1426              		.loc 1 1394 0 is_stmt 1
 1427 005a 0123     		movs	r3, #1
 1428 005c 7B61     		str	r3, [r7, #20]
 1429              	.L87:
1395:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1396:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1397:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1398:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1399:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1400:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1401:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1402:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1404:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1405:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1406:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1407:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1408:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1409:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1411:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 1430              		.loc 1 1411 0
 1431 005e 7B69     		ldr	r3, [r7, #20]
1412:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1432              		.loc 1 1412 0
 1433 0060 1846     		mov	r0, r3
 1434 0062 1C37     		adds	r7, r7, #28
 1435              	.LCFI38:
 1436              		.cfi_def_cfa_offset 4
 1437 0064 BD46     		mov	sp, r7
 1438              	.LCFI39:
 1439              		.cfi_def_cfa_register 13
 1440              		@ sp needed
 1441 0066 5DF8047B 		ldr	r7, [sp], #4
 1442              	.LCFI40:
 1443              		.cfi_restore 7
 1444              		.cfi_def_cfa_offset 0
 1445 006a 7047     		bx	lr
ARM GAS  /tmp/ccdaF48n.s 			page 55


 1446              	.L92:
 1447              		.align	2
 1448              	.L91:
 1449 006c 00000000 		.word	xSuspendedTaskList
 1450 0070 00000000 		.word	xPendingReadyList
 1451              		.cfi_endproc
 1452              	.LFE11:
 1454              		.section	.text.vTaskResume,"ax",%progbits
 1455              		.align	2
 1456              		.global	vTaskResume
 1457              		.thumb
 1458              		.thumb_func
 1460              	vTaskResume:
 1461              	.LFB12:
1413:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1414:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1415:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1416:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1417:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1418:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1419:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1420:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1462              		.loc 1 1420 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 16
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              	.LCFI41:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 84B0     		sub	sp, sp, #16
 1472              	.LCFI42:
 1473              		.cfi_def_cfa_offset 24
 1474 0004 00AF     		add	r7, sp, #0
 1475              	.LCFI43:
 1476              		.cfi_def_cfa_register 7
 1477 0006 7860     		str	r0, [r7, #4]
1421:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1478              		.loc 1 1421 0
 1479 0008 7B68     		ldr	r3, [r7, #4]
 1480 000a FB60     		str	r3, [r7, #12]
1422:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1423:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1424:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 1481              		.loc 1 1424 0
 1482 000c 7B68     		ldr	r3, [r7, #4]
 1483 000e 002B     		cmp	r3, #0
 1484 0010 09D1     		bne	.L94
 1485              	.LBB111:
 1486              	.LBB112:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1487              		.loc 2 215 0 discriminator 1
 1488              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1489 0012 4FF05003 			mov r3, #80												
 1490 0016 83F31188 		msr basepri, r3											
 1491 001a BFF36F8F 		isb														
ARM GAS  /tmp/ccdaF48n.s 			page 56


 1492 001e BFF34F8F 		dsb														
 1493              	
 1494              	@ 0 "" 2
 1495              		.thumb
 1496 0022 BB60     		str	r3, [r7, #8]
 1497              	.L95:
 1498              	.LBE112:
 1499              	.LBE111:
 1500              		.loc 1 1424 0 discriminator 1
 1501 0024 FEE7     		b	.L95
 1502              	.L94:
1425:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1426:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1427:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1428:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
 1503              		.loc 1 1428 0
 1504 0026 FB68     		ldr	r3, [r7, #12]
 1505 0028 002B     		cmp	r3, #0
 1506 002a 3BD0     		beq	.L93
 1507              		.loc 1 1428 0 is_stmt 0 discriminator 1
 1508 002c 1F4B     		ldr	r3, .L98
 1509 002e 1B68     		ldr	r3, [r3]
 1510 0030 FA68     		ldr	r2, [r7, #12]
 1511 0032 9A42     		cmp	r2, r3
 1512 0034 36D0     		beq	.L93
1429:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1430:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1513              		.loc 1 1430 0 is_stmt 1
 1514 0036 FFF7FEFF 		bl	vPortEnterCritical
1431:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1432:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 1515              		.loc 1 1432 0
 1516 003a F868     		ldr	r0, [r7, #12]
 1517 003c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1518 0040 0346     		mov	r3, r0
 1519 0042 012B     		cmp	r3, #1
 1520 0044 2CD1     		bne	.L97
1433:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1434:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1435:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1436:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1437:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					lists even if the scheduler is suspended. */
1438:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xGenericListItem ) );
 1521              		.loc 1 1438 0
 1522 0046 FB68     		ldr	r3, [r7, #12]
 1523 0048 0433     		adds	r3, r3, #4
 1524 004a 1846     		mov	r0, r3
 1525 004c FFF7FEFF 		bl	uxListRemove
1439:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1526              		.loc 1 1439 0
 1527 0050 FB68     		ldr	r3, [r7, #12]
 1528 0052 DB6A     		ldr	r3, [r3, #44]
 1529 0054 1A46     		mov	r2, r3
 1530 0056 0123     		movs	r3, #1
 1531 0058 03FA02F2 		lsl	r2, r3, r2
 1532 005c 144B     		ldr	r3, .L98+4
 1533 005e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 57


 1534 0060 1343     		orrs	r3, r3, r2
 1535 0062 134A     		ldr	r2, .L98+4
 1536 0064 1360     		str	r3, [r2]
 1537 0066 FB68     		ldr	r3, [r7, #12]
 1538 0068 DA6A     		ldr	r2, [r3, #44]
 1539 006a 1346     		mov	r3, r2
 1540 006c 9B00     		lsls	r3, r3, #2
 1541 006e 1344     		add	r3, r3, r2
 1542 0070 9B00     		lsls	r3, r3, #2
 1543 0072 104A     		ldr	r2, .L98+8
 1544 0074 1A44     		add	r2, r2, r3
 1545 0076 FB68     		ldr	r3, [r7, #12]
 1546 0078 0433     		adds	r3, r3, #4
 1547 007a 1046     		mov	r0, r2
 1548 007c 1946     		mov	r1, r3
 1549 007e FFF7FEFF 		bl	vListInsertEnd
1440:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1441:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1442:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1550              		.loc 1 1442 0
 1551 0082 FB68     		ldr	r3, [r7, #12]
 1552 0084 DA6A     		ldr	r2, [r3, #44]
 1553 0086 094B     		ldr	r3, .L98
 1554 0088 1B68     		ldr	r3, [r3]
 1555 008a DB6A     		ldr	r3, [r3, #44]
 1556 008c 9A42     		cmp	r2, r3
 1557 008e 07D3     		bcc	.L97
1443:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1444:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1445:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1446:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1447:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
 1558              		.loc 1 1447 0
 1559 0090 094B     		ldr	r3, .L98+12
 1560 0092 4FF08052 		mov	r2, #268435456
 1561 0096 1A60     		str	r2, [r3]
 1562              	@ 1447 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1563 0098 BFF34F8F 		dsb
 1564              	@ 0 "" 2
 1565              	@ 1447 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 1566 009c BFF36F8F 		isb
 1567              	@ 0 "" 2
 1568              		.thumb
 1569              	.L97:
1448:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1450:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1451:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1452:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1453:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1454:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1455:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1456:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1457:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1458:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1459:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1570              		.loc 1 1459 0
ARM GAS  /tmp/ccdaF48n.s 			page 58


 1571 00a0 FFF7FEFF 		bl	vPortExitCritical
 1572              	.L93:
1460:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1461:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1462:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1463:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1464:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1465:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1573              		.loc 1 1465 0
 1574 00a4 1037     		adds	r7, r7, #16
 1575              	.LCFI44:
 1576              		.cfi_def_cfa_offset 8
 1577 00a6 BD46     		mov	sp, r7
 1578              	.LCFI45:
 1579              		.cfi_def_cfa_register 13
 1580              		@ sp needed
 1581 00a8 80BD     		pop	{r7, pc}
 1582              	.L99:
 1583 00aa 00BF     		.align	2
 1584              	.L98:
 1585 00ac 00000000 		.word	pxCurrentTCB
 1586 00b0 00000000 		.word	uxTopReadyPriority
 1587 00b4 00000000 		.word	pxReadyTasksLists
 1588 00b8 04ED00E0 		.word	-536810236
 1589              		.cfi_endproc
 1590              	.LFE12:
 1592              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1593              		.align	2
 1594              		.global	xTaskResumeFromISR
 1595              		.thumb
 1596              		.thumb_func
 1598              	xTaskResumeFromISR:
 1599              	.LFB13:
1466:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1467:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1468:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1469:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1470:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1471:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1472:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1474:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1600              		.loc 1 1474 0
 1601              		.cfi_startproc
 1602              		@ args = 0, pretend = 0, frame = 40
 1603              		@ frame_needed = 1, uses_anonymous_args = 0
 1604 0000 80B5     		push	{r7, lr}
 1605              	.LCFI46:
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 8AB0     		sub	sp, sp, #40
 1610              	.LCFI47:
 1611              		.cfi_def_cfa_offset 48
 1612 0004 00AF     		add	r7, sp, #0
 1613              	.LCFI48:
 1614              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccdaF48n.s 			page 59


 1615 0006 7860     		str	r0, [r7, #4]
1475:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1616              		.loc 1 1475 0
 1617 0008 0023     		movs	r3, #0
 1618 000a 7B62     		str	r3, [r7, #36]
1476:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1619              		.loc 1 1476 0
 1620 000c 7B68     		ldr	r3, [r7, #4]
 1621 000e 3B62     		str	r3, [r7, #32]
1477:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1478:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1479:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 1622              		.loc 1 1479 0
 1623 0010 7B68     		ldr	r3, [r7, #4]
 1624 0012 002B     		cmp	r3, #0
 1625 0014 09D1     		bne	.L101
 1626              	.LBB113:
 1627              	.LBB114:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1628              		.loc 2 215 0 discriminator 1
 1629              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1630 0016 4FF05003 			mov r3, #80												
 1631 001a 83F31188 		msr basepri, r3											
 1632 001e BFF36F8F 		isb														
 1633 0022 BFF34F8F 		dsb														
 1634              	
 1635              	@ 0 "" 2
 1636              		.thumb
 1637 0026 BB61     		str	r3, [r7, #24]
 1638              	.L102:
 1639              	.LBE114:
 1640              	.LBE113:
 1641              		.loc 1 1479 0 discriminator 1
 1642 0028 FEE7     		b	.L102
 1643              	.L101:
1480:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1481:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1482:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1483:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1484:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1485:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1486:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1487:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1488:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1489:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1490:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1491:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1492:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1493:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1494:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1495:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1496:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1497:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1644              		.loc 1 1497 0
 1645 002a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1646              	.LBB115:
 1647              	.LBB116:
ARM GAS  /tmp/ccdaF48n.s 			page 60


 231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1648              		.loc 2 231 0
 1649              	@ 231 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1650 002e EFF31182 			mrs r2, basepri											
 1651 0032 4FF05003 		mov r3, #80												
 1652 0036 83F31188 		msr basepri, r3											
 1653 003a BFF36F8F 		isb														
 1654 003e BFF34F8F 		dsb														
 1655              	
 1656              	@ 0 "" 2
 1657              		.thumb
 1658 0042 7A61     		str	r2, [r7, #20]
 1659 0044 3B61     		str	r3, [r7, #16]
 243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 1660              		.loc 2 243 0
 1661 0046 7B69     		ldr	r3, [r7, #20]
 1662              	.LBE116:
 1663              	.LBE115:
1498:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1499:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1664              		.loc 1 1499 0
 1665 0048 FB61     		str	r3, [r7, #28]
1500:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1501:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) == pdTRUE )
 1666              		.loc 1 1501 0
 1667 004a 386A     		ldr	r0, [r7, #32]
 1668 004c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1669 0050 0346     		mov	r3, r0
 1670 0052 012B     		cmp	r3, #1
 1671 0054 31D1     		bne	.L104
1502:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1503:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1504:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1506:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 1672              		.loc 1 1506 0
 1673 0056 1E4B     		ldr	r3, .L109
 1674 0058 1B68     		ldr	r3, [r3]
 1675 005a 002B     		cmp	r3, #0
 1676 005c 27D1     		bne	.L105
1507:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1508:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1509:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1510:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 1677              		.loc 1 1510 0
 1678 005e 3B6A     		ldr	r3, [r7, #32]
 1679 0060 DA6A     		ldr	r2, [r3, #44]
 1680 0062 1C4B     		ldr	r3, .L109+4
 1681 0064 1B68     		ldr	r3, [r3]
 1682 0066 DB6A     		ldr	r3, [r3, #44]
 1683 0068 9A42     		cmp	r2, r3
 1684 006a 01D3     		bcc	.L106
1511:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1512:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 1685              		.loc 1 1512 0
 1686 006c 0123     		movs	r3, #1
 1687 006e 7B62     		str	r3, [r7, #36]
ARM GAS  /tmp/ccdaF48n.s 			page 61


 1688              	.L106:
1513:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1514:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1515:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1516:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1517:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1518:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1519:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xGenericListItem ) );
 1689              		.loc 1 1519 0
 1690 0070 3B6A     		ldr	r3, [r7, #32]
 1691 0072 0433     		adds	r3, r3, #4
 1692 0074 1846     		mov	r0, r3
 1693 0076 FFF7FEFF 		bl	uxListRemove
1520:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1694              		.loc 1 1520 0
 1695 007a 3B6A     		ldr	r3, [r7, #32]
 1696 007c DB6A     		ldr	r3, [r3, #44]
 1697 007e 1A46     		mov	r2, r3
 1698 0080 0123     		movs	r3, #1
 1699 0082 03FA02F2 		lsl	r2, r3, r2
 1700 0086 144B     		ldr	r3, .L109+8
 1701 0088 1B68     		ldr	r3, [r3]
 1702 008a 1343     		orrs	r3, r3, r2
 1703 008c 124A     		ldr	r2, .L109+8
 1704 008e 1360     		str	r3, [r2]
 1705 0090 3B6A     		ldr	r3, [r7, #32]
 1706 0092 DA6A     		ldr	r2, [r3, #44]
 1707 0094 1346     		mov	r3, r2
 1708 0096 9B00     		lsls	r3, r3, #2
 1709 0098 1344     		add	r3, r3, r2
 1710 009a 9B00     		lsls	r3, r3, #2
 1711 009c 0F4A     		ldr	r2, .L109+12
 1712 009e 1A44     		add	r2, r2, r3
 1713 00a0 3B6A     		ldr	r3, [r7, #32]
 1714 00a2 0433     		adds	r3, r3, #4
 1715 00a4 1046     		mov	r0, r2
 1716 00a6 1946     		mov	r1, r3
 1717 00a8 FFF7FEFF 		bl	vListInsertEnd
 1718 00ac 05E0     		b	.L104
 1719              	.L105:
1521:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1522:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1523:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1524:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1525:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1526:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1527:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 1720              		.loc 1 1527 0
 1721 00ae 3B6A     		ldr	r3, [r7, #32]
 1722 00b0 1833     		adds	r3, r3, #24
 1723 00b2 0B48     		ldr	r0, .L109+16
 1724 00b4 1946     		mov	r1, r3
 1725 00b6 FFF7FEFF 		bl	vListInsertEnd
 1726              	.L104:
 1727 00ba FB69     		ldr	r3, [r7, #28]
 1728 00bc FB60     		str	r3, [r7, #12]
 1729              	.LBB117:
ARM GAS  /tmp/ccdaF48n.s 			page 62


 1730              	.LBB118:
 1731              		.loc 2 249 0
 1732 00be FB68     		ldr	r3, [r7, #12]
 1733              	@ 249 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1734 00c0 83F31188 			msr basepri, r3	
 1735              	@ 0 "" 2
 1736              		.thumb
 1737              	.LBE118:
 1738              	.LBE117:
1528:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1529:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1530:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1531:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1532:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1533:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1534:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1535:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1536:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
 1739              		.loc 1 1537 0
 1740 00c4 7B6A     		ldr	r3, [r7, #36]
1538:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1741              		.loc 1 1538 0
 1742 00c6 1846     		mov	r0, r3
 1743 00c8 2837     		adds	r7, r7, #40
 1744              	.LCFI49:
 1745              		.cfi_def_cfa_offset 8
 1746 00ca BD46     		mov	sp, r7
 1747              	.LCFI50:
 1748              		.cfi_def_cfa_register 13
 1749              		@ sp needed
 1750 00cc 80BD     		pop	{r7, pc}
 1751              	.L110:
 1752 00ce 00BF     		.align	2
 1753              	.L109:
 1754 00d0 00000000 		.word	uxSchedulerSuspended
 1755 00d4 00000000 		.word	pxCurrentTCB
 1756 00d8 00000000 		.word	uxTopReadyPriority
 1757 00dc 00000000 		.word	pxReadyTasksLists
 1758 00e0 00000000 		.word	xPendingReadyList
 1759              		.cfi_endproc
 1760              	.LFE13:
 1762              		.section	.rodata
 1763              		.align	2
 1764              	.LC0:
 1765 0000 49444C45 		.ascii	"IDLE\000"
 1765      00
 1766 0005 000000   		.section	.text.vTaskStartScheduler,"ax",%progbits
 1767              		.align	2
 1768              		.global	vTaskStartScheduler
 1769              		.thumb
 1770              		.thumb_func
 1772              	vTaskStartScheduler:
 1773              	.LFB14:
1539:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1541:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccdaF48n.s 			page 63


1542:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1543:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1544:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 1774              		.loc 1 1544 0
 1775              		.cfi_startproc
 1776              		@ args = 0, pretend = 0, frame = 16
 1777              		@ frame_needed = 1, uses_anonymous_args = 0
 1778 0000 80B5     		push	{r7, lr}
 1779              	.LCFI51:
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 88B0     		sub	sp, sp, #32
 1784              	.LCFI52:
 1785              		.cfi_def_cfa_offset 40
 1786 0004 04AF     		add	r7, sp, #16
 1787              	.LCFI53:
 1788              		.cfi_def_cfa 7, 24
1545:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1546:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1547:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1548:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
1549:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1550:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Create the idle task, storing its handle in xIdleTaskHandle so it can
1551:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be returned by the xTaskGetIdleTaskHandle() function. */
1552:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORI
1553:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1554:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1555:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1556:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Create the idle task without storing its handle. */
1557:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORI
 1789              		.loc 1 1557 0
 1790 0006 0023     		movs	r3, #0
 1791 0008 0093     		str	r3, [sp]
 1792 000a 0023     		movs	r3, #0
 1793 000c 0193     		str	r3, [sp, #4]
 1794 000e 0023     		movs	r3, #0
 1795 0010 0293     		str	r3, [sp, #8]
 1796 0012 0023     		movs	r3, #0
 1797 0014 0393     		str	r3, [sp, #12]
 1798 0016 1648     		ldr	r0, .L115
 1799 0018 1649     		ldr	r1, .L115+4
 1800 001a 8022     		movs	r2, #128
 1801 001c 0023     		movs	r3, #0
 1802 001e FFF7FEFF 		bl	xTaskGenericCreate
 1803 0022 F860     		str	r0, [r7, #12]
1558:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1559:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_xTaskGetIdleTaskHandle */
1560:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1561:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1562:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1563:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1564:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1565:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1566:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1567:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1568:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccdaF48n.s 			page 64


1569:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1570:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1571:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1572:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1573:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1574:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
 1804              		.loc 1 1574 0
 1805 0024 FB68     		ldr	r3, [r7, #12]
 1806 0026 012B     		cmp	r3, #1
 1807 0028 11D1     		bne	.L112
 1808              	.LBB119:
 1809              	.LBB120:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1810              		.loc 2 215 0
 1811              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1812 002a 4FF05003 			mov r3, #80												
 1813 002e 83F31188 		msr basepri, r3											
 1814 0032 BFF36F8F 		isb														
 1815 0036 BFF34F8F 		dsb														
 1816              	
 1817              	@ 0 "" 2
 1818              		.thumb
 1819 003a BB60     		str	r3, [r7, #8]
 1820              	.LBE120:
 1821              	.LBE119:
1575:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1576:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1577:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1578:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1579:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1580:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1581:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1582:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1583:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1584:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1585:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1586:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1587:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1588:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1589:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1590:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1591:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1822              		.loc 1 1591 0
 1823 003c 0E4B     		ldr	r3, .L115+8
 1824 003e 0122     		movs	r2, #1
 1825 0040 1A60     		str	r2, [r3]
1592:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1826              		.loc 1 1592 0
 1827 0042 0E4B     		ldr	r3, .L115+12
 1828 0044 0022     		movs	r2, #0
 1829 0046 1A60     		str	r2, [r3]
1593:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1594:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1595:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1596:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base. */
1597:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1598:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 65


1599:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1600:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1601:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
 1830              		.loc 1 1601 0
 1831 0048 FFF7FEFF 		bl	xPortStartScheduler
 1832 004c 0CE0     		b	.L111
 1833              	.L112:
1602:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1603:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1604:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1605:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1606:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1607:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1608:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1609:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1610:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1611:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1612:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1613:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1614:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1615:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
1616:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn );
 1834              		.loc 1 1616 0
 1835 004e FB68     		ldr	r3, [r7, #12]
 1836 0050 002B     		cmp	r3, #0
 1837 0052 09D1     		bne	.L111
 1838              	.LBB121:
 1839              	.LBB122:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1840              		.loc 2 215 0 discriminator 1
 1841              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1842 0054 4FF05003 			mov r3, #80												
 1843 0058 83F31188 		msr basepri, r3											
 1844 005c BFF36F8F 		isb														
 1845 0060 BFF34F8F 		dsb														
 1846              	
 1847              	@ 0 "" 2
 1848              		.thumb
 1849 0064 7B60     		str	r3, [r7, #4]
 1850              	.L114:
 1851              	.LBE122:
 1852              	.LBE121:
 1853              		.loc 1 1616 0 discriminator 2
 1854 0066 FEE7     		b	.L114
 1855              	.L111:
1617:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1856              		.loc 1 1618 0
 1857 0068 1037     		adds	r7, r7, #16
 1858              	.LCFI54:
 1859              		.cfi_def_cfa_offset 8
 1860 006a BD46     		mov	sp, r7
 1861              	.LCFI55:
 1862              		.cfi_def_cfa_register 13
 1863              		@ sp needed
 1864 006c 80BD     		pop	{r7, pc}
 1865              	.L116:
ARM GAS  /tmp/ccdaF48n.s 			page 66


 1866 006e 00BF     		.align	2
 1867              	.L115:
 1868 0070 00000000 		.word	prvIdleTask
 1869 0074 00000000 		.word	.LC0
 1870 0078 00000000 		.word	xSchedulerRunning
 1871 007c 00000000 		.word	xTickCount
 1872              		.cfi_endproc
 1873              	.LFE14:
 1875              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1876              		.align	2
 1877              		.global	vTaskEndScheduler
 1878              		.thumb
 1879              		.thumb_func
 1881              	vTaskEndScheduler:
 1882              	.LFB15:
1619:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1620:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1621:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
1622:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 1883              		.loc 1 1622 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 8
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887 0000 80B5     		push	{r7, lr}
 1888              	.LCFI56:
 1889              		.cfi_def_cfa_offset 8
 1890              		.cfi_offset 7, -8
 1891              		.cfi_offset 14, -4
 1892 0002 82B0     		sub	sp, sp, #8
 1893              	.LCFI57:
 1894              		.cfi_def_cfa_offset 16
 1895 0004 00AF     		add	r7, sp, #0
 1896              	.LCFI58:
 1897              		.cfi_def_cfa_register 7
 1898              	.LBB123:
 1899              	.LBB124:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1900              		.loc 2 215 0
 1901              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 1902 0006 4FF05003 			mov r3, #80												
 1903 000a 83F31188 		msr basepri, r3											
 1904 000e BFF36F8F 		isb														
 1905 0012 BFF34F8F 		dsb														
 1906              	
 1907              	@ 0 "" 2
 1908              		.thumb
 1909 0016 7B60     		str	r3, [r7, #4]
 1910              	.LBE124:
 1911              	.LBE123:
1623:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1624:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1625:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1626:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1627:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1912              		.loc 1 1627 0
 1913 0018 034B     		ldr	r3, .L118
 1914 001a 0022     		movs	r2, #0
ARM GAS  /tmp/ccdaF48n.s 			page 67


 1915 001c 1A60     		str	r2, [r3]
1628:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1916              		.loc 1 1628 0
 1917 001e FFF7FEFF 		bl	vPortEndScheduler
1629:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1918              		.loc 1 1629 0
 1919 0022 0837     		adds	r7, r7, #8
 1920              	.LCFI59:
 1921              		.cfi_def_cfa_offset 8
 1922 0024 BD46     		mov	sp, r7
 1923              	.LCFI60:
 1924              		.cfi_def_cfa_register 13
 1925              		@ sp needed
 1926 0026 80BD     		pop	{r7, pc}
 1927              	.L119:
 1928              		.align	2
 1929              	.L118:
 1930 0028 00000000 		.word	xSchedulerRunning
 1931              		.cfi_endproc
 1932              	.LFE15:
 1934              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1935              		.align	2
 1936              		.global	vTaskSuspendAll
 1937              		.thumb
 1938              		.thumb_func
 1940              	vTaskSuspendAll:
 1941              	.LFB16:
1630:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1631:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1632:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
1633:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 1942              		.loc 1 1633 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 1, uses_anonymous_args = 0
 1946              		@ link register save eliminated.
 1947 0000 80B4     		push	{r7}
 1948              	.LCFI61:
 1949              		.cfi_def_cfa_offset 4
 1950              		.cfi_offset 7, -4
 1951 0002 00AF     		add	r7, sp, #0
 1952              	.LCFI62:
 1953              		.cfi_def_cfa_register 7
1634:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
1635:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1636:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1637:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
1638:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
 1954              		.loc 1 1638 0
 1955 0004 044B     		ldr	r3, .L121
 1956 0006 1B68     		ldr	r3, [r3]
 1957 0008 0133     		adds	r3, r3, #1
 1958 000a 034A     		ldr	r2, .L121
 1959 000c 1360     		str	r3, [r2]
1639:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1960              		.loc 1 1639 0
 1961 000e BD46     		mov	sp, r7
ARM GAS  /tmp/ccdaF48n.s 			page 68


 1962              	.LCFI63:
 1963              		.cfi_def_cfa_register 13
 1964              		@ sp needed
 1965 0010 5DF8047B 		ldr	r7, [sp], #4
 1966              	.LCFI64:
 1967              		.cfi_restore 7
 1968              		.cfi_def_cfa_offset 0
 1969 0014 7047     		bx	lr
 1970              	.L122:
 1971 0016 00BF     		.align	2
 1972              	.L121:
 1973 0018 00000000 		.word	uxSchedulerSuspended
 1974              		.cfi_endproc
 1975              	.LFE16:
 1977              		.section	.text.xTaskResumeAll,"ax",%progbits
 1978              		.align	2
 1979              		.global	xTaskResumeAll
 1980              		.thumb
 1981              		.thumb_func
 1983              	xTaskResumeAll:
 1984              	.LFB17:
1640:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1641:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1642:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1643:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1645:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1646:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
1647:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1648:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1649:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1650:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1651:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1652:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1653:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1654:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1655:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1656:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
1657:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
1658:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1659:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1660:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1661:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
1662:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1663:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1664:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1665:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1666:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1667:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
1668:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1669:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1670:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
1671:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 1985              		.loc 1 1671 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 16
 1988              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccdaF48n.s 			page 69


 1989 0000 80B5     		push	{r7, lr}
 1990              	.LCFI65:
 1991              		.cfi_def_cfa_offset 8
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 84B0     		sub	sp, sp, #16
 1995              	.LCFI66:
 1996              		.cfi_def_cfa_offset 24
 1997 0004 00AF     		add	r7, sp, #0
 1998              	.LCFI67:
 1999              		.cfi_def_cfa_register 7
1672:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
1673:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2000              		.loc 1 1673 0
 2001 0006 0023     		movs	r3, #0
 2002 0008 FB60     		str	r3, [r7, #12]
1674:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1675:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
1676:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
1677:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
 2003              		.loc 1 1677 0
 2004 000a 3F4B     		ldr	r3, .L134
 2005 000c 1B68     		ldr	r3, [r3]
 2006 000e 002B     		cmp	r3, #0
 2007 0010 09D1     		bne	.L124
 2008              	.LBB125:
 2009              	.LBB126:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2010              		.loc 2 215 0 discriminator 1
 2011              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 2012 0012 4FF05003 			mov r3, #80												
 2013 0016 83F31188 		msr basepri, r3											
 2014 001a BFF36F8F 		isb														
 2015 001e BFF34F8F 		dsb														
 2016              	
 2017              	@ 0 "" 2
 2018              		.thumb
 2019 0022 7B60     		str	r3, [r7, #4]
 2020              	.L125:
 2021              	.LBE126:
 2022              	.LBE125:
 2023              		.loc 1 1677 0 discriminator 1
 2024 0024 FEE7     		b	.L125
 2025              	.L124:
1678:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1679:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
1680:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
1681:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
1682:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
1683:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
1684:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2026              		.loc 1 1684 0
 2027 0026 FFF7FEFF 		bl	vPortEnterCritical
1685:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1686:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
 2028              		.loc 1 1686 0
 2029 002a 374B     		ldr	r3, .L134
ARM GAS  /tmp/ccdaF48n.s 			page 70


 2030 002c 1B68     		ldr	r3, [r3]
 2031 002e 013B     		subs	r3, r3, #1
 2032 0030 354A     		ldr	r2, .L134
 2033 0032 1360     		str	r3, [r2]
1687:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1688:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2034              		.loc 1 1688 0
 2035 0034 344B     		ldr	r3, .L134
 2036 0036 1B68     		ldr	r3, [r3]
 2037 0038 002B     		cmp	r3, #0
 2038 003a 5DD1     		bne	.L126
1689:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1690:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 2039              		.loc 1 1690 0
 2040 003c 334B     		ldr	r3, .L134+4
 2041 003e 1B68     		ldr	r3, [r3]
 2042 0040 002B     		cmp	r3, #0
 2043 0042 59D0     		beq	.L126
1691:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1692:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
1693:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
1694:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 2044              		.loc 1 1694 0
 2045 0044 30E0     		b	.L127
 2046              	.L128:
1695:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1696:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
 2047              		.loc 1 1696 0
 2048 0046 324B     		ldr	r3, .L134+8
 2049 0048 DB68     		ldr	r3, [r3, #12]
 2050 004a DB68     		ldr	r3, [r3, #12]
 2051 004c BB60     		str	r3, [r7, #8]
1697:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2052              		.loc 1 1697 0
 2053 004e BB68     		ldr	r3, [r7, #8]
 2054 0050 1833     		adds	r3, r3, #24
 2055 0052 1846     		mov	r0, r3
 2056 0054 FFF7FEFF 		bl	uxListRemove
1698:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 2057              		.loc 1 1698 0
 2058 0058 BB68     		ldr	r3, [r7, #8]
 2059 005a 0433     		adds	r3, r3, #4
 2060 005c 1846     		mov	r0, r3
 2061 005e FFF7FEFF 		bl	uxListRemove
1699:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2062              		.loc 1 1699 0
 2063 0062 BB68     		ldr	r3, [r7, #8]
 2064 0064 DB6A     		ldr	r3, [r3, #44]
 2065 0066 1A46     		mov	r2, r3
 2066 0068 0123     		movs	r3, #1
 2067 006a 03FA02F2 		lsl	r2, r3, r2
 2068 006e 294B     		ldr	r3, .L134+12
 2069 0070 1B68     		ldr	r3, [r3]
 2070 0072 1343     		orrs	r3, r3, r2
 2071 0074 274A     		ldr	r2, .L134+12
 2072 0076 1360     		str	r3, [r2]
 2073 0078 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccdaF48n.s 			page 71


 2074 007a DA6A     		ldr	r2, [r3, #44]
 2075 007c 1346     		mov	r3, r2
 2076 007e 9B00     		lsls	r3, r3, #2
 2077 0080 1344     		add	r3, r3, r2
 2078 0082 9B00     		lsls	r3, r3, #2
 2079 0084 244A     		ldr	r2, .L134+16
 2080 0086 1A44     		add	r2, r2, r3
 2081 0088 BB68     		ldr	r3, [r7, #8]
 2082 008a 0433     		adds	r3, r3, #4
 2083 008c 1046     		mov	r0, r2
 2084 008e 1946     		mov	r1, r3
 2085 0090 FFF7FEFF 		bl	vListInsertEnd
1700:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1701:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
1702:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
1703:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2086              		.loc 1 1703 0
 2087 0094 BB68     		ldr	r3, [r7, #8]
 2088 0096 DA6A     		ldr	r2, [r3, #44]
 2089 0098 204B     		ldr	r3, .L134+20
 2090 009a 1B68     		ldr	r3, [r3]
 2091 009c DB6A     		ldr	r3, [r3, #44]
 2092 009e 9A42     		cmp	r2, r3
 2093 00a0 02D3     		bcc	.L127
1704:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1705:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
 2094              		.loc 1 1705 0
 2095 00a2 1F4B     		ldr	r3, .L134+24
 2096 00a4 0122     		movs	r2, #1
 2097 00a6 1A60     		str	r2, [r3]
 2098              	.L127:
1694:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2099              		.loc 1 1694 0
 2100 00a8 194B     		ldr	r3, .L134+8
 2101 00aa 1B68     		ldr	r3, [r3]
 2102 00ac 002B     		cmp	r3, #0
 2103 00ae CAD1     		bne	.L128
1706:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1707:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1708:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1709:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1710:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1711:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1713:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
1714:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
1715:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
1716:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
1717:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxPendedTicks > ( UBaseType_t ) 0U )
 2104              		.loc 1 1717 0
 2105 00b0 1C4B     		ldr	r3, .L134+28
 2106 00b2 1B68     		ldr	r3, [r3]
 2107 00b4 002B     		cmp	r3, #0
 2108 00b6 11D0     		beq	.L129
1718:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1719:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					while( uxPendedTicks > ( UBaseType_t ) 0U )
 2109              		.loc 1 1719 0
ARM GAS  /tmp/ccdaF48n.s 			page 72


 2110 00b8 0CE0     		b	.L130
 2111              	.L132:
1720:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1721:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( xTaskIncrementTick() != pdFALSE )
 2112              		.loc 1 1721 0
 2113 00ba FFF7FEFF 		bl	xTaskIncrementTick
 2114 00be 0346     		mov	r3, r0
 2115 00c0 002B     		cmp	r3, #0
 2116 00c2 02D0     		beq	.L131
1722:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1723:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldPending = pdTRUE;
 2117              		.loc 1 1723 0
 2118 00c4 164B     		ldr	r3, .L134+24
 2119 00c6 0122     		movs	r2, #1
 2120 00c8 1A60     		str	r2, [r3]
 2121              	.L131:
1724:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1725:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1726:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1727:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1728:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1729:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						--uxPendedTicks;
 2122              		.loc 1 1729 0
 2123 00ca 164B     		ldr	r3, .L134+28
 2124 00cc 1B68     		ldr	r3, [r3]
 2125 00ce 013B     		subs	r3, r3, #1
 2126 00d0 144A     		ldr	r2, .L134+28
 2127 00d2 1360     		str	r3, [r2]
 2128              	.L130:
1719:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2129              		.loc 1 1719 0
 2130 00d4 134B     		ldr	r3, .L134+28
 2131 00d6 1B68     		ldr	r3, [r3]
 2132 00d8 002B     		cmp	r3, #0
 2133 00da EED1     		bne	.L132
 2134              	.L129:
1730:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1731:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1732:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1733:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1734:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1735:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1736:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending == pdTRUE )
 2135              		.loc 1 1737 0
 2136 00dc 104B     		ldr	r3, .L134+24
 2137 00de 1B68     		ldr	r3, [r3]
 2138 00e0 012B     		cmp	r3, #1
 2139 00e2 09D1     		bne	.L126
1738:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1739:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
1740:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1741:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
 2140              		.loc 1 1741 0
 2141 00e4 0123     		movs	r3, #1
 2142 00e6 FB60     		str	r3, [r7, #12]
1742:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/ccdaF48n.s 			page 73


1743:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
1744:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 2143              		.loc 1 1744 0
 2144 00e8 0F4B     		ldr	r3, .L134+32
 2145 00ea 4FF08052 		mov	r2, #268435456
 2146 00ee 1A60     		str	r2, [r3]
 2147              	@ 1744 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 2148 00f0 BFF34F8F 		dsb
 2149              	@ 0 "" 2
 2150              	@ 1744 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 2151 00f4 BFF36F8F 		isb
 2152              	@ 0 "" 2
 2153              		.thumb
 2154              	.L126:
1745:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1746:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1747:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1748:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1749:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1750:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1751:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1752:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1753:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1755:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1756:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1757:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 2155              		.loc 1 1757 0
 2156 00f8 FFF7FEFF 		bl	vPortExitCritical
1758:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1759:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
 2157              		.loc 1 1759 0
 2158 00fc FB68     		ldr	r3, [r7, #12]
1760:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2159              		.loc 1 1760 0
 2160 00fe 1846     		mov	r0, r3
 2161 0100 1037     		adds	r7, r7, #16
 2162              	.LCFI68:
 2163              		.cfi_def_cfa_offset 8
 2164 0102 BD46     		mov	sp, r7
 2165              	.LCFI69:
 2166              		.cfi_def_cfa_register 13
 2167              		@ sp needed
 2168 0104 80BD     		pop	{r7, pc}
 2169              	.L135:
 2170 0106 00BF     		.align	2
 2171              	.L134:
 2172 0108 00000000 		.word	uxSchedulerSuspended
 2173 010c 00000000 		.word	uxCurrentNumberOfTasks
 2174 0110 00000000 		.word	xPendingReadyList
 2175 0114 00000000 		.word	uxTopReadyPriority
 2176 0118 00000000 		.word	pxReadyTasksLists
 2177 011c 00000000 		.word	pxCurrentTCB
 2178 0120 00000000 		.word	xYieldPending
 2179 0124 00000000 		.word	uxPendedTicks
 2180 0128 04ED00E0 		.word	-536810236
 2181              		.cfi_endproc
ARM GAS  /tmp/ccdaF48n.s 			page 74


 2182              	.LFE17:
 2184              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2185              		.align	2
 2186              		.global	xTaskGetTickCount
 2187              		.thumb
 2188              		.thumb_func
 2190              	xTaskGetTickCount:
 2191              	.LFB18:
1761:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1762:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
1764:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2192              		.loc 1 1764 0
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 8
 2195              		@ frame_needed = 1, uses_anonymous_args = 0
 2196              		@ link register save eliminated.
 2197 0000 80B4     		push	{r7}
 2198              	.LCFI70:
 2199              		.cfi_def_cfa_offset 4
 2200              		.cfi_offset 7, -4
 2201 0002 83B0     		sub	sp, sp, #12
 2202              	.LCFI71:
 2203              		.cfi_def_cfa_offset 16
 2204 0004 00AF     		add	r7, sp, #0
 2205              	.LCFI72:
 2206              		.cfi_def_cfa_register 7
1765:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
1766:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
1768:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
1769:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1770:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
 2207              		.loc 1 1770 0
 2208 0006 054B     		ldr	r3, .L138
 2209 0008 1B68     		ldr	r3, [r3]
 2210 000a 7B60     		str	r3, [r7, #4]
1771:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1772:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
1773:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1774:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
 2211              		.loc 1 1774 0
 2212 000c 7B68     		ldr	r3, [r7, #4]
1775:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2213              		.loc 1 1775 0
 2214 000e 1846     		mov	r0, r3
 2215 0010 0C37     		adds	r7, r7, #12
 2216              	.LCFI73:
 2217              		.cfi_def_cfa_offset 4
 2218 0012 BD46     		mov	sp, r7
 2219              	.LCFI74:
 2220              		.cfi_def_cfa_register 13
 2221              		@ sp needed
 2222 0014 5DF8047B 		ldr	r7, [sp], #4
 2223              	.LCFI75:
 2224              		.cfi_restore 7
 2225              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccdaF48n.s 			page 75


 2226 0018 7047     		bx	lr
 2227              	.L139:
 2228 001a 00BF     		.align	2
 2229              	.L138:
 2230 001c 00000000 		.word	xTickCount
 2231              		.cfi_endproc
 2232              	.LFE18:
 2234              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2235              		.align	2
 2236              		.global	xTaskGetTickCountFromISR
 2237              		.thumb
 2238              		.thumb_func
 2240              	xTaskGetTickCountFromISR:
 2241              	.LFB19:
1776:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1777:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
1779:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2242              		.loc 1 1779 0
 2243              		.cfi_startproc
 2244              		@ args = 0, pretend = 0, frame = 8
 2245              		@ frame_needed = 1, uses_anonymous_args = 0
 2246 0000 80B5     		push	{r7, lr}
 2247              	.LCFI76:
 2248              		.cfi_def_cfa_offset 8
 2249              		.cfi_offset 7, -8
 2250              		.cfi_offset 14, -4
 2251 0002 82B0     		sub	sp, sp, #8
 2252              	.LCFI77:
 2253              		.cfi_def_cfa_offset 16
 2254 0004 00AF     		add	r7, sp, #0
 2255              	.LCFI78:
 2256              		.cfi_def_cfa_register 7
1780:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
1781:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
1782:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1783:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1784:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1785:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
1786:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1787:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1788:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1789:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1790:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
1791:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1792:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
1793:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1794:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1795:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
1796:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1797:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2257              		.loc 1 1797 0
 2258 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
1798:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1799:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
 2259              		.loc 1 1799 0
 2260 000a 0023     		movs	r3, #0
ARM GAS  /tmp/ccdaF48n.s 			page 76


 2261 000c 7B60     		str	r3, [r7, #4]
1800:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1801:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
 2262              		.loc 1 1801 0
 2263 000e 044B     		ldr	r3, .L142
 2264 0010 1B68     		ldr	r3, [r3]
 2265 0012 3B60     		str	r3, [r7]
1802:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1803:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1804:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 2266              		.loc 1 1805 0
 2267 0014 3B68     		ldr	r3, [r7]
1806:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2268              		.loc 1 1806 0
 2269 0016 1846     		mov	r0, r3
 2270 0018 0837     		adds	r7, r7, #8
 2271              	.LCFI79:
 2272              		.cfi_def_cfa_offset 8
 2273 001a BD46     		mov	sp, r7
 2274              	.LCFI80:
 2275              		.cfi_def_cfa_register 13
 2276              		@ sp needed
 2277 001c 80BD     		pop	{r7, pc}
 2278              	.L143:
 2279 001e 00BF     		.align	2
 2280              	.L142:
 2281 0020 00000000 		.word	xTickCount
 2282              		.cfi_endproc
 2283              	.LFE19:
 2285              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2286              		.align	2
 2287              		.global	uxTaskGetNumberOfTasks
 2288              		.thumb
 2289              		.thumb_func
 2291              	uxTaskGetNumberOfTasks:
 2292              	.LFB20:
1807:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1808:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1809:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
1810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2293              		.loc 1 1810 0
 2294              		.cfi_startproc
 2295              		@ args = 0, pretend = 0, frame = 0
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297              		@ link register save eliminated.
 2298 0000 80B4     		push	{r7}
 2299              	.LCFI81:
 2300              		.cfi_def_cfa_offset 4
 2301              		.cfi_offset 7, -4
 2302 0002 00AF     		add	r7, sp, #0
 2303              	.LCFI82:
 2304              		.cfi_def_cfa_register 7
1811:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
1812:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
1813:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
 2305              		.loc 1 1813 0
ARM GAS  /tmp/ccdaF48n.s 			page 77


 2306 0004 034B     		ldr	r3, .L146
 2307 0006 1B68     		ldr	r3, [r3]
1814:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2308              		.loc 1 1814 0
 2309 0008 1846     		mov	r0, r3
 2310 000a BD46     		mov	sp, r7
 2311              	.LCFI83:
 2312              		.cfi_def_cfa_register 13
 2313              		@ sp needed
 2314 000c 5DF8047B 		ldr	r7, [sp], #4
 2315              	.LCFI84:
 2316              		.cfi_restore 7
 2317              		.cfi_def_cfa_offset 0
 2318 0010 7047     		bx	lr
 2319              	.L147:
 2320 0012 00BF     		.align	2
 2321              	.L146:
 2322 0014 00000000 		.word	uxCurrentNumberOfTasks
 2323              		.cfi_endproc
 2324              	.LFE20:
 2326              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 2327              		.align	2
 2328              		.global	uxTaskGetSystemState
 2329              		.thumb
 2330              		.thumb_func
 2332              	uxTaskGetSystemState:
 2333              	.LFB21:
1815:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1816:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1817:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_pcTaskGetTaskName == 1 )
1818:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char *pcTaskGetTaskName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allow
1820:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1821:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1822:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then the name of the calling task is being queried. */
1824:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToQuery );
1825:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1826:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pxTCB->pcTaskName[ 0 ] );
1827:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1828:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1829:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_pcTaskGetTaskName */
1830:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1831:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1832:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1833:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1834:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
1835:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2334              		.loc 1 1835 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 24
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338 0000 80B5     		push	{r7, lr}
 2339              	.LCFI85:
 2340              		.cfi_def_cfa_offset 8
 2341              		.cfi_offset 7, -8
 2342              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdaF48n.s 			page 78


 2343 0002 86B0     		sub	sp, sp, #24
 2344              	.LCFI86:
 2345              		.cfi_def_cfa_offset 32
 2346 0004 00AF     		add	r7, sp, #0
 2347              	.LCFI87:
 2348              		.cfi_def_cfa_register 7
 2349 0006 F860     		str	r0, [r7, #12]
 2350 0008 B960     		str	r1, [r7, #8]
 2351 000a 7A60     		str	r2, [r7, #4]
1836:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 2352              		.loc 1 1836 0
 2353 000c 0023     		movs	r3, #0
 2354 000e 7B61     		str	r3, [r7, #20]
 2355 0010 0723     		movs	r3, #7
 2356 0012 3B61     		str	r3, [r7, #16]
1837:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1838:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 2357              		.loc 1 1838 0
 2358 0014 FFF7FEFF 		bl	vTaskSuspendAll
1839:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
1841:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
 2359              		.loc 1 1841 0
 2360 0018 314B     		ldr	r3, .L153
 2361 001a 1B68     		ldr	r3, [r3]
 2362 001c BA68     		ldr	r2, [r7, #8]
 2363 001e 9A42     		cmp	r2, r3
 2364 0020 57D3     		bcc	.L149
 2365              	.L150:
1842:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1843:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
1844:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
1845:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
1846:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1847:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
 2366              		.loc 1 1847 0 discriminator 1
 2367 0022 3B69     		ldr	r3, [r7, #16]
 2368 0024 013B     		subs	r3, r3, #1
 2369 0026 3B61     		str	r3, [r7, #16]
1848:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTaskWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists[
 2370              		.loc 1 1848 0 discriminator 1
 2371 0028 7B69     		ldr	r3, [r7, #20]
 2372 002a 5B01     		lsls	r3, r3, #5
 2373 002c FA68     		ldr	r2, [r7, #12]
 2374 002e D118     		adds	r1, r2, r3
 2375 0030 3A69     		ldr	r2, [r7, #16]
 2376 0032 1346     		mov	r3, r2
 2377 0034 9B00     		lsls	r3, r3, #2
 2378 0036 1344     		add	r3, r3, r2
 2379 0038 9B00     		lsls	r3, r3, #2
 2380 003a 2A4A     		ldr	r2, .L153+4
 2381 003c 1344     		add	r3, r3, r2
 2382 003e 0846     		mov	r0, r1
 2383 0040 1946     		mov	r1, r3
 2384 0042 0122     		movs	r2, #1
 2385 0044 FFF7FEFF 		bl	prvListTaskWithinSingleList
 2386 0048 0246     		mov	r2, r0
ARM GAS  /tmp/ccdaF48n.s 			page 79


 2387 004a 7B69     		ldr	r3, [r7, #20]
 2388 004c 1344     		add	r3, r3, r2
 2389 004e 7B61     		str	r3, [r7, #20]
1849:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1850:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
 2390              		.loc 1 1850 0 discriminator 1
 2391 0050 3B69     		ldr	r3, [r7, #16]
 2392 0052 002B     		cmp	r3, #0
 2393 0054 E5D1     		bne	.L150
1851:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1852:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
1853:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
1854:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTaskWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelayed
 2394              		.loc 1 1854 0
 2395 0056 7B69     		ldr	r3, [r7, #20]
 2396 0058 5B01     		lsls	r3, r3, #5
 2397 005a FA68     		ldr	r2, [r7, #12]
 2398 005c 1A44     		add	r2, r2, r3
 2399 005e 224B     		ldr	r3, .L153+8
 2400 0060 1B68     		ldr	r3, [r3]
 2401 0062 1046     		mov	r0, r2
 2402 0064 1946     		mov	r1, r3
 2403 0066 0222     		movs	r2, #2
 2404 0068 FFF7FEFF 		bl	prvListTaskWithinSingleList
 2405 006c 0246     		mov	r2, r0
 2406 006e 7B69     		ldr	r3, [r7, #20]
 2407 0070 1344     		add	r3, r3, r2
 2408 0072 7B61     		str	r3, [r7, #20]
1855:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTaskWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverflo
 2409              		.loc 1 1855 0
 2410 0074 7B69     		ldr	r3, [r7, #20]
 2411 0076 5B01     		lsls	r3, r3, #5
 2412 0078 FA68     		ldr	r2, [r7, #12]
 2413 007a 1A44     		add	r2, r2, r3
 2414 007c 1B4B     		ldr	r3, .L153+12
 2415 007e 1B68     		ldr	r3, [r3]
 2416 0080 1046     		mov	r0, r2
 2417 0082 1946     		mov	r1, r3
 2418 0084 0222     		movs	r2, #2
 2419 0086 FFF7FEFF 		bl	prvListTaskWithinSingleList
 2420 008a 0246     		mov	r2, r0
 2421 008c 7B69     		ldr	r3, [r7, #20]
 2422 008e 1344     		add	r3, r3, r2
 2423 0090 7B61     		str	r3, [r7, #20]
1856:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
1858:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1859:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
1860:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
1861:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTaskWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermina
 2424              		.loc 1 1861 0
 2425 0092 7B69     		ldr	r3, [r7, #20]
 2426 0094 5B01     		lsls	r3, r3, #5
 2427 0096 FA68     		ldr	r2, [r7, #12]
 2428 0098 1344     		add	r3, r3, r2
 2429 009a 1846     		mov	r0, r3
 2430 009c 1449     		ldr	r1, .L153+16
ARM GAS  /tmp/ccdaF48n.s 			page 80


 2431 009e 0422     		movs	r2, #4
 2432 00a0 FFF7FEFF 		bl	prvListTaskWithinSingleList
 2433 00a4 0246     		mov	r2, r0
 2434 00a6 7B69     		ldr	r3, [r7, #20]
 2435 00a8 1344     		add	r3, r3, r2
 2436 00aa 7B61     		str	r3, [r7, #20]
1862:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1863:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1864:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1865:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
1866:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1867:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
1868:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
1869:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTaskWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList, 
 2437              		.loc 1 1869 0
 2438 00ac 7B69     		ldr	r3, [r7, #20]
 2439 00ae 5B01     		lsls	r3, r3, #5
 2440 00b0 FA68     		ldr	r2, [r7, #12]
 2441 00b2 1344     		add	r3, r3, r2
 2442 00b4 1846     		mov	r0, r3
 2443 00b6 0F49     		ldr	r1, .L153+20
 2444 00b8 0322     		movs	r2, #3
 2445 00ba FFF7FEFF 		bl	prvListTaskWithinSingleList
 2446 00be 0246     		mov	r2, r0
 2447 00c0 7B69     		ldr	r3, [r7, #20]
 2448 00c2 1344     		add	r3, r3, r2
 2449 00c4 7B61     		str	r3, [r7, #20]
1870:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1871:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1872:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
1874:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1875:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
1876:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1877:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
1878:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
1879:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1880:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
1881:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1882:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1883:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1884:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1885:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1886:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
 2450              		.loc 1 1886 0
 2451 00c6 7B68     		ldr	r3, [r7, #4]
 2452 00c8 002B     		cmp	r3, #0
 2453 00ca 02D0     		beq	.L149
1887:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1888:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
 2454              		.loc 1 1888 0
 2455 00cc 7B68     		ldr	r3, [r7, #4]
 2456 00ce 0022     		movs	r2, #0
 2457 00d0 1A60     		str	r2, [r3]
 2458              	.L149:
1889:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1890:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccdaF48n.s 			page 81


1891:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1892:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1893:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1894:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1895:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1896:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1897:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1898:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
 2459              		.loc 1 1898 0
 2460 00d2 FFF7FEFF 		bl	xTaskResumeAll
1899:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1900:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 2461              		.loc 1 1900 0
 2462 00d6 7B69     		ldr	r3, [r7, #20]
1901:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2463              		.loc 1 1901 0
 2464 00d8 1846     		mov	r0, r3
 2465 00da 1837     		adds	r7, r7, #24
 2466              	.LCFI88:
 2467              		.cfi_def_cfa_offset 8
 2468 00dc BD46     		mov	sp, r7
 2469              	.LCFI89:
 2470              		.cfi_def_cfa_register 13
 2471              		@ sp needed
 2472 00de 80BD     		pop	{r7, pc}
 2473              	.L154:
 2474              		.align	2
 2475              	.L153:
 2476 00e0 00000000 		.word	uxCurrentNumberOfTasks
 2477 00e4 00000000 		.word	pxReadyTasksLists
 2478 00e8 00000000 		.word	pxDelayedTaskList
 2479 00ec 00000000 		.word	pxOverflowDelayedTaskList
 2480 00f0 00000000 		.word	xTasksWaitingTermination
 2481 00f4 00000000 		.word	xSuspendedTaskList
 2482              		.cfi_endproc
 2483              	.LFE21:
 2485              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2486              		.align	2
 2487              		.global	xTaskIncrementTick
 2488              		.thumb
 2489              		.thumb_func
 2491              	xTaskIncrementTick:
 2492              	.LFB22:
1902:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
1904:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1905:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
1907:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1908:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
1909:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1910:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
1911:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
1912:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
1913:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
1914:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1915:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 82


1916:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
1917:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1918:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1919:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
1920:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
1921:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
1922:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
1923:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1924:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1925:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
1926:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1927:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
1928:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
1929:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
1930:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
1931:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
1932:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
1933:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1934:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1935:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
1936:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
1937:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
1939:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2493              		.loc 1 1939 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 24
 2496              		@ frame_needed = 1, uses_anonymous_args = 0
 2497 0000 80B5     		push	{r7, lr}
 2498              	.LCFI90:
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 86B0     		sub	sp, sp, #24
 2503              	.LCFI91:
 2504              		.cfi_def_cfa_offset 32
 2505 0004 00AF     		add	r7, sp, #0
 2506              	.LCFI92:
 2507              		.cfi_def_cfa_register 7
1940:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
1941:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
1942:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2508              		.loc 1 1942 0
 2509 0006 0023     		movs	r3, #0
 2510 0008 7B61     		str	r3, [r7, #20]
1943:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1944:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
1945:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
1946:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
1947:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
1948:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2511              		.loc 1 1948 0
 2512 000a 524B     		ldr	r3, .L171
 2513 000c 1B68     		ldr	r3, [r3]
 2514 000e 002B     		cmp	r3, #0
 2515 0010 40F08F80 		bne	.L156
1949:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccdaF48n.s 			page 83


1950:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
1951:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
1952:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xTickCount;
 2516              		.loc 1 1952 0
 2517 0014 504B     		ldr	r3, .L171+4
 2518 0016 1B68     		ldr	r3, [r3]
 2519 0018 0133     		adds	r3, r3, #1
 2520 001a 4F4A     		ldr	r2, .L171+4
 2521 001c 1360     		str	r3, [r2]
 2522              	.LBB127:
1953:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1954:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1955:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1956:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1957:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
 2523              		.loc 1 1957 0
 2524 001e 4E4B     		ldr	r3, .L171+4
 2525 0020 1B68     		ldr	r3, [r3]
 2526 0022 3B61     		str	r3, [r7, #16]
1958:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1959:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount == ( TickType_t ) 0U )
 2527              		.loc 1 1959 0
 2528 0024 3B69     		ldr	r3, [r7, #16]
 2529 0026 002B     		cmp	r3, #0
 2530 0028 1FD1     		bne	.L157
 2531              	.LBB128:
1960:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1961:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskSWITCH_DELAYED_LISTS();
 2532              		.loc 1 1961 0
 2533 002a 4C4B     		ldr	r3, .L171+8
 2534 002c 1B68     		ldr	r3, [r3]
 2535 002e 1B68     		ldr	r3, [r3]
 2536 0030 002B     		cmp	r3, #0
 2537 0032 09D0     		beq	.L158
 2538              	.LBB129:
 2539              	.LBB130:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2540              		.loc 2 215 0 discriminator 1
 2541              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 2542 0034 4FF05003 			mov r3, #80												
 2543 0038 83F31188 		msr basepri, r3											
 2544 003c BFF36F8F 		isb														
 2545 0040 BFF34F8F 		dsb														
 2546              	
 2547              	@ 0 "" 2
 2548              		.thumb
 2549 0044 3B60     		str	r3, [r7]
 2550              	.L159:
 2551              	.LBE130:
 2552              	.LBE129:
 2553              		.loc 1 1961 0 discriminator 1
 2554 0046 FEE7     		b	.L159
 2555              	.L158:
 2556              		.loc 1 1961 0 is_stmt 0 discriminator 2
 2557 0048 444B     		ldr	r3, .L171+8
 2558 004a 1B68     		ldr	r3, [r3]
 2559 004c FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccdaF48n.s 			page 84


 2560 004e 444B     		ldr	r3, .L171+12
 2561 0050 1B68     		ldr	r3, [r3]
 2562 0052 424A     		ldr	r2, .L171+8
 2563 0054 1360     		str	r3, [r2]
 2564 0056 424A     		ldr	r2, .L171+12
 2565 0058 FB68     		ldr	r3, [r7, #12]
 2566 005a 1360     		str	r3, [r2]
 2567 005c 414B     		ldr	r3, .L171+16
 2568 005e 1B68     		ldr	r3, [r3]
 2569 0060 0133     		adds	r3, r3, #1
 2570 0062 404A     		ldr	r2, .L171+16
 2571 0064 1360     		str	r3, [r2]
 2572 0066 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2573              	.L157:
 2574              	.LBE128:
1962:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1963:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1964:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1965:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1966:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1967:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1968:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* See if this tick has made a timeout expire.  Tasks are stored in
1969:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the	queue in the order of their wake time - meaning once one task
1970:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			has been found whose block time has not expired there is no need to
1971:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			look any further down the list. */
1972:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount >= xNextTaskUnblockTime )
 2575              		.loc 1 1972 0 is_stmt 1
 2576 006a 3F4B     		ldr	r3, .L171+20
 2577 006c 1B68     		ldr	r3, [r3]
 2578 006e 3A69     		ldr	r2, [r7, #16]
 2579 0070 9A42     		cmp	r2, r3
 2580 0072 4FD3     		bcc	.L160
 2581              	.L167:
1973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1974:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( ;; )
1975:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1976:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 2582              		.loc 1 1976 0
 2583 0074 394B     		ldr	r3, .L171+8
 2584 0076 1B68     		ldr	r3, [r3]
 2585 0078 1B68     		ldr	r3, [r3]
 2586 007a 002B     		cmp	r3, #0
 2587 007c 01D1     		bne	.L161
 2588              		.loc 1 1976 0 is_stmt 0 discriminator 1
 2589 007e 0123     		movs	r3, #1
 2590 0080 00E0     		b	.L162
 2591              	.L161:
 2592              		.loc 1 1976 0 discriminator 2
 2593 0082 0023     		movs	r3, #0
 2594              	.L162:
 2595              		.loc 1 1976 0 discriminator 4
 2596 0084 002B     		cmp	r3, #0
 2597 0086 04D0     		beq	.L163
1977:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1978:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The delayed list is empty.  Set xNextTaskUnblockTime
1979:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						to the maximum possible value so it is extremely
1980:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						unlikely that the
ARM GAS  /tmp/ccdaF48n.s 			page 85


1981:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( xTickCount >= xNextTaskUnblockTime ) test will pass
1982:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next time through. */
1983:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = portMAX_DELAY;
 2598              		.loc 1 1983 0 is_stmt 1
 2599 0088 374B     		ldr	r3, .L171+20
 2600 008a 4FF0FF32 		mov	r2, #-1
 2601 008e 1A60     		str	r2, [r3]
1984:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2602              		.loc 1 1984 0
 2603 0090 40E0     		b	.L160
 2604              	.L163:
1985:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1986:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1987:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1988:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The delayed list is not empty, get the value of the
1989:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item at the head of the delayed list.  This is the time
1990:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						at which the task at the head of the delayed list must
1991:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						be removed from the Blocked state. */
1992:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 2605              		.loc 1 1992 0
 2606 0092 324B     		ldr	r3, .L171+8
 2607 0094 1B68     		ldr	r3, [r3]
 2608 0096 DB68     		ldr	r3, [r3, #12]
 2609 0098 DB68     		ldr	r3, [r3, #12]
 2610 009a BB60     		str	r3, [r7, #8]
1993:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
 2611              		.loc 1 1993 0
 2612 009c BB68     		ldr	r3, [r7, #8]
 2613 009e 5B68     		ldr	r3, [r3, #4]
 2614 00a0 7B60     		str	r3, [r7, #4]
1994:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1995:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( xConstTickCount < xItemValue )
 2615              		.loc 1 1995 0
 2616 00a2 3A69     		ldr	r2, [r7, #16]
 2617 00a4 7B68     		ldr	r3, [r7, #4]
 2618 00a6 9A42     		cmp	r2, r3
 2619 00a8 03D2     		bcs	.L164
1996:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1997:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is not time to unblock this item yet, but the
1998:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							item value is the time at which the task at the head
1999:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							of the blocked list must be removed from the Blocked
2000:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							state -	so record the item value in
2001:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xNextTaskUnblockTime. */
2002:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xNextTaskUnblockTime = xItemValue;
 2620              		.loc 1 2002 0
 2621 00aa 2F4A     		ldr	r2, .L171+20
 2622 00ac 7B68     		ldr	r3, [r7, #4]
 2623 00ae 1360     		str	r3, [r2]
2003:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							break;
 2624              		.loc 1 2003 0
 2625 00b0 30E0     		b	.L160
 2626              	.L164:
2004:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2005:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2006:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2007:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2008:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  /tmp/ccdaF48n.s 			page 86


2009:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2010:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is time to remove the item from the Blocked state. */
2011:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 2627              		.loc 1 2011 0
 2628 00b2 BB68     		ldr	r3, [r7, #8]
 2629 00b4 0433     		adds	r3, r3, #4
 2630 00b6 1846     		mov	r0, r3
 2631 00b8 FFF7FEFF 		bl	uxListRemove
2012:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2013:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Is the task waiting on an event also?  If so remove
2014:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						it from the event list. */
2015:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 2632              		.loc 1 2015 0
 2633 00bc BB68     		ldr	r3, [r7, #8]
 2634 00be 9B6A     		ldr	r3, [r3, #40]
 2635 00c0 002B     		cmp	r3, #0
 2636 00c2 04D0     		beq	.L165
2016:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2017:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2637              		.loc 1 2017 0
 2638 00c4 BB68     		ldr	r3, [r7, #8]
 2639 00c6 1833     		adds	r3, r3, #24
 2640 00c8 1846     		mov	r0, r3
 2641 00ca FFF7FEFF 		bl	uxListRemove
 2642              	.L165:
2018:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2019:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2020:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2021:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2022:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2023:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2024:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Place the unblocked task into the appropriate ready
2025:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						list. */
2026:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
 2643              		.loc 1 2026 0
 2644 00ce BB68     		ldr	r3, [r7, #8]
 2645 00d0 DB6A     		ldr	r3, [r3, #44]
 2646 00d2 1A46     		mov	r2, r3
 2647 00d4 0123     		movs	r3, #1
 2648 00d6 03FA02F2 		lsl	r2, r3, r2
 2649 00da 244B     		ldr	r3, .L171+24
 2650 00dc 1B68     		ldr	r3, [r3]
 2651 00de 1343     		orrs	r3, r3, r2
 2652 00e0 224A     		ldr	r2, .L171+24
 2653 00e2 1360     		str	r3, [r2]
 2654 00e4 BB68     		ldr	r3, [r7, #8]
 2655 00e6 DA6A     		ldr	r2, [r3, #44]
 2656 00e8 1346     		mov	r3, r2
 2657 00ea 9B00     		lsls	r3, r3, #2
 2658 00ec 1344     		add	r3, r3, r2
 2659 00ee 9B00     		lsls	r3, r3, #2
 2660 00f0 1F4A     		ldr	r2, .L171+28
 2661 00f2 1A44     		add	r2, r2, r3
 2662 00f4 BB68     		ldr	r3, [r7, #8]
 2663 00f6 0433     		adds	r3, r3, #4
 2664 00f8 1046     		mov	r0, r2
 2665 00fa 1946     		mov	r1, r3
ARM GAS  /tmp/ccdaF48n.s 			page 87


 2666 00fc FFF7FEFF 		bl	vListInsertEnd
2027:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2028:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* A task being unblocked cannot cause an immediate
2029:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						context switch if preemption is turned off. */
2030:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if (  configUSE_PREEMPTION == 1 )
2031:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2032:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Preemption is on, but a context switch should
2033:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							only be performed if the unblocked task has a
2034:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							priority that is equal to or higher than the
2035:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							currently executing task. */
2036:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2667              		.loc 1 2036 0
 2668 0100 BB68     		ldr	r3, [r7, #8]
 2669 0102 DA6A     		ldr	r2, [r3, #44]
 2670 0104 1B4B     		ldr	r3, .L171+32
 2671 0106 1B68     		ldr	r3, [r3]
 2672 0108 DB6A     		ldr	r3, [r3, #44]
 2673 010a 9A42     		cmp	r2, r3
 2674 010c 01D3     		bcc	.L166
2037:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2038:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xSwitchRequired = pdTRUE;
 2675              		.loc 1 2038 0
 2676 010e 0123     		movs	r3, #1
 2677 0110 7B61     		str	r3, [r7, #20]
 2678              	.L166:
2039:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2040:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2041:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2042:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2043:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2044:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2045:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif /* configUSE_PREEMPTION */
2046:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2047:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2679              		.loc 1 2047 0
 2680 0112 AFE7     		b	.L167
 2681              	.L160:
 2682              	.LBE127:
2048:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2049:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2050:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2051:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2052:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2053:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2054:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2055:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
 2683              		.loc 1 2056 0
 2684 0114 174B     		ldr	r3, .L171+32
 2685 0116 1B68     		ldr	r3, [r3]
 2686 0118 DA6A     		ldr	r2, [r3, #44]
 2687 011a 1549     		ldr	r1, .L171+28
 2688 011c 1346     		mov	r3, r2
 2689 011e 9B00     		lsls	r3, r3, #2
 2690 0120 1344     		add	r3, r3, r2
 2691 0122 9B00     		lsls	r3, r3, #2
 2692 0124 0B44     		add	r3, r3, r1
ARM GAS  /tmp/ccdaF48n.s 			page 88


 2693 0126 1B68     		ldr	r3, [r3]
 2694 0128 012B     		cmp	r3, #1
 2695 012a 07D9     		bls	.L168
2057:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2058:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
 2696              		.loc 1 2058 0
 2697 012c 0123     		movs	r3, #1
 2698 012e 7B61     		str	r3, [r7, #20]
 2699 0130 04E0     		b	.L168
 2700              	.L156:
2059:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2060:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2061:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2062:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2063:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2064:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2065:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2066:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2067:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2068:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2069:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2070:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2071:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2072:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2073:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2074:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2075:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2076:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2077:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2078:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2079:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2081:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2082:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2083:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2084:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
 2701              		.loc 1 2084 0
 2702 0132 114B     		ldr	r3, .L171+36
 2703 0134 1B68     		ldr	r3, [r3]
 2704 0136 0133     		adds	r3, r3, #1
 2705 0138 0F4A     		ldr	r2, .L171+36
 2706 013a 1360     		str	r3, [r2]
 2707              	.L168:
2085:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2086:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2087:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2088:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2089:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2091:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2093:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2094:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2095:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2096:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2097:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
 2708              		.loc 1 2097 0
ARM GAS  /tmp/ccdaF48n.s 			page 89


 2709 013c 0F4B     		ldr	r3, .L171+40
 2710 013e 1B68     		ldr	r3, [r3]
 2711 0140 002B     		cmp	r3, #0
 2712 0142 01D0     		beq	.L169
2098:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2099:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
 2713              		.loc 1 2099 0
 2714 0144 0123     		movs	r3, #1
 2715 0146 7B61     		str	r3, [r7, #20]
 2716              	.L169:
2100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
 2717              		.loc 1 2108 0
 2718 0148 7B69     		ldr	r3, [r7, #20]
2109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2719              		.loc 1 2109 0
 2720 014a 1846     		mov	r0, r3
 2721 014c 1837     		adds	r7, r7, #24
 2722              	.LCFI93:
 2723              		.cfi_def_cfa_offset 8
 2724 014e BD46     		mov	sp, r7
 2725              	.LCFI94:
 2726              		.cfi_def_cfa_register 13
 2727              		@ sp needed
 2728 0150 80BD     		pop	{r7, pc}
 2729              	.L172:
 2730 0152 00BF     		.align	2
 2731              	.L171:
 2732 0154 00000000 		.word	uxSchedulerSuspended
 2733 0158 00000000 		.word	xTickCount
 2734 015c 00000000 		.word	pxDelayedTaskList
 2735 0160 00000000 		.word	pxOverflowDelayedTaskList
 2736 0164 00000000 		.word	xNumOfOverflows
 2737 0168 00000000 		.word	xNextTaskUnblockTime
 2738 016c 00000000 		.word	uxTopReadyPriority
 2739 0170 00000000 		.word	pxReadyTasksLists
 2740 0174 00000000 		.word	pxCurrentTCB
 2741 0178 00000000 		.word	uxPendedTicks
 2742 017c 00000000 		.word	xYieldPending
 2743              		.cfi_endproc
 2744              	.LFE22:
 2746              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2747              		.align	2
 2748              		.global	vTaskSwitchContext
 2749              		.thumb
 2750              		.thumb_func
 2752              	vTaskSwitchContext:
 2753              	.LFB23:
2110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 90


2112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccdaF48n.s 			page 91


2169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2754              		.loc 1 2203 0
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 24
 2757              		@ frame_needed = 1, uses_anonymous_args = 0
 2758              		@ link register save eliminated.
 2759 0000 80B4     		push	{r7}
 2760              	.LCFI95:
 2761              		.cfi_def_cfa_offset 4
 2762              		.cfi_offset 7, -4
 2763 0002 87B0     		sub	sp, sp, #28
 2764              	.LCFI96:
 2765              		.cfi_def_cfa_offset 32
 2766 0004 00AF     		add	r7, sp, #0
 2767              	.LCFI97:
 2768              		.cfi_def_cfa_register 7
2204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2769              		.loc 1 2204 0
 2770 0006 264B     		ldr	r3, .L180
 2771 0008 1B68     		ldr	r3, [r3]
 2772 000a 002B     		cmp	r3, #0
 2773 000c 03D0     		beq	.L174
2205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/ccdaF48n.s 			page 92


2206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 2774              		.loc 1 2208 0
 2775 000e 254B     		ldr	r3, .L180+4
 2776 0010 0122     		movs	r2, #1
 2777 0012 1A60     		str	r2, [r3]
 2778 0014 3EE0     		b	.L173
 2779              	.L174:
2209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
 2780              		.loc 1 2212 0
 2781 0016 234B     		ldr	r3, .L180+4
 2782 0018 0022     		movs	r2, #0
 2783 001a 1A60     		str	r2, [r3]
 2784              	.LBB131:
2213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated	time so far.  The time the task started running was
2225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here	so count values are only valid until the timer
2227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskFIRST_CHECK_FOR_STACK_OVERFLOW();
2244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSECOND_CHECK_FOR_STACK_OVERFLOW();
2245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
 2785              		.loc 1 2248 0
 2786 001c 224B     		ldr	r3, .L180+8
 2787 001e 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 93


 2788 0020 FB60     		str	r3, [r7, #12]
 2789              	.LBB132:
 2790              	.LBB133:
 176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 2791              		.loc 2 176 0
 2792 0022 FB68     		ldr	r3, [r7, #12]
 2793              	@ 176 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 2794 0024 B3FA83F3 		clz r3, r3
 2795              	@ 0 "" 2
 2796              		.thumb
 2797 0028 FB72     		strb	r3, [r7, #11]
 177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 2798              		.loc 2 177 0
 2799 002a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2800              	.LBE133:
 2801              	.LBE132:
 2802              		.loc 1 2248 0
 2803 002c C3F11F03 		rsb	r3, r3, #31
 2804 0030 7B61     		str	r3, [r7, #20]
 2805 0032 1E49     		ldr	r1, .L180+12
 2806 0034 7A69     		ldr	r2, [r7, #20]
 2807 0036 1346     		mov	r3, r2
 2808 0038 9B00     		lsls	r3, r3, #2
 2809 003a 1344     		add	r3, r3, r2
 2810 003c 9B00     		lsls	r3, r3, #2
 2811 003e 0B44     		add	r3, r3, r1
 2812 0040 1B68     		ldr	r3, [r3]
 2813 0042 002B     		cmp	r3, #0
 2814 0044 09D1     		bne	.L177
 2815              	.LBB134:
 2816              	.LBB135:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2817              		.loc 2 215 0 discriminator 1
 2818              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 2819 0046 4FF05003 			mov r3, #80												
 2820 004a 83F31188 		msr basepri, r3											
 2821 004e BFF36F8F 		isb														
 2822 0052 BFF34F8F 		dsb														
 2823              	
 2824              	@ 0 "" 2
 2825              		.thumb
 2826 0056 7B60     		str	r3, [r7, #4]
 2827              	.L178:
 2828              	.LBE135:
 2829              	.LBE134:
 2830              		.loc 1 2248 0 discriminator 1
 2831 0058 FEE7     		b	.L178
 2832              	.L177:
 2833              	.LBB136:
 2834              		.loc 1 2248 0 is_stmt 0 discriminator 2
 2835 005a 7A69     		ldr	r2, [r7, #20]
 2836 005c 1346     		mov	r3, r2
 2837 005e 9B00     		lsls	r3, r3, #2
 2838 0060 1344     		add	r3, r3, r2
 2839 0062 9B00     		lsls	r3, r3, #2
 2840 0064 114A     		ldr	r2, .L180+12
 2841 0066 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccdaF48n.s 			page 94


 2842 0068 3B61     		str	r3, [r7, #16]
 2843 006a 3B69     		ldr	r3, [r7, #16]
 2844 006c 5B68     		ldr	r3, [r3, #4]
 2845 006e 5A68     		ldr	r2, [r3, #4]
 2846 0070 3B69     		ldr	r3, [r7, #16]
 2847 0072 5A60     		str	r2, [r3, #4]
 2848 0074 3B69     		ldr	r3, [r7, #16]
 2849 0076 5A68     		ldr	r2, [r3, #4]
 2850 0078 3B69     		ldr	r3, [r7, #16]
 2851 007a 0833     		adds	r3, r3, #8
 2852 007c 9A42     		cmp	r2, r3
 2853 007e 04D1     		bne	.L179
 2854              		.loc 1 2248 0 discriminator 3
 2855 0080 3B69     		ldr	r3, [r7, #16]
 2856 0082 5B68     		ldr	r3, [r3, #4]
 2857 0084 5A68     		ldr	r2, [r3, #4]
 2858 0086 3B69     		ldr	r3, [r7, #16]
 2859 0088 5A60     		str	r2, [r3, #4]
 2860              	.L179:
 2861              		.loc 1 2248 0 discriminator 5
 2862 008a 3B69     		ldr	r3, [r7, #16]
 2863 008c 5B68     		ldr	r3, [r3, #4]
 2864 008e DB68     		ldr	r3, [r3, #12]
 2865 0090 074A     		ldr	r2, .L180+16
 2866 0092 1360     		str	r3, [r2]
 2867              	.L173:
 2868              	.LBE136:
 2869              	.LBE131:
2249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2252:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2253:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2254:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2255:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2256:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2257:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2258:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2259:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2870              		.loc 1 2259 0 is_stmt 1
 2871 0094 1C37     		adds	r7, r7, #28
 2872              	.LCFI98:
 2873              		.cfi_def_cfa_offset 4
 2874 0096 BD46     		mov	sp, r7
 2875              	.LCFI99:
 2876              		.cfi_def_cfa_register 13
 2877              		@ sp needed
 2878 0098 5DF8047B 		ldr	r7, [sp], #4
 2879              	.LCFI100:
 2880              		.cfi_restore 7
 2881              		.cfi_def_cfa_offset 0
 2882 009c 7047     		bx	lr
 2883              	.L181:
 2884 009e 00BF     		.align	2
 2885              	.L180:
 2886 00a0 00000000 		.word	uxSchedulerSuspended
 2887 00a4 00000000 		.word	xYieldPending
ARM GAS  /tmp/ccdaF48n.s 			page 95


 2888 00a8 00000000 		.word	uxTopReadyPriority
 2889 00ac 00000000 		.word	pxReadyTasksLists
 2890 00b0 00000000 		.word	pxCurrentTCB
 2891              		.cfi_endproc
 2892              	.LFE23:
 2894              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2895              		.align	2
 2896              		.global	vTaskPlaceOnEventList
 2897              		.thumb
 2898              		.thumb_func
 2900              	vTaskPlaceOnEventList:
 2901              	.LFB24:
2260:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2261:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2262:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2263:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2902              		.loc 1 2263 0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 16
 2905              		@ frame_needed = 1, uses_anonymous_args = 0
 2906 0000 80B5     		push	{r7, lr}
 2907              	.LCFI101:
 2908              		.cfi_def_cfa_offset 8
 2909              		.cfi_offset 7, -8
 2910              		.cfi_offset 14, -4
 2911 0002 84B0     		sub	sp, sp, #16
 2912              	.LCFI102:
 2913              		.cfi_def_cfa_offset 24
 2914 0004 00AF     		add	r7, sp, #0
 2915              	.LCFI103:
 2916              		.cfi_def_cfa_register 7
 2917 0006 7860     		str	r0, [r7, #4]
 2918 0008 3960     		str	r1, [r7]
2264:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
2265:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2266:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2919              		.loc 1 2266 0
 2920 000a 7B68     		ldr	r3, [r7, #4]
 2921 000c 002B     		cmp	r3, #0
 2922 000e 09D1     		bne	.L183
 2923              	.LBB137:
 2924              	.LBB138:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2925              		.loc 2 215 0 discriminator 1
 2926              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 2927 0010 4FF05003 			mov r3, #80												
 2928 0014 83F31188 		msr basepri, r3											
 2929 0018 BFF36F8F 		isb														
 2930 001c BFF34F8F 		dsb														
 2931              	
 2932              	@ 0 "" 2
 2933              		.thumb
 2934 0020 BB60     		str	r3, [r7, #8]
 2935              	.L184:
 2936              	.LBE138:
 2937              	.LBE137:
 2938              		.loc 1 2266 0 discriminator 1
ARM GAS  /tmp/ccdaF48n.s 			page 96


 2939 0022 FEE7     		b	.L184
 2940              	.L183:
2267:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2268:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2269:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2270:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2271:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2272:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2273:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2274:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2275:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 2941              		.loc 1 2275 0
 2942 0024 194B     		ldr	r3, .L188
 2943 0026 1B68     		ldr	r3, [r3]
 2944 0028 1833     		adds	r3, r3, #24
 2945 002a 7868     		ldr	r0, [r7, #4]
 2946 002c 1946     		mov	r1, r3
 2947 002e FFF7FEFF 		bl	vListInsert
2276:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The task must be removed from from the ready list before it is added to
2278:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the blocked list as the same list item is used for both lists.  Exclusive
2279:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	access to the ready lists guaranteed because the scheduler is locked. */
2280:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 2948              		.loc 1 2280 0
 2949 0032 164B     		ldr	r3, .L188
 2950 0034 1B68     		ldr	r3, [r3]
 2951 0036 0433     		adds	r3, r3, #4
 2952 0038 1846     		mov	r0, r3
 2953 003a FFF7FEFF 		bl	uxListRemove
 2954 003e 0346     		mov	r3, r0
 2955 0040 002B     		cmp	r3, #0
 2956 0042 0BD1     		bne	.L185
2281:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2282:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
2283:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
2284:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 2957              		.loc 1 2284 0
 2958 0044 114B     		ldr	r3, .L188
 2959 0046 1B68     		ldr	r3, [r3]
 2960 0048 DB6A     		ldr	r3, [r3, #44]
 2961 004a 1A46     		mov	r2, r3
 2962 004c 0123     		movs	r3, #1
 2963 004e 9340     		lsls	r3, r3, r2
 2964 0050 DA43     		mvns	r2, r3
 2965 0052 0F4B     		ldr	r3, .L188+4
 2966 0054 1B68     		ldr	r3, [r3]
 2967 0056 1340     		ands	r3, r3, r2
 2968 0058 0D4A     		ldr	r2, .L188+4
 2969 005a 1360     		str	r3, [r2]
 2970              	.L185:
2285:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2286:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2287:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2288:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
2289:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2290:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2291:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  /tmp/ccdaF48n.s 			page 97


2292:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2293:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
 2971              		.loc 1 2293 0
 2972 005c 3B68     		ldr	r3, [r7]
 2973 005e B3F1FF3F 		cmp	r3, #-1
 2974 0062 07D1     		bne	.L186
2294:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
2296:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure the task is not woken by a timing event.  It will
2297:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block indefinitely. */
2298:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 2975              		.loc 1 2298 0
 2976 0064 094B     		ldr	r3, .L188
 2977 0066 1B68     		ldr	r3, [r3]
 2978 0068 0433     		adds	r3, r3, #4
 2979 006a 0A48     		ldr	r0, .L188+8
 2980 006c 1946     		mov	r1, r3
 2981 006e FFF7FEFF 		bl	vListInsertEnd
 2982 0072 07E0     		b	.L182
 2983              	.L186:
2299:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2300:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2301:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2302:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
2303:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
2304:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler will handle it. */
2305:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
 2984              		.loc 1 2305 0
 2985 0074 084B     		ldr	r3, .L188+12
 2986 0076 1A68     		ldr	r2, [r3]
 2987 0078 3B68     		ldr	r3, [r7]
 2988 007a 1344     		add	r3, r3, r2
 2989 007c FB60     		str	r3, [r7, #12]
2306:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
 2990              		.loc 1 2306 0
 2991 007e F868     		ldr	r0, [r7, #12]
 2992 0080 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2993              	.L182:
2307:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2308:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2309:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
2310:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
2312:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not occur.  This may overflow but this doesn't matter, the scheduler
2313:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will handle it. */
2314:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
2315:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
2316:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2317:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
2318:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2994              		.loc 1 2318 0
 2995 0084 1037     		adds	r7, r7, #16
 2996              	.LCFI104:
 2997              		.cfi_def_cfa_offset 8
 2998 0086 BD46     		mov	sp, r7
 2999              	.LCFI105:
 3000              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccdaF48n.s 			page 98


 3001              		@ sp needed
 3002 0088 80BD     		pop	{r7, pc}
 3003              	.L189:
 3004 008a 00BF     		.align	2
 3005              	.L188:
 3006 008c 00000000 		.word	pxCurrentTCB
 3007 0090 00000000 		.word	uxTopReadyPriority
 3008 0094 00000000 		.word	xSuspendedTaskList
 3009 0098 00000000 		.word	xTickCount
 3010              		.cfi_endproc
 3011              	.LFE24:
 3013              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3014              		.align	2
 3015              		.global	vTaskPlaceOnUnorderedEventList
 3016              		.thumb
 3017              		.thumb_func
 3019              	vTaskPlaceOnUnorderedEventList:
 3020              	.LFB25:
2319:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2320:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2321:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2322:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3021              		.loc 1 2322 0
 3022              		.cfi_startproc
 3023              		@ args = 0, pretend = 0, frame = 32
 3024              		@ frame_needed = 1, uses_anonymous_args = 0
 3025 0000 80B5     		push	{r7, lr}
 3026              	.LCFI106:
 3027              		.cfi_def_cfa_offset 8
 3028              		.cfi_offset 7, -8
 3029              		.cfi_offset 14, -4
 3030 0002 88B0     		sub	sp, sp, #32
 3031              	.LCFI107:
 3032              		.cfi_def_cfa_offset 40
 3033 0004 00AF     		add	r7, sp, #0
 3034              	.LCFI108:
 3035              		.cfi_def_cfa_register 7
 3036 0006 F860     		str	r0, [r7, #12]
 3037 0008 B960     		str	r1, [r7, #8]
 3038 000a 7A60     		str	r2, [r7, #4]
2323:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
2324:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2325:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3039              		.loc 1 2325 0
 3040 000c FB68     		ldr	r3, [r7, #12]
 3041 000e 002B     		cmp	r3, #0
 3042 0010 09D1     		bne	.L191
 3043              	.LBB139:
 3044              	.LBB140:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3045              		.loc 2 215 0 discriminator 1
 3046              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3047 0012 4FF05003 			mov r3, #80												
 3048 0016 83F31188 		msr basepri, r3											
 3049 001a BFF36F8F 		isb														
 3050 001e BFF34F8F 		dsb														
 3051              	
ARM GAS  /tmp/ccdaF48n.s 			page 99


 3052              	@ 0 "" 2
 3053              		.thumb
 3054 0022 BB61     		str	r3, [r7, #24]
 3055              	.L192:
 3056              	.LBE140:
 3057              	.LBE139:
 3058              		.loc 1 2325 0 discriminator 1
 3059 0024 FEE7     		b	.L192
 3060              	.L191:
2326:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2327:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2328:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2329:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
 3061              		.loc 1 2329 0
 3062 0026 234B     		ldr	r3, .L198
 3063 0028 1B68     		ldr	r3, [r3]
 3064 002a 002B     		cmp	r3, #0
 3065 002c 09D1     		bne	.L193
 3066              	.LBB141:
 3067              	.LBB142:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3068              		.loc 2 215 0 discriminator 1
 3069              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3070 002e 4FF05003 			mov r3, #80												
 3071 0032 83F31188 		msr basepri, r3											
 3072 0036 BFF36F8F 		isb														
 3073 003a BFF34F8F 		dsb														
 3074              	
 3075              	@ 0 "" 2
 3076              		.thumb
 3077 003e 7B61     		str	r3, [r7, #20]
 3078              	.L194:
 3079              	.LBE142:
 3080              	.LBE141:
 3081              		.loc 1 2329 0 discriminator 2
 3082 0040 FEE7     		b	.L194
 3083              	.L193:
2330:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2331:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2332:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2333:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2334:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
 3084              		.loc 1 2334 0
 3085 0042 1D4B     		ldr	r3, .L198+4
 3086 0044 1B68     		ldr	r3, [r3]
 3087 0046 BA68     		ldr	r2, [r7, #8]
 3088 0048 42F00042 		orr	r2, r2, #-2147483648
 3089 004c 9A61     		str	r2, [r3, #24]
2335:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2337:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2338:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2339:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2340:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2341:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3090              		.loc 1 2341 0
 3091 004e 1A4B     		ldr	r3, .L198+4
ARM GAS  /tmp/ccdaF48n.s 			page 100


 3092 0050 1B68     		ldr	r3, [r3]
 3093 0052 1833     		adds	r3, r3, #24
 3094 0054 F868     		ldr	r0, [r7, #12]
 3095 0056 1946     		mov	r1, r3
 3096 0058 FFF7FEFF 		bl	vListInsertEnd
2342:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The task must be removed from the ready list before it is added to the
2344:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	blocked list.  Exclusive access can be assured to the ready list as the
2345:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is locked. */
2346:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 3097              		.loc 1 2346 0
 3098 005c 164B     		ldr	r3, .L198+4
 3099 005e 1B68     		ldr	r3, [r3]
 3100 0060 0433     		adds	r3, r3, #4
 3101 0062 1846     		mov	r0, r3
 3102 0064 FFF7FEFF 		bl	uxListRemove
 3103 0068 0346     		mov	r3, r0
 3104 006a 002B     		cmp	r3, #0
 3105 006c 0BD1     		bne	.L195
2347:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2348:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
2349:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
2350:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 3106              		.loc 1 2350 0
 3107 006e 124B     		ldr	r3, .L198+4
 3108 0070 1B68     		ldr	r3, [r3]
 3109 0072 DB6A     		ldr	r3, [r3, #44]
 3110 0074 1A46     		mov	r2, r3
 3111 0076 0123     		movs	r3, #1
 3112 0078 9340     		lsls	r3, r3, r2
 3113 007a DA43     		mvns	r2, r3
 3114 007c 0F4B     		ldr	r3, .L198+8
 3115 007e 1B68     		ldr	r3, [r3]
 3116 0080 1340     		ands	r3, r3, r2
 3117 0082 0E4A     		ldr	r2, .L198+8
 3118 0084 1360     		str	r3, [r2]
 3119              	.L195:
2351:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2352:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2353:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2354:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
2355:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2356:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2357:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
2358:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2359:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToWait == portMAX_DELAY )
 3120              		.loc 1 2359 0
 3121 0086 7B68     		ldr	r3, [r7, #4]
 3122 0088 B3F1FF3F 		cmp	r3, #-1
 3123 008c 07D1     		bne	.L196
2360:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2361:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
2362:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
2363:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
2364:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 3124              		.loc 1 2364 0
 3125 008e 0A4B     		ldr	r3, .L198+4
ARM GAS  /tmp/ccdaF48n.s 			page 101


 3126 0090 1B68     		ldr	r3, [r3]
 3127 0092 0433     		adds	r3, r3, #4
 3128 0094 0A48     		ldr	r0, .L198+12
 3129 0096 1946     		mov	r1, r3
 3130 0098 FFF7FEFF 		bl	vListInsertEnd
 3131 009c 07E0     		b	.L190
 3132              	.L196:
2365:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2366:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2367:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2368:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
2369:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
2370:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
2371:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
 3133              		.loc 1 2371 0
 3134 009e 094B     		ldr	r3, .L198+16
 3135 00a0 1A68     		ldr	r2, [r3]
 3136 00a2 7B68     		ldr	r3, [r7, #4]
 3137 00a4 1344     		add	r3, r3, r2
 3138 00a6 FB61     		str	r3, [r7, #28]
2372:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
 3139              		.loc 1 2372 0
 3140 00a8 F869     		ldr	r0, [r7, #28]
 3141 00aa FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3142              	.L190:
2373:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2374:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2375:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
2376:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2377:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event does
2378:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not occur.  This may overflow but this doesn't matter, the kernel
2379:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will manage it correctly. */
2380:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xTickCount + xTicksToWait;
2381:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddCurrentTaskToDelayedList( xTimeToWake );
2382:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2383:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
2384:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3143              		.loc 1 2384 0
 3144 00ae 2037     		adds	r7, r7, #32
 3145              	.LCFI109:
 3146              		.cfi_def_cfa_offset 8
 3147 00b0 BD46     		mov	sp, r7
 3148              	.LCFI110:
 3149              		.cfi_def_cfa_register 13
 3150              		@ sp needed
 3151 00b2 80BD     		pop	{r7, pc}
 3152              	.L199:
 3153              		.align	2
 3154              	.L198:
 3155 00b4 00000000 		.word	uxSchedulerSuspended
 3156 00b8 00000000 		.word	pxCurrentTCB
 3157 00bc 00000000 		.word	uxTopReadyPriority
 3158 00c0 00000000 		.word	xSuspendedTaskList
 3159 00c4 00000000 		.word	xTickCount
 3160              		.cfi_endproc
 3161              	.LFE25:
 3163              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
ARM GAS  /tmp/ccdaF48n.s 			page 102


 3164              		.align	2
 3165              		.global	xTaskRemoveFromEventList
 3166              		.thumb
 3167              		.thumb_func
 3169              	xTaskRemoveFromEventList:
 3170              	.LFB26:
2385:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2386:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2387:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configUSE_TIMERS == 1
2388:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, const TickType_t xTicksToWait )
2390:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2391:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
2392:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2393:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2394:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2396:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2397:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2398:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2399:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2400:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2402:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2403:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2404:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2405:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2406:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* We must remove this task from the ready list before adding it to the
2408:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		blocked list as the same list item is used for both lists.  This
2409:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is called with the scheduler locked so interrupts will not
2410:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		access the lists at the same time. */
2411:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
2412:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2413:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The current task must be in a ready list, so there is no need to
2414:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check, and the port reset macro can be called directly. */
2415:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
2416:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2417:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2418:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2419:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2420:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2421:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2422:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event does
2423:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		not occur.  This may overflow but this doesn't matter. */
2424:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xTickCount + xTicksToWait;
2425:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL();
2427:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTimeToWake );
2428:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2429:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2430:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2431:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2432:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2433:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2434:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3171              		.loc 1 2434 0
ARM GAS  /tmp/ccdaF48n.s 			page 103


 3172              		.cfi_startproc
 3173              		@ args = 0, pretend = 0, frame = 24
 3174              		@ frame_needed = 1, uses_anonymous_args = 0
 3175 0000 80B5     		push	{r7, lr}
 3176              	.LCFI111:
 3177              		.cfi_def_cfa_offset 8
 3178              		.cfi_offset 7, -8
 3179              		.cfi_offset 14, -4
 3180 0002 86B0     		sub	sp, sp, #24
 3181              	.LCFI112:
 3182              		.cfi_def_cfa_offset 32
 3183 0004 00AF     		add	r7, sp, #0
 3184              	.LCFI113:
 3185              		.cfi_def_cfa_register 7
 3186 0006 7860     		str	r0, [r7, #4]
2435:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2436:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2437:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2439:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2440:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2441:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2442:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2443:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2444:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2446:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2447:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2448:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2449:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2450:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2451:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 3187              		.loc 1 2451 0
 3188 0008 7B68     		ldr	r3, [r7, #4]
 3189 000a DB68     		ldr	r3, [r3, #12]
 3190 000c DB68     		ldr	r3, [r3, #12]
 3191 000e 3B61     		str	r3, [r7, #16]
2452:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3192              		.loc 1 2452 0
 3193 0010 3B69     		ldr	r3, [r7, #16]
 3194 0012 002B     		cmp	r3, #0
 3195 0014 09D1     		bne	.L201
 3196              	.LBB143:
 3197              	.LBB144:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3198              		.loc 2 215 0 discriminator 1
 3199              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3200 0016 4FF05003 			mov r3, #80												
 3201 001a 83F31188 		msr basepri, r3											
 3202 001e BFF36F8F 		isb														
 3203 0022 BFF34F8F 		dsb														
 3204              	
 3205              	@ 0 "" 2
 3206              		.thumb
 3207 0026 FB60     		str	r3, [r7, #12]
 3208              	.L202:
 3209              	.LBE144:
ARM GAS  /tmp/ccdaF48n.s 			page 104


 3210              	.LBE143:
 3211              		.loc 1 2452 0 discriminator 1
 3212 0028 FEE7     		b	.L202
 3213              	.L201:
2453:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3214              		.loc 1 2453 0
 3215 002a 3B69     		ldr	r3, [r7, #16]
 3216 002c 1833     		adds	r3, r3, #24
 3217 002e 1846     		mov	r0, r3
 3218 0030 FFF7FEFF 		bl	uxListRemove
2454:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2455:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3219              		.loc 1 2455 0
 3220 0034 1E4B     		ldr	r3, .L208
 3221 0036 1B68     		ldr	r3, [r3]
 3222 0038 002B     		cmp	r3, #0
 3223 003a 1ED1     		bne	.L203
2456:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2457:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
 3224              		.loc 1 2457 0
 3225 003c 3B69     		ldr	r3, [r7, #16]
 3226 003e 0433     		adds	r3, r3, #4
 3227 0040 1846     		mov	r0, r3
 3228 0042 FFF7FEFF 		bl	uxListRemove
2458:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3229              		.loc 1 2458 0
 3230 0046 3B69     		ldr	r3, [r7, #16]
 3231 0048 DB6A     		ldr	r3, [r3, #44]
 3232 004a 1A46     		mov	r2, r3
 3233 004c 0123     		movs	r3, #1
 3234 004e 03FA02F2 		lsl	r2, r3, r2
 3235 0052 184B     		ldr	r3, .L208+4
 3236 0054 1B68     		ldr	r3, [r3]
 3237 0056 1343     		orrs	r3, r3, r2
 3238 0058 164A     		ldr	r2, .L208+4
 3239 005a 1360     		str	r3, [r2]
 3240 005c 3B69     		ldr	r3, [r7, #16]
 3241 005e DA6A     		ldr	r2, [r3, #44]
 3242 0060 1346     		mov	r3, r2
 3243 0062 9B00     		lsls	r3, r3, #2
 3244 0064 1344     		add	r3, r3, r2
 3245 0066 9B00     		lsls	r3, r3, #2
 3246 0068 134A     		ldr	r2, .L208+8
 3247 006a 1A44     		add	r2, r2, r3
 3248 006c 3B69     		ldr	r3, [r7, #16]
 3249 006e 0433     		adds	r3, r3, #4
 3250 0070 1046     		mov	r0, r2
 3251 0072 1946     		mov	r1, r3
 3252 0074 FFF7FEFF 		bl	vListInsertEnd
 3253 0078 05E0     		b	.L204
 3254              	.L203:
2459:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2460:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2461:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2462:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2463:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
2464:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
ARM GAS  /tmp/ccdaF48n.s 			page 105


 3255              		.loc 1 2464 0
 3256 007a 3B69     		ldr	r3, [r7, #16]
 3257 007c 1833     		adds	r3, r3, #24
 3258 007e 0F48     		ldr	r0, .L208+12
 3259 0080 1946     		mov	r1, r3
 3260 0082 FFF7FEFF 		bl	vListInsertEnd
 3261              	.L204:
2465:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2466:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2467:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 3262              		.loc 1 2467 0
 3263 0086 3B69     		ldr	r3, [r7, #16]
 3264 0088 DA6A     		ldr	r2, [r3, #44]
 3265 008a 0D4B     		ldr	r3, .L208+16
 3266 008c 1B68     		ldr	r3, [r3]
 3267 008e DB6A     		ldr	r3, [r3, #44]
 3268 0090 9A42     		cmp	r2, r3
 3269 0092 05D9     		bls	.L205
2468:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2469:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2470:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2471:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
2472:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
 3270              		.loc 1 2472 0
 3271 0094 0123     		movs	r3, #1
 3272 0096 7B61     		str	r3, [r7, #20]
2473:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2474:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2475:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2476:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3273              		.loc 1 2476 0
 3274 0098 0A4B     		ldr	r3, .L208+20
 3275 009a 0122     		movs	r2, #1
 3276 009c 1A60     		str	r2, [r3]
 3277 009e 01E0     		b	.L206
 3278              	.L205:
2477:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2478:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2479:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2480:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
 3279              		.loc 1 2480 0
 3280 00a0 0023     		movs	r3, #0
 3281 00a2 7B61     		str	r3, [r7, #20]
 3282              	.L206:
2481:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2482:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2483:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE == 1 )
2484:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2485:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2486:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2487:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2488:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically get reset to a new
2489:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2490:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2491:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2492:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2493:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
ARM GAS  /tmp/ccdaF48n.s 			page 106


2494:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2495:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
2496:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3283              		.loc 1 2497 0
 3284 00a4 7B69     		ldr	r3, [r7, #20]
2498:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3285              		.loc 1 2498 0
 3286 00a6 1846     		mov	r0, r3
 3287 00a8 1837     		adds	r7, r7, #24
 3288              	.LCFI114:
 3289              		.cfi_def_cfa_offset 8
 3290 00aa BD46     		mov	sp, r7
 3291              	.LCFI115:
 3292              		.cfi_def_cfa_register 13
 3293              		@ sp needed
 3294 00ac 80BD     		pop	{r7, pc}
 3295              	.L209:
 3296 00ae 00BF     		.align	2
 3297              	.L208:
 3298 00b0 00000000 		.word	uxSchedulerSuspended
 3299 00b4 00000000 		.word	uxTopReadyPriority
 3300 00b8 00000000 		.word	pxReadyTasksLists
 3301 00bc 00000000 		.word	xPendingReadyList
 3302 00c0 00000000 		.word	pxCurrentTCB
 3303 00c4 00000000 		.word	xYieldPending
 3304              		.cfi_endproc
 3305              	.LFE26:
 3307              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 3308              		.align	2
 3309              		.global	xTaskRemoveFromUnorderedEventList
 3310              		.thumb
 3311              		.thumb_func
 3313              	xTaskRemoveFromUnorderedEventList:
 3314              	.LFB27:
2499:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2500:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2501:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2502:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3315              		.loc 1 2502 0
 3316              		.cfi_startproc
 3317              		@ args = 0, pretend = 0, frame = 24
 3318              		@ frame_needed = 1, uses_anonymous_args = 0
 3319 0000 80B5     		push	{r7, lr}
 3320              	.LCFI116:
 3321              		.cfi_def_cfa_offset 8
 3322              		.cfi_offset 7, -8
 3323              		.cfi_offset 14, -4
 3324 0002 86B0     		sub	sp, sp, #24
 3325              	.LCFI117:
 3326              		.cfi_def_cfa_offset 32
 3327 0004 00AF     		add	r7, sp, #0
 3328              	.LCFI118:
 3329              		.cfi_def_cfa_register 7
 3330 0006 7860     		str	r0, [r7, #4]
 3331 0008 3960     		str	r1, [r7]
2503:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
ARM GAS  /tmp/ccdaF48n.s 			page 107


2504:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2505:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2506:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2507:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
2508:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
 3332              		.loc 1 2508 0
 3333 000a 2C4B     		ldr	r3, .L218
 3334 000c 1B68     		ldr	r3, [r3]
 3335 000e 002B     		cmp	r3, #0
 3336 0010 09D1     		bne	.L211
 3337              	.LBB145:
 3338              	.LBB146:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3339              		.loc 2 215 0 discriminator 1
 3340              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3341 0012 4FF05003 			mov r3, #80												
 3342 0016 83F31188 		msr basepri, r3											
 3343 001a BFF36F8F 		isb														
 3344 001e BFF34F8F 		dsb														
 3345              	
 3346              	@ 0 "" 2
 3347              		.thumb
 3348 0022 FB60     		str	r3, [r7, #12]
 3349              	.L212:
 3350              	.LBE146:
 3351              	.LBE145:
 3352              		.loc 1 2508 0 discriminator 1
 3353 0024 FEE7     		b	.L212
 3354              	.L211:
2509:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2510:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
2511:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
 3355              		.loc 1 2511 0
 3356 0026 3B68     		ldr	r3, [r7]
 3357 0028 43F00042 		orr	r2, r3, #-2147483648
 3358 002c 7B68     		ldr	r3, [r7, #4]
 3359 002e 1A60     		str	r2, [r3]
2512:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2513:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2514:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
2515:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
 3360              		.loc 1 2515 0
 3361 0030 7B68     		ldr	r3, [r7, #4]
 3362 0032 DB68     		ldr	r3, [r3, #12]
 3363 0034 3B61     		str	r3, [r7, #16]
2516:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3364              		.loc 1 2516 0
 3365 0036 3B69     		ldr	r3, [r7, #16]
 3366 0038 002B     		cmp	r3, #0
 3367 003a 09D1     		bne	.L213
 3368              	.LBB147:
 3369              	.LBB148:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3370              		.loc 2 215 0 discriminator 1
 3371              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3372 003c 4FF05003 			mov r3, #80												
 3373 0040 83F31188 		msr basepri, r3											
ARM GAS  /tmp/ccdaF48n.s 			page 108


 3374 0044 BFF36F8F 		isb														
 3375 0048 BFF34F8F 		dsb														
 3376              	
 3377              	@ 0 "" 2
 3378              		.thumb
 3379 004c BB60     		str	r3, [r7, #8]
 3380              	.L214:
 3381              	.LBE148:
 3382              	.LBE147:
 3383              		.loc 1 2516 0 discriminator 2
 3384 004e FEE7     		b	.L214
 3385              	.L213:
2517:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3386              		.loc 1 2517 0
 3387 0050 7868     		ldr	r0, [r7, #4]
 3388 0052 FFF7FEFF 		bl	uxListRemove
2518:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2519:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2520:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2521:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
2522:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xGenericListItem ) );
 3389              		.loc 1 2522 0
 3390 0056 3B69     		ldr	r3, [r7, #16]
 3391 0058 0433     		adds	r3, r3, #4
 3392 005a 1846     		mov	r0, r3
 3393 005c FFF7FEFF 		bl	uxListRemove
2523:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3394              		.loc 1 2523 0
 3395 0060 3B69     		ldr	r3, [r7, #16]
 3396 0062 DB6A     		ldr	r3, [r3, #44]
 3397 0064 1A46     		mov	r2, r3
 3398 0066 0123     		movs	r3, #1
 3399 0068 03FA02F2 		lsl	r2, r3, r2
 3400 006c 144B     		ldr	r3, .L218+4
 3401 006e 1B68     		ldr	r3, [r3]
 3402 0070 1343     		orrs	r3, r3, r2
 3403 0072 134A     		ldr	r2, .L218+4
 3404 0074 1360     		str	r3, [r2]
 3405 0076 3B69     		ldr	r3, [r7, #16]
 3406 0078 DA6A     		ldr	r2, [r3, #44]
 3407 007a 1346     		mov	r3, r2
 3408 007c 9B00     		lsls	r3, r3, #2
 3409 007e 1344     		add	r3, r3, r2
 3410 0080 9B00     		lsls	r3, r3, #2
 3411 0082 104A     		ldr	r2, .L218+8
 3412 0084 1A44     		add	r2, r2, r3
 3413 0086 3B69     		ldr	r3, [r7, #16]
 3414 0088 0433     		adds	r3, r3, #4
 3415 008a 1046     		mov	r0, r2
 3416 008c 1946     		mov	r1, r3
 3417 008e FFF7FEFF 		bl	vListInsertEnd
2524:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2525:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 3418              		.loc 1 2525 0
 3419 0092 3B69     		ldr	r3, [r7, #16]
 3420 0094 DA6A     		ldr	r2, [r3, #44]
 3421 0096 0C4B     		ldr	r3, .L218+12
ARM GAS  /tmp/ccdaF48n.s 			page 109


 3422 0098 1B68     		ldr	r3, [r3]
 3423 009a DB6A     		ldr	r3, [r3, #44]
 3424 009c 9A42     		cmp	r2, r3
 3425 009e 05D9     		bls	.L215
2526:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2527:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has
2528:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a higher priority than the calling task.  This allows
2529:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task to know if it should force a context
2530:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch now. */
2531:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
 3426              		.loc 1 2531 0
 3427 00a0 0123     		movs	r3, #1
 3428 00a2 7B61     		str	r3, [r7, #20]
2532:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2533:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2534:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2535:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3429              		.loc 1 2535 0
 3430 00a4 094B     		ldr	r3, .L218+16
 3431 00a6 0122     		movs	r2, #1
 3432 00a8 1A60     		str	r2, [r3]
 3433 00aa 01E0     		b	.L216
 3434              	.L215:
2536:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2537:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2538:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2539:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
 3435              		.loc 1 2539 0
 3436 00ac 0023     		movs	r3, #0
 3437 00ae 7B61     		str	r3, [r7, #20]
 3438              	.L216:
2540:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2541:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2542:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3439              		.loc 1 2542 0
 3440 00b0 7B69     		ldr	r3, [r7, #20]
2543:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3441              		.loc 1 2543 0
 3442 00b2 1846     		mov	r0, r3
 3443 00b4 1837     		adds	r7, r7, #24
 3444              	.LCFI119:
 3445              		.cfi_def_cfa_offset 8
 3446 00b6 BD46     		mov	sp, r7
 3447              	.LCFI120:
 3448              		.cfi_def_cfa_register 13
 3449              		@ sp needed
 3450 00b8 80BD     		pop	{r7, pc}
 3451              	.L219:
 3452 00ba 00BF     		.align	2
 3453              	.L218:
 3454 00bc 00000000 		.word	uxSchedulerSuspended
 3455 00c0 00000000 		.word	uxTopReadyPriority
 3456 00c4 00000000 		.word	pxReadyTasksLists
 3457 00c8 00000000 		.word	pxCurrentTCB
 3458 00cc 00000000 		.word	xYieldPending
 3459              		.cfi_endproc
 3460              	.LFE27:
ARM GAS  /tmp/ccdaF48n.s 			page 110


 3462              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3463              		.align	2
 3464              		.global	vTaskSetTimeOutState
 3465              		.thumb
 3466              		.thumb_func
 3468              	vTaskSetTimeOutState:
 3469              	.LFB28:
2544:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2545:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2546:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
2547:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3470              		.loc 1 2547 0
 3471              		.cfi_startproc
 3472              		@ args = 0, pretend = 0, frame = 16
 3473              		@ frame_needed = 1, uses_anonymous_args = 0
 3474              		@ link register save eliminated.
 3475 0000 80B4     		push	{r7}
 3476              	.LCFI121:
 3477              		.cfi_def_cfa_offset 4
 3478              		.cfi_offset 7, -4
 3479 0002 85B0     		sub	sp, sp, #20
 3480              	.LCFI122:
 3481              		.cfi_def_cfa_offset 24
 3482 0004 00AF     		add	r7, sp, #0
 3483              	.LCFI123:
 3484              		.cfi_def_cfa_register 7
 3485 0006 7860     		str	r0, [r7, #4]
2548:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3486              		.loc 1 2548 0
 3487 0008 7B68     		ldr	r3, [r7, #4]
 3488 000a 002B     		cmp	r3, #0
 3489 000c 09D1     		bne	.L221
 3490              	.LBB149:
 3491              	.LBB150:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3492              		.loc 2 215 0 discriminator 1
 3493              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3494 000e 4FF05003 			mov r3, #80												
 3495 0012 83F31188 		msr basepri, r3											
 3496 0016 BFF36F8F 		isb														
 3497 001a BFF34F8F 		dsb														
 3498              	
 3499              	@ 0 "" 2
 3500              		.thumb
 3501 001e FB60     		str	r3, [r7, #12]
 3502              	.L222:
 3503              	.LBE150:
 3504              	.LBE149:
 3505              		.loc 1 2548 0 discriminator 1
 3506 0020 FEE7     		b	.L222
 3507              	.L221:
2549:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3508              		.loc 1 2549 0
 3509 0022 064B     		ldr	r3, .L223
 3510 0024 1A68     		ldr	r2, [r3]
 3511 0026 7B68     		ldr	r3, [r7, #4]
 3512 0028 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 111


2550:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3513              		.loc 1 2550 0
 3514 002a 054B     		ldr	r3, .L223+4
 3515 002c 1A68     		ldr	r2, [r3]
 3516 002e 7B68     		ldr	r3, [r7, #4]
 3517 0030 5A60     		str	r2, [r3, #4]
2551:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3518              		.loc 1 2551 0
 3519 0032 1437     		adds	r7, r7, #20
 3520              	.LCFI124:
 3521              		.cfi_def_cfa_offset 4
 3522 0034 BD46     		mov	sp, r7
 3523              	.LCFI125:
 3524              		.cfi_def_cfa_register 13
 3525              		@ sp needed
 3526 0036 5DF8047B 		ldr	r7, [sp], #4
 3527              	.LCFI126:
 3528              		.cfi_restore 7
 3529              		.cfi_def_cfa_offset 0
 3530 003a 7047     		bx	lr
 3531              	.L224:
 3532              		.align	2
 3533              	.L223:
 3534 003c 00000000 		.word	xNumOfOverflows
 3535 0040 00000000 		.word	xTickCount
 3536              		.cfi_endproc
 3537              	.LFE28:
 3539              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3540              		.align	2
 3541              		.global	xTaskCheckForTimeOut
 3542              		.thumb
 3543              		.thumb_func
 3545              	xTaskCheckForTimeOut:
 3546              	.LFB29:
2552:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2553:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2554:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
2555:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3547              		.loc 1 2555 0
 3548              		.cfi_startproc
 3549              		@ args = 0, pretend = 0, frame = 24
 3550              		@ frame_needed = 1, uses_anonymous_args = 0
 3551 0000 80B5     		push	{r7, lr}
 3552              	.LCFI127:
 3553              		.cfi_def_cfa_offset 8
 3554              		.cfi_offset 7, -8
 3555              		.cfi_offset 14, -4
 3556 0002 86B0     		sub	sp, sp, #24
 3557              	.LCFI128:
 3558              		.cfi_def_cfa_offset 32
 3559 0004 00AF     		add	r7, sp, #0
 3560              	.LCFI129:
 3561              		.cfi_def_cfa_register 7
 3562 0006 7860     		str	r0, [r7, #4]
 3563 0008 3960     		str	r1, [r7]
2556:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2557:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 112


2558:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3564              		.loc 1 2558 0
 3565 000a 7B68     		ldr	r3, [r7, #4]
 3566 000c 002B     		cmp	r3, #0
 3567 000e 09D1     		bne	.L226
 3568              	.LBB151:
 3569              	.LBB152:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3570              		.loc 2 215 0 discriminator 1
 3571              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3572 0010 4FF05003 			mov r3, #80												
 3573 0014 83F31188 		msr basepri, r3											
 3574 0018 BFF36F8F 		isb														
 3575 001c BFF34F8F 		dsb														
 3576              	
 3577              	@ 0 "" 2
 3578              		.thumb
 3579 0020 FB60     		str	r3, [r7, #12]
 3580              	.L227:
 3581              	.LBE152:
 3582              	.LBE151:
 3583              		.loc 1 2558 0 discriminator 1
 3584 0022 FEE7     		b	.L227
 3585              	.L226:
2559:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3586              		.loc 1 2559 0
 3587 0024 3B68     		ldr	r3, [r7]
 3588 0026 002B     		cmp	r3, #0
 3589 0028 09D1     		bne	.L228
 3590              	.LBB153:
 3591              	.LBB154:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3592              		.loc 2 215 0 discriminator 1
 3593              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 3594 002a 4FF05003 			mov r3, #80												
 3595 002e 83F31188 		msr basepri, r3											
 3596 0032 BFF36F8F 		isb														
 3597 0036 BFF34F8F 		dsb														
 3598              	
 3599              	@ 0 "" 2
 3600              		.thumb
 3601 003a BB60     		str	r3, [r7, #8]
 3602              	.L229:
 3603              	.LBE154:
 3604              	.LBE153:
 3605              		.loc 1 2559 0 discriminator 2
 3606 003c FEE7     		b	.L229
 3607              	.L228:
2560:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2561:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3608              		.loc 1 2561 0
 3609 003e FFF7FEFF 		bl	vPortEnterCritical
 3610              	.LBB155:
2562:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2563:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
2564:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
 3611              		.loc 1 2564 0
ARM GAS  /tmp/ccdaF48n.s 			page 113


 3612 0042 1C4B     		ldr	r3, .L235
 3613 0044 1B68     		ldr	r3, [r3]
 3614 0046 3B61     		str	r3, [r7, #16]
2565:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2566:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
2567:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If INCLUDE_vTaskSuspend is set to 1 and the block time specified is
2568:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the maximum block time then the task should block indefinitely, and
2569:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			therefore never time out. */
2570:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 3615              		.loc 1 2570 0
 3616 0048 3B68     		ldr	r3, [r7]
 3617 004a 1B68     		ldr	r3, [r3]
 3618 004c B3F1FF3F 		cmp	r3, #-1
 3619 0050 02D1     		bne	.L230
2571:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 3620              		.loc 1 2572 0
 3621 0052 0023     		movs	r3, #0
 3622 0054 7B61     		str	r3, [r7, #20]
 3623 0056 26E0     		b	.L231
 3624              	.L230:
2573:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /* We are not blocking indefinitely, perform the checks below. */
2575:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2576:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
 3625              		.loc 1 2577 0
 3626 0058 7B68     		ldr	r3, [r7, #4]
 3627 005a 1A68     		ldr	r2, [r3]
 3628 005c 164B     		ldr	r3, .L235+4
 3629 005e 1B68     		ldr	r3, [r3]
 3630 0060 9A42     		cmp	r2, r3
 3631 0062 07D0     		beq	.L232
 3632              		.loc 1 2577 0 is_stmt 0 discriminator 1
 3633 0064 7B68     		ldr	r3, [r7, #4]
 3634 0066 5A68     		ldr	r2, [r3, #4]
 3635 0068 3B69     		ldr	r3, [r7, #16]
 3636 006a 9A42     		cmp	r2, r3
 3637 006c 02D8     		bhi	.L232
2578:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2579:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which vTaskSetTimeout()
2580:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called, but has also overflowed since vTaskSetTimeOut() was called.
2581:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			It must have wrapped all the way around and gone past us again. This
2582:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			passed since vTaskSetTimeout() was called. */
2583:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3638              		.loc 1 2583 0 is_stmt 1
 3639 006e 0123     		movs	r3, #1
 3640 0070 7B61     		str	r3, [r7, #20]
 3641 0072 18E0     		b	.L231
 3642              	.L232:
2584:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2585:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( ( xConstTickCount - pxTimeOut->xTimeOnEntering ) < *pxTicksToWait )
 3643              		.loc 1 2585 0
 3644 0074 7B68     		ldr	r3, [r7, #4]
 3645 0076 5B68     		ldr	r3, [r3, #4]
 3646 0078 3A69     		ldr	r2, [r7, #16]
 3647 007a D21A     		subs	r2, r2, r3
ARM GAS  /tmp/ccdaF48n.s 			page 114


 3648 007c 3B68     		ldr	r3, [r7]
 3649 007e 1B68     		ldr	r3, [r3]
 3650 0080 9A42     		cmp	r2, r3
 3651 0082 0ED2     		bcs	.L233
2586:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2587:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
2588:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount -  pxTimeOut->xTimeOnEntering );
 3652              		.loc 1 2588 0
 3653 0084 3B68     		ldr	r3, [r7]
 3654 0086 1A68     		ldr	r2, [r3]
 3655 0088 7B68     		ldr	r3, [r7, #4]
 3656 008a 5968     		ldr	r1, [r3, #4]
 3657 008c 3B69     		ldr	r3, [r7, #16]
 3658 008e CB1A     		subs	r3, r1, r3
 3659 0090 1A44     		add	r2, r2, r3
 3660 0092 3B68     		ldr	r3, [r7]
 3661 0094 1A60     		str	r2, [r3]
2589:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3662              		.loc 1 2589 0
 3663 0096 7868     		ldr	r0, [r7, #4]
 3664 0098 FFF7FEFF 		bl	vTaskSetTimeOutState
2590:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3665              		.loc 1 2590 0
 3666 009c 0023     		movs	r3, #0
 3667 009e 7B61     		str	r3, [r7, #20]
 3668 00a0 01E0     		b	.L231
 3669              	.L233:
2591:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2592:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2593:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2594:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3670              		.loc 1 2594 0
 3671 00a2 0123     		movs	r3, #1
 3672 00a4 7B61     		str	r3, [r7, #20]
 3673              	.L231:
 3674              	.LBE155:
2595:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2596:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2597:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 3675              		.loc 1 2597 0
 3676 00a6 FFF7FEFF 		bl	vPortExitCritical
2598:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2599:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3677              		.loc 1 2599 0
 3678 00aa 7B69     		ldr	r3, [r7, #20]
2600:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3679              		.loc 1 2600 0
 3680 00ac 1846     		mov	r0, r3
 3681 00ae 1837     		adds	r7, r7, #24
 3682              	.LCFI130:
 3683              		.cfi_def_cfa_offset 8
 3684 00b0 BD46     		mov	sp, r7
 3685              	.LCFI131:
 3686              		.cfi_def_cfa_register 13
 3687              		@ sp needed
 3688 00b2 80BD     		pop	{r7, pc}
 3689              	.L236:
ARM GAS  /tmp/ccdaF48n.s 			page 115


 3690              		.align	2
 3691              	.L235:
 3692 00b4 00000000 		.word	xTickCount
 3693 00b8 00000000 		.word	xNumOfOverflows
 3694              		.cfi_endproc
 3695              	.LFE29:
 3697              		.section	.text.vTaskMissedYield,"ax",%progbits
 3698              		.align	2
 3699              		.global	vTaskMissedYield
 3700              		.thumb
 3701              		.thumb_func
 3703              	vTaskMissedYield:
 3704              	.LFB30:
2601:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2602:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
2604:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3705              		.loc 1 2604 0
 3706              		.cfi_startproc
 3707              		@ args = 0, pretend = 0, frame = 0
 3708              		@ frame_needed = 1, uses_anonymous_args = 0
 3709              		@ link register save eliminated.
 3710 0000 80B4     		push	{r7}
 3711              	.LCFI132:
 3712              		.cfi_def_cfa_offset 4
 3713              		.cfi_offset 7, -4
 3714 0002 00AF     		add	r7, sp, #0
 3715              	.LCFI133:
 3716              		.cfi_def_cfa_register 7
2605:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3717              		.loc 1 2605 0
 3718 0004 034B     		ldr	r3, .L238
 3719 0006 0122     		movs	r2, #1
 3720 0008 1A60     		str	r2, [r3]
2606:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3721              		.loc 1 2606 0
 3722 000a BD46     		mov	sp, r7
 3723              	.LCFI134:
 3724              		.cfi_def_cfa_register 13
 3725              		@ sp needed
 3726 000c 5DF8047B 		ldr	r7, [sp], #4
 3727              	.LCFI135:
 3728              		.cfi_restore 7
 3729              		.cfi_def_cfa_offset 0
 3730 0010 7047     		bx	lr
 3731              	.L239:
 3732 0012 00BF     		.align	2
 3733              	.L238:
 3734 0014 00000000 		.word	xYieldPending
 3735              		.cfi_endproc
 3736              	.LFE30:
 3738              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 3739              		.align	2
 3740              		.global	uxTaskGetTaskNumber
 3741              		.thumb
 3742              		.thumb_func
 3744              	uxTaskGetTaskNumber:
ARM GAS  /tmp/ccdaF48n.s 			page 116


 3745              	.LFB31:
2607:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2608:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2610:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2611:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
2612:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3746              		.loc 1 2612 0
 3747              		.cfi_startproc
 3748              		@ args = 0, pretend = 0, frame = 16
 3749              		@ frame_needed = 1, uses_anonymous_args = 0
 3750              		@ link register save eliminated.
 3751 0000 80B4     		push	{r7}
 3752              	.LCFI136:
 3753              		.cfi_def_cfa_offset 4
 3754              		.cfi_offset 7, -4
 3755 0002 85B0     		sub	sp, sp, #20
 3756              	.LCFI137:
 3757              		.cfi_def_cfa_offset 24
 3758 0004 00AF     		add	r7, sp, #0
 3759              	.LCFI138:
 3760              		.cfi_def_cfa_register 7
 3761 0006 7860     		str	r0, [r7, #4]
2613:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
2614:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2615:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2616:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 3762              		.loc 1 2616 0
 3763 0008 7B68     		ldr	r3, [r7, #4]
 3764 000a 002B     		cmp	r3, #0
 3765 000c 05D0     		beq	.L241
2617:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
 3766              		.loc 1 2618 0
 3767 000e 7B68     		ldr	r3, [r7, #4]
 3768 0010 BB60     		str	r3, [r7, #8]
2619:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
 3769              		.loc 1 2619 0
 3770 0012 BB68     		ldr	r3, [r7, #8]
 3771 0014 9B6C     		ldr	r3, [r3, #72]
 3772 0016 FB60     		str	r3, [r7, #12]
 3773 0018 01E0     		b	.L242
 3774              	.L241:
2620:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2621:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2622:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2623:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
 3775              		.loc 1 2623 0
 3776 001a 0023     		movs	r3, #0
 3777 001c FB60     		str	r3, [r7, #12]
 3778              	.L242:
2624:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2625:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2626:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 3779              		.loc 1 2626 0
 3780 001e FB68     		ldr	r3, [r7, #12]
2627:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccdaF48n.s 			page 117


 3781              		.loc 1 2627 0
 3782 0020 1846     		mov	r0, r3
 3783 0022 1437     		adds	r7, r7, #20
 3784              	.LCFI139:
 3785              		.cfi_def_cfa_offset 4
 3786 0024 BD46     		mov	sp, r7
 3787              	.LCFI140:
 3788              		.cfi_def_cfa_register 13
 3789              		@ sp needed
 3790 0026 5DF8047B 		ldr	r7, [sp], #4
 3791              	.LCFI141:
 3792              		.cfi_restore 7
 3793              		.cfi_def_cfa_offset 0
 3794 002a 7047     		bx	lr
 3795              		.cfi_endproc
 3796              	.LFE31:
 3798              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 3799              		.align	2
 3800              		.global	vTaskSetTaskNumber
 3801              		.thumb
 3802              		.thumb_func
 3804              	vTaskSetTaskNumber:
 3805              	.LFB32:
2628:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2630:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2631:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2632:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2633:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
2635:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3806              		.loc 1 2635 0
 3807              		.cfi_startproc
 3808              		@ args = 0, pretend = 0, frame = 16
 3809              		@ frame_needed = 1, uses_anonymous_args = 0
 3810              		@ link register save eliminated.
 3811 0000 80B4     		push	{r7}
 3812              	.LCFI142:
 3813              		.cfi_def_cfa_offset 4
 3814              		.cfi_offset 7, -4
 3815 0002 85B0     		sub	sp, sp, #20
 3816              	.LCFI143:
 3817              		.cfi_def_cfa_offset 24
 3818 0004 00AF     		add	r7, sp, #0
 3819              	.LCFI144:
 3820              		.cfi_def_cfa_register 7
 3821 0006 7860     		str	r0, [r7, #4]
 3822 0008 3960     		str	r1, [r7]
2636:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2637:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2638:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 3823              		.loc 1 2638 0
 3824 000a 7B68     		ldr	r3, [r7, #4]
 3825 000c 002B     		cmp	r3, #0
 3826 000e 04D0     		beq	.L244
2639:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2640:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
ARM GAS  /tmp/ccdaF48n.s 			page 118


 3827              		.loc 1 2640 0
 3828 0010 7B68     		ldr	r3, [r7, #4]
 3829 0012 FB60     		str	r3, [r7, #12]
2641:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
 3830              		.loc 1 2641 0
 3831 0014 FB68     		ldr	r3, [r7, #12]
 3832 0016 3A68     		ldr	r2, [r7]
 3833 0018 9A64     		str	r2, [r3, #72]
 3834              	.L244:
2642:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2643:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3835              		.loc 1 2643 0
 3836 001a 1437     		adds	r7, r7, #20
 3837              	.LCFI145:
 3838              		.cfi_def_cfa_offset 4
 3839 001c BD46     		mov	sp, r7
 3840              	.LCFI146:
 3841              		.cfi_def_cfa_register 13
 3842              		@ sp needed
 3843 001e 5DF8047B 		ldr	r7, [sp], #4
 3844              	.LCFI147:
 3845              		.cfi_restore 7
 3846              		.cfi_def_cfa_offset 0
 3847 0022 7047     		bx	lr
 3848              		.cfi_endproc
 3849              	.LFE32:
 3851              		.section	.text.prvIdleTask,"ax",%progbits
 3852              		.align	2
 3853              		.thumb
 3854              		.thumb_func
 3856              	prvIdleTask:
 3857              	.LFB33:
2644:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2645:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2646:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2647:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
2648:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
2649:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
2650:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
2651:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
2652:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
2653:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
2654:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
2655:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
2656:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
2657:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
2658:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
2659:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3858              		.loc 1 2659 0
 3859              		.cfi_startproc
 3860              		@ args = 0, pretend = 0, frame = 8
 3861              		@ frame_needed = 1, uses_anonymous_args = 0
 3862 0000 80B5     		push	{r7, lr}
 3863              	.LCFI148:
 3864              		.cfi_def_cfa_offset 8
 3865              		.cfi_offset 7, -8
 3866              		.cfi_offset 14, -4
ARM GAS  /tmp/ccdaF48n.s 			page 119


 3867 0002 82B0     		sub	sp, sp, #8
 3868              	.LCFI149:
 3869              		.cfi_def_cfa_offset 16
 3870 0004 00AF     		add	r7, sp, #0
 3871              	.LCFI150:
 3872              		.cfi_def_cfa_register 7
 3873 0006 7860     		str	r0, [r7, #4]
 3874              	.L248:
2660:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
2661:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
2662:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2663:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
2664:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2665:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have been deleted. */
2666:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
 3875              		.loc 1 2666 0
 3876 0008 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
2667:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
2669:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2670:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
2671:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
2672:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
2673:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
2674:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
2675:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2676:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2677:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2678:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
2679:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2680:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
2681:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
2682:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
2683:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
2684:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2685:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
2686:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
2687:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
2688:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
2689:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 3877              		.loc 1 2689 0
 3878 000c 064B     		ldr	r3, .L249
 3879 000e 1B68     		ldr	r3, [r3]
 3880 0010 012B     		cmp	r3, #1
 3881 0012 07D9     		bls	.L247
2690:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2691:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
 3882              		.loc 1 2691 0
 3883 0014 054B     		ldr	r3, .L249+4
 3884 0016 4FF08052 		mov	r2, #268435456
 3885 001a 1A60     		str	r2, [r3]
 3886              	@ 2691 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 3887 001c BFF34F8F 		dsb
 3888              	@ 0 "" 2
 3889              	@ 2691 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 3890 0020 BFF36F8F 		isb
 3891              	@ 0 "" 2
ARM GAS  /tmp/ccdaF48n.s 			page 120


 3892              		.thumb
 3893              	.L247:
2692:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2693:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2694:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2695:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2696:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2697:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2698:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
2699:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2700:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
2701:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2702:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
2703:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
2705:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
2706:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
2707:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
2708:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
2709:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
2710:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2711:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
2712:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
2714:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
2715:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
2716:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
2717:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
2718:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2719:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
2720:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2721:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
2722:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
2723:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
2724:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
2725:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
2726:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
2727:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2728:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
2729:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2730:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
2731:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2732:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
2733:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
2734:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
2735:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
2736:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
2737:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
2739:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2740:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
2741:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
2742:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
2743:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2744:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2745:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2746:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/ccdaF48n.s 			page 121


2747:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2748:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2749:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
2750:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2751:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2752:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2753:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2754:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2755:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2756:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
2757:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3894              		.loc 1 2757 0
 3895 0024 F0E7     		b	.L248
 3896              	.L250:
 3897 0026 00BF     		.align	2
 3898              	.L249:
 3899 0028 00000000 		.word	pxReadyTasksLists
 3900 002c 04ED00E0 		.word	-536810236
 3901              		.cfi_endproc
 3902              	.LFE33:
 3904              		.section	.text.prvInitialiseTCBVariables,"ax",%progbits
 3905              		.align	2
 3906              		.thumb
 3907              		.thumb_func
 3909              	prvInitialiseTCBVariables:
 3910              	.LFB34:
2758:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2759:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2760:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if configUSE_TICKLESS_IDLE != 0
2762:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
2764:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2765:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
2766:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2767:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
2768:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
2770:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
2771:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2772:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
2773:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2774:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
2775:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
2776:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2777:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2778:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2779:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if configUSE_TIMERS == 0
2780:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2781:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The idle task exists in addition to the application tasks. */
2782:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				const UBaseType_t uxNonApplicationTasks = 1;
2783:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If timers are not being used and all the tasks are in the
2785:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				suspended list (which might mean they have an infinite block
2786:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time rather than actually being suspended) then it is safe to
2787:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				turn all clocks off and just wait for external interrupts. */
2788:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicati
ARM GAS  /tmp/ccdaF48n.s 			page 122


2789:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2790:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eNoTasksWaitingTimeout;
2791:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2792:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2793:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2794:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2795:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2796:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2797:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configUSE_TIMERS */
2798:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2799:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2800:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
2801:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2802:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2803:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2804:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2805:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTCBVariables( TCB_t * const pxTCB, const char * const pcName, UBaseType_t 
2806:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 3911              		.loc 1 2806 0
 3912              		.cfi_startproc
 3913              		@ args = 4, pretend = 0, frame = 24
 3914              		@ frame_needed = 1, uses_anonymous_args = 0
 3915 0000 80B5     		push	{r7, lr}
 3916              	.LCFI151:
 3917              		.cfi_def_cfa_offset 8
 3918              		.cfi_offset 7, -8
 3919              		.cfi_offset 14, -4
 3920 0002 86B0     		sub	sp, sp, #24
 3921              	.LCFI152:
 3922              		.cfi_def_cfa_offset 32
 3923 0004 00AF     		add	r7, sp, #0
 3924              	.LCFI153:
 3925              		.cfi_def_cfa_register 7
 3926 0006 F860     		str	r0, [r7, #12]
 3927 0008 B960     		str	r1, [r7, #8]
 3928 000a 7A60     		str	r2, [r7, #4]
 3929 000c 3B60     		str	r3, [r7]
2807:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
2808:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2809:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
2810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 3930              		.loc 1 2810 0
 3931 000e 0023     		movs	r3, #0
 3932 0010 7B61     		str	r3, [r7, #20]
 3933 0012 13E0     		b	.L252
 3934              	.L255:
2811:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2812:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->pcTaskName[ x ] = pcName[ x ];
 3935              		.loc 1 2812 0
 3936 0014 BA68     		ldr	r2, [r7, #8]
 3937 0016 7B69     		ldr	r3, [r7, #20]
 3938 0018 1344     		add	r3, r3, r2
 3939 001a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3940 001c FA68     		ldr	r2, [r7, #12]
 3941 001e 7B69     		ldr	r3, [r7, #20]
 3942 0020 1344     		add	r3, r3, r2
 3943 0022 3033     		adds	r3, r3, #48
ARM GAS  /tmp/ccdaF48n.s 			page 123


 3944 0024 0A46     		mov	r2, r1
 3945 0026 1A71     		strb	r2, [r3, #4]
2813:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2814:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
2815:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
2816:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
2817:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 3946              		.loc 1 2817 0
 3947 0028 BA68     		ldr	r2, [r7, #8]
 3948 002a 7B69     		ldr	r3, [r7, #20]
 3949 002c 1344     		add	r3, r3, r2
 3950 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3951 0030 002B     		cmp	r3, #0
 3952 0032 00D1     		bne	.L253
2818:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2819:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 3953              		.loc 1 2819 0
 3954 0034 05E0     		b	.L254
 3955              	.L253:
2810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3956              		.loc 1 2810 0 discriminator 2
 3957 0036 7B69     		ldr	r3, [r7, #20]
 3958 0038 0133     		adds	r3, r3, #1
 3959 003a 7B61     		str	r3, [r7, #20]
 3960              	.L252:
2810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3961              		.loc 1 2810 0 is_stmt 0 discriminator 1
 3962 003c 7B69     		ldr	r3, [r7, #20]
 3963 003e 0F2B     		cmp	r3, #15
 3964 0040 E8D9     		bls	.L255
 3965              	.L254:
2820:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2821:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2822:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2824:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2826:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2827:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
2828:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
2829:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 3966              		.loc 1 2829 0 is_stmt 1
 3967 0042 FB68     		ldr	r3, [r7, #12]
 3968 0044 0022     		movs	r2, #0
 3969 0046 83F84320 		strb	r2, [r3, #67]
2830:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2831:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
2832:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
2833:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 3970              		.loc 1 2833 0
 3971 004a 7B68     		ldr	r3, [r7, #4]
 3972 004c 062B     		cmp	r3, #6
 3973 004e 01D9     		bls	.L256
2834:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2835:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 3974              		.loc 1 2835 0
 3975 0050 0623     		movs	r3, #6
ARM GAS  /tmp/ccdaF48n.s 			page 124


 3976 0052 7B60     		str	r3, [r7, #4]
 3977              	.L256:
2836:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2837:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2838:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2839:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
2840:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB->uxPriority = uxPriority;
 3978              		.loc 1 2842 0
 3979 0054 FB68     		ldr	r3, [r7, #12]
 3980 0056 7A68     		ldr	r2, [r7, #4]
 3981 0058 DA62     		str	r2, [r3, #44]
2843:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
2844:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2845:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->uxBasePriority = uxPriority;
 3982              		.loc 1 2845 0
 3983 005a FB68     		ldr	r3, [r7, #12]
 3984 005c 7A68     		ldr	r2, [r7, #4]
 3985 005e DA64     		str	r2, [r3, #76]
2846:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->uxMutexesHeld = 0;
 3986              		.loc 1 2846 0
 3987 0060 FB68     		ldr	r3, [r7, #12]
 3988 0062 0022     		movs	r2, #0
 3989 0064 1A65     		str	r2, [r3, #80]
2847:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2848:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
2849:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2850:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
 3990              		.loc 1 2850 0
 3991 0066 FB68     		ldr	r3, [r7, #12]
 3992 0068 0433     		adds	r3, r3, #4
 3993 006a 1846     		mov	r0, r3
 3994 006c FFF7FEFF 		bl	vListInitialiseItem
2851:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxTCB->xEventListItem ) );
 3995              		.loc 1 2851 0
 3996 0070 FB68     		ldr	r3, [r7, #12]
 3997 0072 1833     		adds	r3, r3, #24
 3998 0074 1846     		mov	r0, r3
 3999 0076 FFF7FEFF 		bl	vListInitialiseItem
2852:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2853:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxTCB as a link back from the ListItem_t.  This is so we can get
2854:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
2855:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
 4000              		.loc 1 2855 0
 4001 007a FB68     		ldr	r3, [r7, #12]
 4002 007c FA68     		ldr	r2, [r7, #12]
 4003 007e 1A61     		str	r2, [r3, #16]
2856:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2857:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
2858:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickT
 4004              		.loc 1 2858 0
 4005 0080 7B68     		ldr	r3, [r7, #4]
 4006 0082 C3F10702 		rsb	r2, r3, #7
 4007 0086 FB68     		ldr	r3, [r7, #12]
 4008 0088 9A61     		str	r2, [r3, #24]
2859:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
ARM GAS  /tmp/ccdaF48n.s 			page 125


 4009              		.loc 1 2859 0
 4010 008a FB68     		ldr	r3, [r7, #12]
 4011 008c FA68     		ldr	r2, [r7, #12]
 4012 008e 5A62     		str	r2, [r3, #36]
2860:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2861:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
2862:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2863:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
2864:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2865:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
2866:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2867:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
2868:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2869:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->pxTaskTag = NULL;
2870:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2871:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
2872:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2873:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
2874:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2875:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->ulRunTimeCounter = 0UL;
2876:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2877:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
2878:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
2880:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2881:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, pxTCB->pxStack, usStackDepth );
2882:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2883:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
2884:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2885:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
2886:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) usStackDepth;
2887:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2888:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
2889:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2890:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
2891:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2892:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
2893:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2894:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ x ] = NULL;
2895:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2896:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2897:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
2898:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2899:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
2900:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2901:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->ulNotifiedValue = 0;
 4013              		.loc 1 2901 0
 4014 0090 FB68     		ldr	r3, [r7, #12]
 4015 0092 0022     		movs	r2, #0
 4016 0094 5A65     		str	r2, [r3, #84]
2902:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB->eNotifyState = eNotWaitingNotification;
 4017              		.loc 1 2902 0
 4018 0096 FB68     		ldr	r3, [r7, #12]
 4019 0098 0022     		movs	r2, #0
 4020 009a 83F85820 		strb	r2, [r3, #88]
2903:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
ARM GAS  /tmp/ccdaF48n.s 			page 126


2905:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2906:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
2907:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2908:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
2909:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxTCB->xNewLib_reent ) ) );
2910:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2911:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_NEWLIB_REENTRANT */
2912:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4021              		.loc 1 2912 0
 4022 009e 1837     		adds	r7, r7, #24
 4023              	.LCFI154:
 4024              		.cfi_def_cfa_offset 8
 4025 00a0 BD46     		mov	sp, r7
 4026              	.LCFI155:
 4027              		.cfi_def_cfa_register 13
 4028              		@ sp needed
 4029 00a2 80BD     		pop	{r7, pc}
 4030              		.cfi_endproc
 4031              	.LFE34:
 4033              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 4034              		.align	2
 4035              		.thumb
 4036              		.thumb_func
 4038              	prvInitialiseTaskLists:
 4039              	.LFB35:
2913:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2914:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
2916:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
2918:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2919:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2920:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
2922:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2923:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
2924:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
2925:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2926:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2927:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2928:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
2929:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2930:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2931:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
2932:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2933:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
2934:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2935:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
2936:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2938:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
2939:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2940:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2941:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
2942:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2943:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2944:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/ccdaF48n.s 			page 127


2945:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
2946:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2947:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2948:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
2949:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2950:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
2952:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2953:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
2955:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
2957:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2958:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2959:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2960:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are deleting ourselves. */
2961:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
2962:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
2964:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2965:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2966:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
2967:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2968:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2969:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
2970:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4040              		.loc 1 2970 0
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 8
 4043              		@ frame_needed = 1, uses_anonymous_args = 0
 4044 0000 80B5     		push	{r7, lr}
 4045              	.LCFI156:
 4046              		.cfi_def_cfa_offset 8
 4047              		.cfi_offset 7, -8
 4048              		.cfi_offset 14, -4
 4049 0002 82B0     		sub	sp, sp, #8
 4050              	.LCFI157:
 4051              		.cfi_def_cfa_offset 16
 4052 0004 00AF     		add	r7, sp, #0
 4053              	.LCFI158:
 4054              		.cfi_def_cfa_register 7
2971:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
2972:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
 4055              		.loc 1 2973 0
 4056 0006 0023     		movs	r3, #0
 4057 0008 7B60     		str	r3, [r7, #4]
 4058 000a 0CE0     		b	.L258
 4059              	.L259:
2974:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2975:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 4060              		.loc 1 2975 0 discriminator 3
 4061 000c 7A68     		ldr	r2, [r7, #4]
 4062 000e 1346     		mov	r3, r2
 4063 0010 9B00     		lsls	r3, r3, #2
 4064 0012 1344     		add	r3, r3, r2
 4065 0014 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccdaF48n.s 			page 128


 4066 0016 114A     		ldr	r2, .L260
 4067 0018 1344     		add	r3, r3, r2
 4068 001a 1846     		mov	r0, r3
 4069 001c FFF7FEFF 		bl	vListInitialise
2973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4070              		.loc 1 2973 0 discriminator 3
 4071 0020 7B68     		ldr	r3, [r7, #4]
 4072 0022 0133     		adds	r3, r3, #1
 4073 0024 7B60     		str	r3, [r7, #4]
 4074              	.L258:
2973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4075              		.loc 1 2973 0 is_stmt 0 discriminator 1
 4076 0026 7B68     		ldr	r3, [r7, #4]
 4077 0028 062B     		cmp	r3, #6
 4078 002a EFD9     		bls	.L259
2976:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2977:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
 4079              		.loc 1 2978 0 is_stmt 1
 4080 002c 0C48     		ldr	r0, .L260+4
 4081 002e FFF7FEFF 		bl	vListInitialise
2979:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 4082              		.loc 1 2979 0
 4083 0032 0C48     		ldr	r0, .L260+8
 4084 0034 FFF7FEFF 		bl	vListInitialise
2980:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 4085              		.loc 1 2980 0
 4086 0038 0B48     		ldr	r0, .L260+12
 4087 003a FFF7FEFF 		bl	vListInitialise
2981:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2982:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
2983:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2984:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
 4088              		.loc 1 2984 0
 4089 003e 0B48     		ldr	r0, .L260+16
 4090 0040 FFF7FEFF 		bl	vListInitialise
2985:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2986:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
2987:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2988:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
2989:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2990:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
 4091              		.loc 1 2990 0
 4092 0044 0A48     		ldr	r0, .L260+20
 4093 0046 FFF7FEFF 		bl	vListInitialise
2991:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2992:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
2993:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
2995:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
2996:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 4094              		.loc 1 2996 0
 4095 004a 0A4B     		ldr	r3, .L260+24
 4096 004c 044A     		ldr	r2, .L260+4
 4097 004e 1A60     		str	r2, [r3]
2997:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 4098              		.loc 1 2997 0
ARM GAS  /tmp/ccdaF48n.s 			page 129


 4099 0050 094B     		ldr	r3, .L260+28
 4100 0052 044A     		ldr	r2, .L260+8
 4101 0054 1A60     		str	r2, [r3]
2998:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4102              		.loc 1 2998 0
 4103 0056 0837     		adds	r7, r7, #8
 4104              	.LCFI159:
 4105              		.cfi_def_cfa_offset 8
 4106 0058 BD46     		mov	sp, r7
 4107              	.LCFI160:
 4108              		.cfi_def_cfa_register 13
 4109              		@ sp needed
 4110 005a 80BD     		pop	{r7, pc}
 4111              	.L261:
 4112              		.align	2
 4113              	.L260:
 4114 005c 00000000 		.word	pxReadyTasksLists
 4115 0060 00000000 		.word	xDelayedTaskList1
 4116 0064 00000000 		.word	xDelayedTaskList2
 4117 0068 00000000 		.word	xPendingReadyList
 4118 006c 00000000 		.word	xTasksWaitingTermination
 4119 0070 00000000 		.word	xSuspendedTaskList
 4120 0074 00000000 		.word	pxDelayedTaskList
 4121 0078 00000000 		.word	pxOverflowDelayedTaskList
 4122              		.cfi_endproc
 4123              	.LFE35:
 4125              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 4126              		.align	2
 4127              		.thumb
 4128              		.thumb_func
 4130              	prvCheckTasksWaitingTermination:
 4131              	.LFB36:
2999:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3000:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3001:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3002:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4132              		.loc 1 3002 0
 4133              		.cfi_startproc
 4134              		@ args = 0, pretend = 0, frame = 8
 4135              		@ frame_needed = 1, uses_anonymous_args = 0
 4136 0000 80B5     		push	{r7, lr}
 4137              	.LCFI161:
 4138              		.cfi_def_cfa_offset 8
 4139              		.cfi_offset 7, -8
 4140              		.cfi_offset 14, -4
 4141 0002 82B0     		sub	sp, sp, #8
 4142              	.LCFI162:
 4143              		.cfi_def_cfa_offset 16
 4144 0004 00AF     		add	r7, sp, #0
 4145              	.LCFI163:
 4146              		.cfi_def_cfa_register 7
 4147              	.LBB156:
3003:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3004:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3005:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xListIsEmpty;
3006:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3007:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
ARM GAS  /tmp/ccdaF48n.s 			page 130


3008:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		too often in the idle task. */
3009:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxTasksDeleted > ( UBaseType_t ) 0U )
 4148              		.loc 1 3009 0
 4149 0006 28E0     		b	.L263
 4150              	.L264:
3010:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3011:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 4151              		.loc 1 3011 0
 4152 0008 FFF7FEFF 		bl	vTaskSuspendAll
3012:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3013:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
 4153              		.loc 1 3013 0
 4154 000c 164B     		ldr	r3, .L265
 4155 000e 1B68     		ldr	r3, [r3]
 4156 0010 002B     		cmp	r3, #0
 4157 0012 0CBF     		ite	eq
 4158 0014 0123     		moveq	r3, #1
 4159 0016 0023     		movne	r3, #0
 4160 0018 DBB2     		uxtb	r3, r3
 4161 001a 7B60     		str	r3, [r7, #4]
3014:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3015:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xTaskResumeAll();
 4162              		.loc 1 3015 0
 4163 001c FFF7FEFF 		bl	xTaskResumeAll
3016:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3017:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
 4164              		.loc 1 3017 0
 4165 0020 7B68     		ldr	r3, [r7, #4]
 4166 0022 002B     		cmp	r3, #0
 4167 0024 19D1     		bne	.L263
 4168              	.LBB157:
3018:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				TCB_t *pxTCB;
3020:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3021:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
 4169              		.loc 1 3021 0
 4170 0026 FFF7FEFF 		bl	vPortEnterCritical
3022:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3023:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
 4171              		.loc 1 3023 0
 4172 002a 0F4B     		ldr	r3, .L265
 4173 002c DB68     		ldr	r3, [r3, #12]
 4174 002e DB68     		ldr	r3, [r3, #12]
 4175 0030 3B60     		str	r3, [r7]
3024:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 4176              		.loc 1 3024 0
 4177 0032 3B68     		ldr	r3, [r7]
 4178 0034 0433     		adds	r3, r3, #4
 4179 0036 1846     		mov	r0, r3
 4180 0038 FFF7FEFF 		bl	uxListRemove
3025:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 4181              		.loc 1 3025 0
 4182 003c 0B4B     		ldr	r3, .L265+4
 4183 003e 1B68     		ldr	r3, [r3]
 4184 0040 013B     		subs	r3, r3, #1
 4185 0042 0A4A     		ldr	r2, .L265+4
 4186 0044 1360     		str	r3, [r2]
ARM GAS  /tmp/ccdaF48n.s 			page 131


3026:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					--uxTasksDeleted;
 4187              		.loc 1 3026 0
 4188 0046 0A4B     		ldr	r3, .L265+8
 4189 0048 1B68     		ldr	r3, [r3]
 4190 004a 013B     		subs	r3, r3, #1
 4191 004c 084A     		ldr	r2, .L265+8
 4192 004e 1360     		str	r3, [r2]
3027:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3028:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
 4193              		.loc 1 3028 0
 4194 0050 FFF7FEFF 		bl	vPortExitCritical
3029:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3030:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 4195              		.loc 1 3030 0
 4196 0054 3868     		ldr	r0, [r7]
 4197 0056 FFF7FEFF 		bl	prvDeleteTCB
 4198              	.L263:
 4199              	.LBE157:
3009:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4200              		.loc 1 3009 0
 4201 005a 054B     		ldr	r3, .L265+8
 4202 005c 1B68     		ldr	r3, [r3]
 4203 005e 002B     		cmp	r3, #0
 4204 0060 D2D1     		bne	.L264
 4205              	.LBE156:
3031:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3032:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3033:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3034:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3035:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3036:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3038:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* vTaskDelete */
3039:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4206              		.loc 1 3039 0
 4207 0062 0837     		adds	r7, r7, #8
 4208              	.LCFI164:
 4209              		.cfi_def_cfa_offset 8
 4210 0064 BD46     		mov	sp, r7
 4211              	.LCFI165:
 4212              		.cfi_def_cfa_register 13
 4213              		@ sp needed
 4214 0066 80BD     		pop	{r7, pc}
 4215              	.L266:
 4216              		.align	2
 4217              	.L265:
 4218 0068 00000000 		.word	xTasksWaitingTermination
 4219 006c 00000000 		.word	uxCurrentNumberOfTasks
 4220 0070 00000000 		.word	uxTasksDeleted
 4221              		.cfi_endproc
 4222              	.LFE36:
 4224              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 4225              		.align	2
 4226              		.thumb
 4227              		.thumb_func
 4229              	prvAddCurrentTaskToDelayedList:
 4230              	.LFB37:
ARM GAS  /tmp/ccdaF48n.s 			page 132


3040:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3041:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( const TickType_t xTimeToWake )
3043:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4231              		.loc 1 3043 0
 4232              		.cfi_startproc
 4233              		@ args = 0, pretend = 0, frame = 8
 4234              		@ frame_needed = 1, uses_anonymous_args = 0
 4235 0000 80B5     		push	{r7, lr}
 4236              	.LCFI166:
 4237              		.cfi_def_cfa_offset 8
 4238              		.cfi_offset 7, -8
 4239              		.cfi_offset 14, -4
 4240 0002 82B0     		sub	sp, sp, #8
 4241              	.LCFI167:
 4242              		.cfi_def_cfa_offset 16
 4243 0004 00AF     		add	r7, sp, #0
 4244              	.LCFI168:
 4245              		.cfi_def_cfa_register 7
 4246 0006 7860     		str	r0, [r7, #4]
3044:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The list item will be inserted in wake time order. */
3045:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
 4247              		.loc 1 3045 0
 4248 0008 134B     		ldr	r3, .L270
 4249 000a 1B68     		ldr	r3, [r3]
 4250 000c 7A68     		ldr	r2, [r7, #4]
 4251 000e 5A60     		str	r2, [r3, #4]
3046:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3047:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xTimeToWake < xTickCount )
 4252              		.loc 1 3047 0
 4253 0010 124B     		ldr	r3, .L270+4
 4254 0012 1B68     		ldr	r3, [r3]
 4255 0014 7A68     		ldr	r2, [r7, #4]
 4256 0016 9A42     		cmp	r2, r3
 4257 0018 09D2     		bcs	.L268
3048:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3049:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Wake time has overflowed.  Place this item in the overflow list. */
3050:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 4258              		.loc 1 3050 0
 4259 001a 114B     		ldr	r3, .L270+8
 4260 001c 1A68     		ldr	r2, [r3]
 4261 001e 0E4B     		ldr	r3, .L270
 4262 0020 1B68     		ldr	r3, [r3]
 4263 0022 0433     		adds	r3, r3, #4
 4264 0024 1046     		mov	r0, r2
 4265 0026 1946     		mov	r1, r3
 4266 0028 FFF7FEFF 		bl	vListInsert
 4267 002c 10E0     		b	.L267
 4268              	.L268:
3051:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3052:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3053:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3054:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The wake time has not overflowed, so the current block list is used. */
3055:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 4269              		.loc 1 3055 0
 4270 002e 0D4B     		ldr	r3, .L270+12
 4271 0030 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccdaF48n.s 			page 133


 4272 0032 094B     		ldr	r3, .L270
 4273 0034 1B68     		ldr	r3, [r3]
 4274 0036 0433     		adds	r3, r3, #4
 4275 0038 1046     		mov	r0, r2
 4276 003a 1946     		mov	r1, r3
 4277 003c FFF7FEFF 		bl	vListInsert
3056:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task entering the blocked state was placed at the head of the
3058:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		list of blocked tasks then xNextTaskUnblockTime needs to be updated
3059:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		too. */
3060:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xNextTaskUnblockTime )
 4278              		.loc 1 3060 0
 4279 0040 094B     		ldr	r3, .L270+16
 4280 0042 1B68     		ldr	r3, [r3]
 4281 0044 7A68     		ldr	r2, [r7, #4]
 4282 0046 9A42     		cmp	r2, r3
 4283 0048 02D2     		bcs	.L267
3061:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3062:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xNextTaskUnblockTime = xTimeToWake;
 4284              		.loc 1 3062 0
 4285 004a 074A     		ldr	r2, .L270+16
 4286 004c 7B68     		ldr	r3, [r7, #4]
 4287 004e 1360     		str	r3, [r2]
 4288              	.L267:
3063:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3064:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3065:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3066:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3067:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3068:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3069:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4289              		.loc 1 3069 0
 4290 0050 0837     		adds	r7, r7, #8
 4291              	.LCFI169:
 4292              		.cfi_def_cfa_offset 8
 4293 0052 BD46     		mov	sp, r7
 4294              	.LCFI170:
 4295              		.cfi_def_cfa_register 13
 4296              		@ sp needed
 4297 0054 80BD     		pop	{r7, pc}
 4298              	.L271:
 4299 0056 00BF     		.align	2
 4300              	.L270:
 4301 0058 00000000 		.word	pxCurrentTCB
 4302 005c 00000000 		.word	xTickCount
 4303 0060 00000000 		.word	pxOverflowDelayedTaskList
 4304 0064 00000000 		.word	pxDelayedTaskList
 4305 0068 00000000 		.word	xNextTaskUnblockTime
 4306              		.cfi_endproc
 4307              	.LFE37:
 4309              		.section	.text.prvAllocateTCBAndStack,"ax",%progbits
 4310              		.align	2
 4311              		.thumb
 4312              		.thumb_func
 4314              	prvAllocateTCBAndStack:
 4315              	.LFB38:
3070:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccdaF48n.s 			page 134


3071:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3072:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static TCB_t *prvAllocateTCBAndStack( const uint16_t usStackDepth, StackType_t * const puxStackBuff
3073:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4316              		.loc 1 3073 0
 4317              		.cfi_startproc
 4318              		@ args = 0, pretend = 0, frame = 16
 4319              		@ frame_needed = 1, uses_anonymous_args = 0
 4320 0000 80B5     		push	{r7, lr}
 4321              	.LCFI171:
 4322              		.cfi_def_cfa_offset 8
 4323              		.cfi_offset 7, -8
 4324              		.cfi_offset 14, -4
 4325 0002 84B0     		sub	sp, sp, #16
 4326              	.LCFI172:
 4327              		.cfi_def_cfa_offset 24
 4328 0004 00AF     		add	r7, sp, #0
 4329              	.LCFI173:
 4330              		.cfi_def_cfa_register 7
 4331 0006 0346     		mov	r3, r0
 4332 0008 3960     		str	r1, [r7]
 4333 000a FB80     		strh	r3, [r7, #6]	@ movhi
 4334              	.LBB158:
3074:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxNewTCB;
3075:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3076:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the stack grows down then allocate the stack then the TCB so the stack
3077:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	does not grow into the TCB.  Likewise if the stack grows up then allocate
3078:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the TCB then the stack. */
3079:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH > 0 )
3080:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3081:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate space for the TCB.  Where the memory comes from depends on
3082:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the implementation of the port malloc function. */
3083:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
3084:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
3086:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3087:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created.
3088:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			The base of the stack memory stored in the TCB so the task can
3089:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be deleted later if required. */
3090:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeo
3091:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB->pxStack == NULL )
3093:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3094:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Could not allocate the stack.  Delete the allocated TCB. */
3095:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxNewTCB );
3096:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
3097:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3098:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3099:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
3101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t *pxStack;
3103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate space for the stack used by the task being created. */
3105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackTyp
 4335              		.loc 1 3105 0
 4336 000c 3B68     		ldr	r3, [r7]
 4337 000e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdaF48n.s 			page 135


 4338 0010 06D1     		bne	.L273
 4339              		.loc 1 3105 0 is_stmt 0 discriminator 1
 4340 0012 FB88     		ldrh	r3, [r7, #6]
 4341 0014 9B00     		lsls	r3, r3, #2
 4342 0016 1846     		mov	r0, r3
 4343 0018 FFF7FEFF 		bl	pvPortMalloc
 4344 001c 0346     		mov	r3, r0
 4345 001e 00E0     		b	.L274
 4346              	.L273:
 4347              		.loc 1 3105 0 discriminator 2
 4348 0020 3B68     		ldr	r3, [r7]
 4349              	.L274:
 4350              		.loc 1 3105 0 discriminator 4
 4351 0022 BB60     		str	r3, [r7, #8]
3106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxStack != NULL )
 4352              		.loc 1 3107 0 is_stmt 1 discriminator 4
 4353 0024 BB68     		ldr	r3, [r7, #8]
 4354 0026 002B     		cmp	r3, #0
 4355 0028 0ED0     		beq	.L275
3108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
3110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function. */
3111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 4356              		.loc 1 3111 0
 4357 002a 5C20     		movs	r0, #92
 4358 002c FFF7FEFF 		bl	pvPortMalloc
 4359 0030 F860     		str	r0, [r7, #12]
3112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 4360              		.loc 1 3113 0
 4361 0032 FB68     		ldr	r3, [r7, #12]
 4362 0034 002B     		cmp	r3, #0
 4363 0036 03D0     		beq	.L276
3114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
3116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxStack;
 4364              		.loc 1 3116 0
 4365 0038 FB68     		ldr	r3, [r7, #12]
 4366 003a BA68     		ldr	r2, [r7, #8]
 4367 003c 1A63     		str	r2, [r3, #48]
 4368 003e 05E0     		b	.L278
 4369              	.L276:
3117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The stack cannot be used as the TCB was not created.  Free it
3121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				again. */
3122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxStack );
 4370              		.loc 1 3122 0
 4371 0040 B868     		ldr	r0, [r7, #8]
 4372 0042 FFF7FEFF 		bl	vPortFree
 4373 0046 01E0     		b	.L278
 4374              	.L275:
3123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccdaF48n.s 			page 136


3126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = NULL;
 4375              		.loc 1 3127 0
 4376 0048 0023     		movs	r3, #0
 4377 004a FB60     		str	r3, [r7, #12]
 4378              	.L278:
 4379              	.LBE158:
3128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
3131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxNewTCB != NULL )
 4380              		.loc 1 3132 0
 4381 004c FB68     		ldr	r3, [r7, #12]
 4382 004e 002B     		cmp	r3, #0
 4383 0050 08D0     		beq	.L279
3133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid dependency on memset() if it is not required. */
3135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxT
3136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Just to help debugging. */
3138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof
 4384              		.loc 1 3138 0
 4385 0052 FB68     		ldr	r3, [r7, #12]
 4386 0054 1A6B     		ldr	r2, [r3, #48]
 4387 0056 FB88     		ldrh	r3, [r7, #6]
 4388 0058 9B00     		lsls	r3, r3, #2
 4389 005a 1046     		mov	r0, r2
 4390 005c A521     		movs	r1, #165
 4391 005e 1A46     		mov	r2, r3
 4392 0060 FFF7FEFF 		bl	memset
 4393              	.L279:
3139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( IN
3141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return pxNewTCB;
 4394              		.loc 1 3143 0
 4395 0064 FB68     		ldr	r3, [r7, #12]
3144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4396              		.loc 1 3144 0
 4397 0066 1846     		mov	r0, r3
 4398 0068 1037     		adds	r7, r7, #16
 4399              	.LCFI174:
 4400              		.cfi_def_cfa_offset 8
 4401 006a BD46     		mov	sp, r7
 4402              	.LCFI175:
 4403              		.cfi_def_cfa_register 13
 4404              		@ sp needed
 4405 006c 80BD     		pop	{r7, pc}
 4406              		.cfi_endproc
 4407              	.LFE38:
 4409 006e 00BF     		.section	.text.prvListTaskWithinSingleList,"ax",%progbits
 4410              		.align	2
 4411              		.thumb
 4412              		.thumb_func
 4414              	prvListTaskWithinSingleList:
ARM GAS  /tmp/ccdaF48n.s 			page 137


 4415              	.LFB39:
3145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTaskWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, e
3150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4416              		.loc 1 3150 0
 4417              		.cfi_startproc
 4418              		@ args = 0, pretend = 0, frame = 40
 4419              		@ frame_needed = 1, uses_anonymous_args = 0
 4420 0000 90B5     		push	{r4, r7, lr}
 4421              	.LCFI176:
 4422              		.cfi_def_cfa_offset 12
 4423              		.cfi_offset 4, -12
 4424              		.cfi_offset 7, -8
 4425              		.cfi_offset 14, -4
 4426 0002 8BB0     		sub	sp, sp, #44
 4427              	.LCFI177:
 4428              		.cfi_def_cfa_offset 56
 4429 0004 00AF     		add	r7, sp, #0
 4430              	.LCFI178:
 4431              		.cfi_def_cfa_register 7
 4432 0006 F860     		str	r0, [r7, #12]
 4433 0008 B960     		str	r1, [r7, #8]
 4434 000a 1346     		mov	r3, r2
 4435 000c FB71     		strb	r3, [r7, #7]
3151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 4436              		.loc 1 3152 0
 4437 000e 0023     		movs	r3, #0
 4438 0010 7B62     		str	r3, [r7, #36]
3153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
 4439              		.loc 1 3154 0
 4440 0012 BB68     		ldr	r3, [r7, #8]
 4441 0014 1B68     		ldr	r3, [r3]
 4442 0016 002B     		cmp	r3, #0
 4443 0018 78D0     		beq	.L282
 4444              	.LBB159:
3155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
 4445              		.loc 1 3156 0
 4446 001a BB68     		ldr	r3, [r7, #8]
 4447 001c 3B62     		str	r3, [r7, #32]
 4448 001e 3B6A     		ldr	r3, [r7, #32]
 4449 0020 5B68     		ldr	r3, [r3, #4]
 4450 0022 5A68     		ldr	r2, [r3, #4]
 4451 0024 3B6A     		ldr	r3, [r7, #32]
 4452 0026 5A60     		str	r2, [r3, #4]
 4453 0028 3B6A     		ldr	r3, [r7, #32]
 4454 002a 5A68     		ldr	r2, [r3, #4]
 4455 002c 3B6A     		ldr	r3, [r7, #32]
 4456 002e 0833     		adds	r3, r3, #8
 4457 0030 9A42     		cmp	r2, r3
 4458 0032 04D1     		bne	.L283
 4459              		.loc 1 3156 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccdaF48n.s 			page 138


 4460 0034 3B6A     		ldr	r3, [r7, #32]
 4461 0036 5B68     		ldr	r3, [r3, #4]
 4462 0038 5A68     		ldr	r2, [r3, #4]
 4463 003a 3B6A     		ldr	r3, [r7, #32]
 4464 003c 5A60     		str	r2, [r3, #4]
 4465              	.L283:
 4466              		.loc 1 3156 0 discriminator 3
 4467 003e 3B6A     		ldr	r3, [r7, #32]
 4468 0040 5B68     		ldr	r3, [r3, #4]
 4469 0042 DB68     		ldr	r3, [r3, #12]
 4470 0044 FB61     		str	r3, [r7, #28]
 4471              	.L286:
 4472              	.LBE159:
 4473              	.LBB160:
3157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
 4474              		.loc 1 3164 0 is_stmt 1
 4475 0046 BB68     		ldr	r3, [r7, #8]
 4476 0048 BB61     		str	r3, [r7, #24]
 4477 004a BB69     		ldr	r3, [r7, #24]
 4478 004c 5B68     		ldr	r3, [r3, #4]
 4479 004e 5A68     		ldr	r2, [r3, #4]
 4480 0050 BB69     		ldr	r3, [r7, #24]
 4481 0052 5A60     		str	r2, [r3, #4]
 4482 0054 BB69     		ldr	r3, [r7, #24]
 4483 0056 5A68     		ldr	r2, [r3, #4]
 4484 0058 BB69     		ldr	r3, [r7, #24]
 4485 005a 0833     		adds	r3, r3, #8
 4486 005c 9A42     		cmp	r2, r3
 4487 005e 04D1     		bne	.L284
 4488              		.loc 1 3164 0 is_stmt 0 discriminator 1
 4489 0060 BB69     		ldr	r3, [r7, #24]
 4490 0062 5B68     		ldr	r3, [r3, #4]
 4491 0064 5A68     		ldr	r2, [r3, #4]
 4492 0066 BB69     		ldr	r3, [r7, #24]
 4493 0068 5A60     		str	r2, [r3, #4]
 4494              	.L284:
 4495              		.loc 1 3164 0 discriminator 3
 4496 006a BB69     		ldr	r3, [r7, #24]
 4497 006c 5B68     		ldr	r3, [r3, #4]
 4498 006e DB68     		ldr	r3, [r3, #12]
 4499 0070 7B61     		str	r3, [r7, #20]
 4500              	.LBE160:
3165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatusArray[ uxTask ].xHandle = ( TaskHandle_t ) pxNextTCB;
 4501              		.loc 1 3166 0 is_stmt 1 discriminator 3
 4502 0072 7B6A     		ldr	r3, [r7, #36]
 4503 0074 5B01     		lsls	r3, r3, #5
 4504 0076 FA68     		ldr	r2, [r7, #12]
 4505 0078 1344     		add	r3, r3, r2
 4506 007a 7A69     		ldr	r2, [r7, #20]
ARM GAS  /tmp/ccdaF48n.s 			page 139


 4507 007c 1A60     		str	r2, [r3]
3167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatusArray[ uxTask ].pcTaskName = ( const char * ) &( pxNextTCB->pcTaskName [ 0 ] );
 4508              		.loc 1 3167 0 discriminator 3
 4509 007e 7B6A     		ldr	r3, [r7, #36]
 4510 0080 5B01     		lsls	r3, r3, #5
 4511 0082 FA68     		ldr	r2, [r7, #12]
 4512 0084 1344     		add	r3, r3, r2
 4513 0086 7A69     		ldr	r2, [r7, #20]
 4514 0088 3432     		adds	r2, r2, #52
 4515 008a 5A60     		str	r2, [r3, #4]
3168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatusArray[ uxTask ].xTaskNumber = pxNextTCB->uxTCBNumber;
 4516              		.loc 1 3168 0 discriminator 3
 4517 008c 7B6A     		ldr	r3, [r7, #36]
 4518 008e 5B01     		lsls	r3, r3, #5
 4519 0090 FA68     		ldr	r2, [r7, #12]
 4520 0092 1344     		add	r3, r3, r2
 4521 0094 7A69     		ldr	r2, [r7, #20]
 4522 0096 526C     		ldr	r2, [r2, #68]
 4523 0098 9A60     		str	r2, [r3, #8]
3169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatusArray[ uxTask ].eCurrentState = eState;
 4524              		.loc 1 3169 0 discriminator 3
 4525 009a 7B6A     		ldr	r3, [r7, #36]
 4526 009c 5B01     		lsls	r3, r3, #5
 4527 009e FA68     		ldr	r2, [r7, #12]
 4528 00a0 1344     		add	r3, r3, r2
 4529 00a2 FA79     		ldrb	r2, [r7, #7]
 4530 00a4 1A73     		strb	r2, [r3, #12]
3170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatusArray[ uxTask ].uxCurrentPriority = pxNextTCB->uxPriority;
 4531              		.loc 1 3170 0 discriminator 3
 4532 00a6 7B6A     		ldr	r3, [r7, #36]
 4533 00a8 5B01     		lsls	r3, r3, #5
 4534 00aa FA68     		ldr	r2, [r7, #12]
 4535 00ac 1344     		add	r3, r3, r2
 4536 00ae 7A69     		ldr	r2, [r7, #20]
 4537 00b0 D26A     		ldr	r2, [r2, #44]
 4538 00b2 1A61     		str	r2, [r3, #16]
3171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a chance
3175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it is actually just blocked indefinitely - so really it should
3176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be reported as being in the Blocked state. */
3177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
 4539              		.loc 1 3177 0 discriminator 3
 4540 00b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4541 00b6 032B     		cmp	r3, #3
 4542 00b8 09D1     		bne	.L285
3178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( listLIST_ITEM_CONTAINER( &( pxNextTCB->xEventListItem ) ) != NULL )
 4543              		.loc 1 3179 0
 4544 00ba 7B69     		ldr	r3, [r7, #20]
 4545 00bc 9B6A     		ldr	r3, [r3, #40]
 4546 00be 002B     		cmp	r3, #0
 4547 00c0 05D0     		beq	.L285
3180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							pxTaskStatusArray[ uxTask ].eCurrentState = eBlocked;
 4548              		.loc 1 3181 0
ARM GAS  /tmp/ccdaF48n.s 			page 140


 4549 00c2 7B6A     		ldr	r3, [r7, #36]
 4550 00c4 5B01     		lsls	r3, r3, #5
 4551 00c6 FA68     		ldr	r2, [r7, #12]
 4552 00c8 1344     		add	r3, r3, r2
 4553 00ca 0222     		movs	r2, #2
 4554 00cc 1A73     		strb	r2, [r3, #12]
 4555              	.L285:
3182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
3188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].uxBasePriority = pxNextTCB->uxBasePriority;
 4556              		.loc 1 3189 0
 4557 00ce 7B6A     		ldr	r3, [r7, #36]
 4558 00d0 5B01     		lsls	r3, r3, #5
 4559 00d2 FA68     		ldr	r2, [r7, #12]
 4560 00d4 1344     		add	r3, r3, r2
 4561 00d6 7A69     		ldr	r2, [r7, #20]
 4562 00d8 D26C     		ldr	r2, [r2, #76]
 4563 00da 5A61     		str	r2, [r3, #20]
3190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
3192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].uxBasePriority = 0;
3194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
3196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1 )
3198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].ulRunTimeCounter = pxNextTCB->ulRunTimeCounter;
3200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
3202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].ulRunTimeCounter = 0;
 4564              		.loc 1 3203 0
 4565 00dc 7B6A     		ldr	r3, [r7, #36]
 4566 00de 5B01     		lsls	r3, r3, #5
 4567 00e0 FA68     		ldr	r2, [r7, #12]
 4568 00e2 1344     		add	r3, r3, r2
 4569 00e4 0022     		movs	r2, #0
 4570 00e6 9A61     		str	r2, [r3, #24]
3204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
3206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( portSTACK_GROWTH > 0 )
3208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) p
3210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
3212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTaskStatusArray[ uxTask ].usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) p
 4571              		.loc 1 3213 0
 4572 00e8 7B6A     		ldr	r3, [r7, #36]
 4573 00ea 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/ccdaF48n.s 			page 141


 4574 00ec FA68     		ldr	r2, [r7, #12]
 4575 00ee D418     		adds	r4, r2, r3
 4576 00f0 7B69     		ldr	r3, [r7, #20]
 4577 00f2 1B6B     		ldr	r3, [r3, #48]
 4578 00f4 1846     		mov	r0, r3
 4579 00f6 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 4580 00fa 0346     		mov	r3, r0
 4581 00fc A383     		strh	r3, [r4, #28]	@ movhi
3214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
3216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
 4582              		.loc 1 3217 0
 4583 00fe 7B6A     		ldr	r3, [r7, #36]
 4584 0100 0133     		adds	r3, r3, #1
 4585 0102 7B62     		str	r3, [r7, #36]
3218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4586              		.loc 1 3219 0
 4587 0104 7A69     		ldr	r2, [r7, #20]
 4588 0106 FB69     		ldr	r3, [r7, #28]
 4589 0108 9A42     		cmp	r2, r3
 4590 010a 9CD1     		bne	.L286
 4591              	.L282:
3220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
 4592              		.loc 1 3226 0
 4593 010c 7B6A     		ldr	r3, [r7, #36]
3227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4594              		.loc 1 3227 0
 4595 010e 1846     		mov	r0, r3
 4596 0110 2C37     		adds	r7, r7, #44
 4597              	.LCFI179:
 4598              		.cfi_def_cfa_offset 12
 4599 0112 BD46     		mov	sp, r7
 4600              	.LCFI180:
 4601              		.cfi_def_cfa_register 13
 4602              		@ sp needed
 4603 0114 90BD     		pop	{r4, r7, pc}
 4604              		.cfi_endproc
 4605              	.LFE39:
 4607 0116 00BF     		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 4608              		.align	2
 4609              		.thumb
 4610              		.thumb_func
 4612              	prvTaskCheckFreeStackSpace:
 4613              	.LFB40:
3228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  /tmp/ccdaF48n.s 			page 142


3233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4614              		.loc 1 3235 0
 4615              		.cfi_startproc
 4616              		@ args = 0, pretend = 0, frame = 16
 4617              		@ frame_needed = 1, uses_anonymous_args = 0
 4618              		@ link register save eliminated.
 4619 0000 80B4     		push	{r7}
 4620              	.LCFI181:
 4621              		.cfi_def_cfa_offset 4
 4622              		.cfi_offset 7, -4
 4623 0002 85B0     		sub	sp, sp, #20
 4624              	.LCFI182:
 4625              		.cfi_def_cfa_offset 24
 4626 0004 00AF     		add	r7, sp, #0
 4627              	.LCFI183:
 4628              		.cfi_def_cfa_register 7
 4629 0006 7860     		str	r0, [r7, #4]
3236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
 4630              		.loc 1 3236 0
 4631 0008 0023     		movs	r3, #0
 4632 000a FB60     		str	r3, [r7, #12]
3237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 4633              		.loc 1 3238 0
 4634 000c 05E0     		b	.L289
 4635              	.L290:
3239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 4636              		.loc 1 3240 0
 4637 000e 7B68     		ldr	r3, [r7, #4]
 4638 0010 0133     		adds	r3, r3, #1
 4639 0012 7B60     		str	r3, [r7, #4]
3241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
 4640              		.loc 1 3241 0
 4641 0014 FB68     		ldr	r3, [r7, #12]
 4642 0016 0133     		adds	r3, r3, #1
 4643 0018 FB60     		str	r3, [r7, #12]
 4644              	.L289:
3238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4645              		.loc 1 3238 0
 4646 001a 7B68     		ldr	r3, [r7, #4]
 4647 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4648 001e A52B     		cmp	r3, #165
 4649 0020 F5D0     		beq	.L290
3242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
 4650              		.loc 1 3244 0
 4651 0022 FB68     		ldr	r3, [r7, #12]
 4652 0024 9B08     		lsrs	r3, r3, #2
 4653 0026 FB60     		str	r3, [r7, #12]
3245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
 4654              		.loc 1 3246 0
 4655 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccdaF48n.s 			page 143


 4656 002a 9BB2     		uxth	r3, r3
3247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4657              		.loc 1 3247 0
 4658 002c 1846     		mov	r0, r3
 4659 002e 1437     		adds	r7, r7, #20
 4660              	.LCFI184:
 4661              		.cfi_def_cfa_offset 4
 4662 0030 BD46     		mov	sp, r7
 4663              	.LCFI185:
 4664              		.cfi_def_cfa_register 13
 4665              		@ sp needed
 4666 0032 5DF8047B 		ldr	r7, [sp], #4
 4667              	.LCFI186:
 4668              		.cfi_restore 7
 4669              		.cfi_def_cfa_offset 0
 4670 0036 7047     		bx	lr
 4671              		.cfi_endproc
 4672              	.LFE40:
 4674              		.section	.text.prvDeleteTCB,"ax",%progbits
 4675              		.align	2
 4676              		.thumb
 4677              		.thumb_func
 4679              	prvDeleteTCB:
 4680              	.LFB41:
3248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3251:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3252:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3253:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3255:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3256:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3257:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3258:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3259:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3260:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3261:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3262:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3263:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3264:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3265:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3266:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3267:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3268:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3269:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3270:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3271:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3272:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3273:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3275:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3276:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3277:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3278:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3279:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3280:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
ARM GAS  /tmp/ccdaF48n.s 			page 144


3281:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3283:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4681              		.loc 1 3283 0
 4682              		.cfi_startproc
 4683              		@ args = 0, pretend = 0, frame = 8
 4684              		@ frame_needed = 1, uses_anonymous_args = 0
 4685 0000 80B5     		push	{r7, lr}
 4686              	.LCFI187:
 4687              		.cfi_def_cfa_offset 8
 4688              		.cfi_offset 7, -8
 4689              		.cfi_offset 14, -4
 4690 0002 82B0     		sub	sp, sp, #8
 4691              	.LCFI188:
 4692              		.cfi_def_cfa_offset 16
 4693 0004 00AF     		add	r7, sp, #0
 4694              	.LCFI189:
 4695              		.cfi_def_cfa_register 7
 4696 0006 7860     		str	r0, [r7, #4]
3284:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3285:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3286:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3287:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3288:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3289:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3290:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3291:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3292:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3293:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3294:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3295:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3296:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portUSING_MPU_WRAPPERS == 1 )
3298:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3299:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only free the stack if it was allocated dynamically in the first
3300:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			place. */
3301:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->xUsingStaticallyAllocatedStack == pdFALSE )
3302:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3303:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFreeAligned( pxTCB->pxStack );
3304:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3305:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3306:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3307:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3308:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFreeAligned( pxTCB->pxStack );
 4697              		.loc 1 3308 0
 4698 0008 7B68     		ldr	r3, [r7, #4]
 4699 000a 1B6B     		ldr	r3, [r3, #48]
 4700 000c 1846     		mov	r0, r3
 4701 000e FFF7FEFF 		bl	vPortFree
3309:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3310:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3311:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortFree( pxTCB );
 4702              		.loc 1 3312 0
 4703 0012 7868     		ldr	r0, [r7, #4]
 4704 0014 FFF7FEFF 		bl	vPortFree
3313:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccdaF48n.s 			page 145


 4705              		.loc 1 3313 0
 4706 0018 0837     		adds	r7, r7, #8
 4707              	.LCFI190:
 4708              		.cfi_def_cfa_offset 8
 4709 001a BD46     		mov	sp, r7
 4710              	.LCFI191:
 4711              		.cfi_def_cfa_register 13
 4712              		@ sp needed
 4713 001c 80BD     		pop	{r7, pc}
 4714              		.cfi_endproc
 4715              	.LFE41:
 4717 001e 00BF     		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 4718              		.align	2
 4719              		.thumb
 4720              		.thumb_func
 4722              	prvResetNextTaskUnblockTime:
 4723              	.LFB42:
3314:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3315:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3316:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3317:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3318:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3319:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 4724              		.loc 1 3319 0
 4725              		.cfi_startproc
 4726              		@ args = 0, pretend = 0, frame = 8
 4727              		@ frame_needed = 1, uses_anonymous_args = 0
 4728              		@ link register save eliminated.
 4729 0000 80B4     		push	{r7}
 4730              	.LCFI192:
 4731              		.cfi_def_cfa_offset 4
 4732              		.cfi_offset 7, -4
 4733 0002 83B0     		sub	sp, sp, #12
 4734              	.LCFI193:
 4735              		.cfi_def_cfa_offset 16
 4736 0004 00AF     		add	r7, sp, #0
 4737              	.LCFI194:
 4738              		.cfi_def_cfa_register 7
3320:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
3321:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3322:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 4739              		.loc 1 3322 0
 4740 0006 0E4B     		ldr	r3, .L298
 4741 0008 1B68     		ldr	r3, [r3]
 4742 000a 1B68     		ldr	r3, [r3]
 4743 000c 002B     		cmp	r3, #0
 4744 000e 01D1     		bne	.L294
 4745              		.loc 1 3322 0 is_stmt 0 discriminator 1
 4746 0010 0123     		movs	r3, #1
 4747 0012 00E0     		b	.L295
 4748              	.L294:
 4749              		.loc 1 3322 0 discriminator 2
 4750 0014 0023     		movs	r3, #0
 4751              	.L295:
 4752              		.loc 1 3322 0 discriminator 4
 4753 0016 002B     		cmp	r3, #0
 4754 0018 04D0     		beq	.L296
ARM GAS  /tmp/ccdaF48n.s 			page 146


3323:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3324:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3325:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3326:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3327:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3328:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 4755              		.loc 1 3328 0 is_stmt 1
 4756 001a 0A4B     		ldr	r3, .L298+4
 4757 001c 4FF0FF32 		mov	r2, #-1
 4758 0020 1A60     		str	r2, [r3]
 4759 0022 08E0     		b	.L293
 4760              	.L296:
3329:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3330:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3331:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3332:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3333:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3334:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3335:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3336:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 4761              		.loc 1 3336 0
 4762 0024 064B     		ldr	r3, .L298
 4763 0026 1B68     		ldr	r3, [r3]
 4764 0028 DB68     		ldr	r3, [r3, #12]
 4765 002a DB68     		ldr	r3, [r3, #12]
 4766 002c 7B60     		str	r3, [r7, #4]
3337:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
 4767              		.loc 1 3337 0
 4768 002e 7B68     		ldr	r3, [r7, #4]
 4769 0030 5B68     		ldr	r3, [r3, #4]
 4770 0032 044A     		ldr	r2, .L298+4
 4771 0034 1360     		str	r3, [r2]
 4772              	.L293:
3338:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3339:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4773              		.loc 1 3339 0
 4774 0036 0C37     		adds	r7, r7, #12
 4775              	.LCFI195:
 4776              		.cfi_def_cfa_offset 4
 4777 0038 BD46     		mov	sp, r7
 4778              	.LCFI196:
 4779              		.cfi_def_cfa_register 13
 4780              		@ sp needed
 4781 003a 5DF8047B 		ldr	r7, [sp], #4
 4782              	.LCFI197:
 4783              		.cfi_restore 7
 4784              		.cfi_def_cfa_offset 0
 4785 003e 7047     		bx	lr
 4786              	.L299:
 4787              		.align	2
 4788              	.L298:
 4789 0040 00000000 		.word	pxDelayedTaskList
 4790 0044 00000000 		.word	xNextTaskUnblockTime
 4791              		.cfi_endproc
 4792              	.LFE42:
 4794              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4795              		.align	2
ARM GAS  /tmp/ccdaF48n.s 			page 147


 4796              		.global	xTaskGetCurrentTaskHandle
 4797              		.thumb
 4798              		.thumb_func
 4800              	xTaskGetCurrentTaskHandle:
 4801              	.LFB43:
3340:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3341:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3342:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3343:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3344:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3345:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4802              		.loc 1 3345 0
 4803              		.cfi_startproc
 4804              		@ args = 0, pretend = 0, frame = 8
 4805              		@ frame_needed = 1, uses_anonymous_args = 0
 4806              		@ link register save eliminated.
 4807 0000 80B4     		push	{r7}
 4808              	.LCFI198:
 4809              		.cfi_def_cfa_offset 4
 4810              		.cfi_offset 7, -4
 4811 0002 83B0     		sub	sp, sp, #12
 4812              	.LCFI199:
 4813              		.cfi_def_cfa_offset 16
 4814 0004 00AF     		add	r7, sp, #0
 4815              	.LCFI200:
 4816              		.cfi_def_cfa_register 7
3346:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3347:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3348:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3349:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3350:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3351:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
 4817              		.loc 1 3351 0
 4818 0006 054B     		ldr	r3, .L302
 4819 0008 1B68     		ldr	r3, [r3]
 4820 000a 7B60     		str	r3, [r7, #4]
3352:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3353:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 4821              		.loc 1 3353 0
 4822 000c 7B68     		ldr	r3, [r7, #4]
3354:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4823              		.loc 1 3354 0
 4824 000e 1846     		mov	r0, r3
 4825 0010 0C37     		adds	r7, r7, #12
 4826              	.LCFI201:
 4827              		.cfi_def_cfa_offset 4
 4828 0012 BD46     		mov	sp, r7
 4829              	.LCFI202:
 4830              		.cfi_def_cfa_register 13
 4831              		@ sp needed
 4832 0014 5DF8047B 		ldr	r7, [sp], #4
 4833              	.LCFI203:
 4834              		.cfi_restore 7
 4835              		.cfi_def_cfa_offset 0
 4836 0018 7047     		bx	lr
 4837              	.L303:
 4838 001a 00BF     		.align	2
ARM GAS  /tmp/ccdaF48n.s 			page 148


 4839              	.L302:
 4840 001c 00000000 		.word	pxCurrentTCB
 4841              		.cfi_endproc
 4842              	.LFE43:
 4844              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4845              		.align	2
 4846              		.global	xTaskGetSchedulerState
 4847              		.thumb
 4848              		.thumb_func
 4850              	xTaskGetSchedulerState:
 4851              	.LFB44:
3355:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3356:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3357:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3358:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3359:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3360:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3361:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3362:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4852              		.loc 1 3362 0
 4853              		.cfi_startproc
 4854              		@ args = 0, pretend = 0, frame = 8
 4855              		@ frame_needed = 1, uses_anonymous_args = 0
 4856              		@ link register save eliminated.
 4857 0000 80B4     		push	{r7}
 4858              	.LCFI204:
 4859              		.cfi_def_cfa_offset 4
 4860              		.cfi_offset 7, -4
 4861 0002 83B0     		sub	sp, sp, #12
 4862              	.LCFI205:
 4863              		.cfi_def_cfa_offset 16
 4864 0004 00AF     		add	r7, sp, #0
 4865              	.LCFI206:
 4866              		.cfi_def_cfa_register 7
3363:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3364:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3365:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
 4867              		.loc 1 3365 0
 4868 0006 0B4B     		ldr	r3, .L309
 4869 0008 1B68     		ldr	r3, [r3]
 4870 000a 002B     		cmp	r3, #0
 4871 000c 02D1     		bne	.L305
3366:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3367:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
 4872              		.loc 1 3367 0
 4873 000e 0123     		movs	r3, #1
 4874 0010 7B60     		str	r3, [r7, #4]
 4875 0012 08E0     		b	.L306
 4876              	.L305:
3368:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3369:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3370:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3371:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 4877              		.loc 1 3371 0
 4878 0014 084B     		ldr	r3, .L309+4
 4879 0016 1B68     		ldr	r3, [r3]
 4880 0018 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdaF48n.s 			page 149


 4881 001a 02D1     		bne	.L307
3372:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3373:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
 4882              		.loc 1 3373 0
 4883 001c 0223     		movs	r3, #2
 4884 001e 7B60     		str	r3, [r7, #4]
 4885 0020 01E0     		b	.L306
 4886              	.L307:
3374:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3375:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3376:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3377:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
 4887              		.loc 1 3377 0
 4888 0022 0023     		movs	r3, #0
 4889 0024 7B60     		str	r3, [r7, #4]
 4890              	.L306:
3378:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3379:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3380:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 4891              		.loc 1 3381 0
 4892 0026 7B68     		ldr	r3, [r7, #4]
3382:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4893              		.loc 1 3382 0
 4894 0028 1846     		mov	r0, r3
 4895 002a 0C37     		adds	r7, r7, #12
 4896              	.LCFI207:
 4897              		.cfi_def_cfa_offset 4
 4898 002c BD46     		mov	sp, r7
 4899              	.LCFI208:
 4900              		.cfi_def_cfa_register 13
 4901              		@ sp needed
 4902 002e 5DF8047B 		ldr	r7, [sp], #4
 4903              	.LCFI209:
 4904              		.cfi_restore 7
 4905              		.cfi_def_cfa_offset 0
 4906 0032 7047     		bx	lr
 4907              	.L310:
 4908              		.align	2
 4909              	.L309:
 4910 0034 00000000 		.word	xSchedulerRunning
 4911 0038 00000000 		.word	uxSchedulerSuspended
 4912              		.cfi_endproc
 4913              	.LFE44:
 4915              		.section	.text.vTaskPriorityInherit,"ax",%progbits
 4916              		.align	2
 4917              		.global	vTaskPriorityInherit
 4918              		.thumb
 4919              		.thumb_func
 4921              	vTaskPriorityInherit:
 4922              	.LFB45:
3383:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3384:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3385:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3386:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3387:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3388:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 150


3389:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3390:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4923              		.loc 1 3390 0
 4924              		.cfi_startproc
 4925              		@ args = 0, pretend = 0, frame = 16
 4926              		@ frame_needed = 1, uses_anonymous_args = 0
 4927 0000 80B5     		push	{r7, lr}
 4928              	.LCFI210:
 4929              		.cfi_def_cfa_offset 8
 4930              		.cfi_offset 7, -8
 4931              		.cfi_offset 14, -4
 4932 0002 84B0     		sub	sp, sp, #16
 4933              	.LCFI211:
 4934              		.cfi_def_cfa_offset 24
 4935 0004 00AF     		add	r7, sp, #0
 4936              	.LCFI212:
 4937              		.cfi_def_cfa_register 7
 4938 0006 7860     		str	r0, [r7, #4]
3391:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4939              		.loc 1 3391 0
 4940 0008 7B68     		ldr	r3, [r7, #4]
 4941 000a FB60     		str	r3, [r7, #12]
3392:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3394:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3395:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 4942              		.loc 1 3395 0
 4943 000c 7B68     		ldr	r3, [r7, #4]
 4944 000e 002B     		cmp	r3, #0
 4945 0010 64D0     		beq	.L311
3396:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3397:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3398:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3399:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3400:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
 4946              		.loc 1 3400 0
 4947 0012 FB68     		ldr	r3, [r7, #12]
 4948 0014 DA6A     		ldr	r2, [r3, #44]
 4949 0016 334B     		ldr	r3, .L320
 4950 0018 1B68     		ldr	r3, [r3]
 4951 001a DB6A     		ldr	r3, [r3, #44]
 4952 001c 9A42     		cmp	r2, r3
 4953 001e 5DD2     		bcs	.L311
3401:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3402:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3403:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3404:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	being used for anything else. */
3405:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
 4954              		.loc 1 3405 0
 4955 0020 FB68     		ldr	r3, [r7, #12]
 4956 0022 9B69     		ldr	r3, [r3, #24]
 4957 0024 002B     		cmp	r3, #0
 4958 0026 06DB     		blt	.L313
3406:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3407:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
 4959              		.loc 1 3407 0
 4960 0028 2E4B     		ldr	r3, .L320
ARM GAS  /tmp/ccdaF48n.s 			page 151


 4961 002a 1B68     		ldr	r3, [r3]
 4962 002c DB6A     		ldr	r3, [r3, #44]
 4963 002e C3F10702 		rsb	r2, r3, #7
 4964 0032 FB68     		ldr	r3, [r7, #12]
 4965 0034 9A61     		str	r2, [r3, #24]
 4966              	.L313:
3408:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3409:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3410:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3411:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3412:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3413:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3415:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3416:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xGenericLis
 4967              		.loc 1 3416 0
 4968 0036 FB68     		ldr	r3, [r7, #12]
 4969 0038 5969     		ldr	r1, [r3, #20]
 4970 003a FB68     		ldr	r3, [r7, #12]
 4971 003c DA6A     		ldr	r2, [r3, #44]
 4972 003e 1346     		mov	r3, r2
 4973 0040 9B00     		lsls	r3, r3, #2
 4974 0042 1344     		add	r3, r3, r2
 4975 0044 9B00     		lsls	r3, r3, #2
 4976 0046 284A     		ldr	r2, .L320+4
 4977 0048 1344     		add	r3, r3, r2
 4978 004a 9942     		cmp	r1, r3
 4979 004c 01D1     		bne	.L314
 4980              		.loc 1 3416 0 is_stmt 0 discriminator 1
 4981 004e 0123     		movs	r3, #1
 4982 0050 00E0     		b	.L315
 4983              	.L314:
 4984              		.loc 1 3416 0 discriminator 2
 4985 0052 0023     		movs	r3, #0
 4986              	.L315:
 4987              		.loc 1 3416 0 discriminator 4
 4988 0054 002B     		cmp	r3, #0
 4989 0056 3CD0     		beq	.L316
3417:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3418:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 4990              		.loc 1 3418 0 is_stmt 1
 4991 0058 FB68     		ldr	r3, [r7, #12]
 4992 005a 0433     		adds	r3, r3, #4
 4993 005c 1846     		mov	r0, r3
 4994 005e FFF7FEFF 		bl	uxListRemove
 4995 0062 0346     		mov	r3, r0
 4996 0064 002B     		cmp	r3, #0
 4997 0066 15D1     		bne	.L317
3419:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3420:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 4998              		.loc 1 3420 0
 4999 0068 FB68     		ldr	r3, [r7, #12]
 5000 006a DA6A     		ldr	r2, [r3, #44]
 5001 006c 1E49     		ldr	r1, .L320+4
 5002 006e 1346     		mov	r3, r2
 5003 0070 9B00     		lsls	r3, r3, #2
 5004 0072 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccdaF48n.s 			page 152


 5005 0074 9B00     		lsls	r3, r3, #2
 5006 0076 0B44     		add	r3, r3, r1
 5007 0078 1B68     		ldr	r3, [r3]
 5008 007a 002B     		cmp	r3, #0
 5009 007c 0AD1     		bne	.L317
 5010              		.loc 1 3420 0 is_stmt 0 discriminator 1
 5011 007e FB68     		ldr	r3, [r7, #12]
 5012 0080 DB6A     		ldr	r3, [r3, #44]
 5013 0082 1A46     		mov	r2, r3
 5014 0084 0123     		movs	r3, #1
 5015 0086 9340     		lsls	r3, r3, r2
 5016 0088 DA43     		mvns	r2, r3
 5017 008a 184B     		ldr	r3, .L320+8
 5018 008c 1B68     		ldr	r3, [r3]
 5019 008e 1340     		ands	r3, r3, r2
 5020 0090 164A     		ldr	r2, .L320+8
 5021 0092 1360     		str	r3, [r2]
 5022              	.L317:
3421:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3422:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3423:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3424:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3425:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3426:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3428:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 5023              		.loc 1 3428 0 is_stmt 1
 5024 0094 134B     		ldr	r3, .L320
 5025 0096 1B68     		ldr	r3, [r3]
 5026 0098 DA6A     		ldr	r2, [r3, #44]
 5027 009a FB68     		ldr	r3, [r7, #12]
 5028 009c DA62     		str	r2, [r3, #44]
3429:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5029              		.loc 1 3429 0
 5030 009e FB68     		ldr	r3, [r7, #12]
 5031 00a0 DB6A     		ldr	r3, [r3, #44]
 5032 00a2 1A46     		mov	r2, r3
 5033 00a4 0123     		movs	r3, #1
 5034 00a6 03FA02F2 		lsl	r2, r3, r2
 5035 00aa 104B     		ldr	r3, .L320+8
 5036 00ac 1B68     		ldr	r3, [r3]
 5037 00ae 1343     		orrs	r3, r3, r2
 5038 00b0 0E4A     		ldr	r2, .L320+8
 5039 00b2 1360     		str	r3, [r2]
 5040 00b4 FB68     		ldr	r3, [r7, #12]
 5041 00b6 DA6A     		ldr	r2, [r3, #44]
 5042 00b8 1346     		mov	r3, r2
 5043 00ba 9B00     		lsls	r3, r3, #2
 5044 00bc 1344     		add	r3, r3, r2
 5045 00be 9B00     		lsls	r3, r3, #2
 5046 00c0 094A     		ldr	r2, .L320+4
 5047 00c2 1A44     		add	r2, r2, r3
 5048 00c4 FB68     		ldr	r3, [r7, #12]
 5049 00c6 0433     		adds	r3, r3, #4
 5050 00c8 1046     		mov	r0, r2
 5051 00ca 1946     		mov	r1, r3
 5052 00cc FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/ccdaF48n.s 			page 153


 5053 00d0 04E0     		b	.L311
 5054              	.L316:
3430:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3431:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3432:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3433:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3434:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
 5055              		.loc 1 3434 0
 5056 00d2 044B     		ldr	r3, .L320
 5057 00d4 1B68     		ldr	r3, [r3]
 5058 00d6 DA6A     		ldr	r2, [r3, #44]
 5059 00d8 FB68     		ldr	r3, [r7, #12]
 5060 00da DA62     		str	r2, [r3, #44]
 5061              	.L311:
3435:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3436:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3437:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3438:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3439:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3440:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3441:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3442:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3443:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3444:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3445:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3446:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3447:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3448:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5062              		.loc 1 3448 0
 5063 00dc 1037     		adds	r7, r7, #16
 5064              	.LCFI213:
 5065              		.cfi_def_cfa_offset 8
 5066 00de BD46     		mov	sp, r7
 5067              	.LCFI214:
 5068              		.cfi_def_cfa_register 13
 5069              		@ sp needed
 5070 00e0 80BD     		pop	{r7, pc}
 5071              	.L321:
 5072 00e2 00BF     		.align	2
 5073              	.L320:
 5074 00e4 00000000 		.word	pxCurrentTCB
 5075 00e8 00000000 		.word	pxReadyTasksLists
 5076 00ec 00000000 		.word	uxTopReadyPriority
 5077              		.cfi_endproc
 5078              	.LFE45:
 5080              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5081              		.align	2
 5082              		.global	xTaskPriorityDisinherit
 5083              		.thumb
 5084              		.thumb_func
 5086              	xTaskPriorityDisinherit:
 5087              	.LFB46:
3449:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3450:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3451:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3452:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3453:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
ARM GAS  /tmp/ccdaF48n.s 			page 154


3454:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3456:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5088              		.loc 1 3456 0
 5089              		.cfi_startproc
 5090              		@ args = 0, pretend = 0, frame = 24
 5091              		@ frame_needed = 1, uses_anonymous_args = 0
 5092 0000 80B5     		push	{r7, lr}
 5093              	.LCFI215:
 5094              		.cfi_def_cfa_offset 8
 5095              		.cfi_offset 7, -8
 5096              		.cfi_offset 14, -4
 5097 0002 86B0     		sub	sp, sp, #24
 5098              	.LCFI216:
 5099              		.cfi_def_cfa_offset 32
 5100 0004 00AF     		add	r7, sp, #0
 5101              	.LCFI217:
 5102              		.cfi_def_cfa_register 7
 5103 0006 7860     		str	r0, [r7, #4]
3457:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 5104              		.loc 1 3457 0
 5105 0008 7B68     		ldr	r3, [r7, #4]
 5106 000a 3B61     		str	r3, [r7, #16]
3458:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 5107              		.loc 1 3458 0
 5108 000c 0023     		movs	r3, #0
 5109 000e 7B61     		str	r3, [r7, #20]
3459:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3460:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 5110              		.loc 1 3460 0
 5111 0010 7B68     		ldr	r3, [r7, #4]
 5112 0012 002B     		cmp	r3, #0
 5113 0014 6ED0     		beq	.L323
3461:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3463:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3464:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3465:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3466:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
 5114              		.loc 1 3466 0
 5115 0016 3A4B     		ldr	r3, .L331
 5116 0018 1B68     		ldr	r3, [r3]
 5117 001a 3A69     		ldr	r2, [r7, #16]
 5118 001c 9A42     		cmp	r2, r3
 5119 001e 09D0     		beq	.L324
 5120              	.LBB161:
 5121              	.LBB162:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5122              		.loc 2 215 0 discriminator 1
 5123              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 5124 0020 4FF05003 			mov r3, #80												
 5125 0024 83F31188 		msr basepri, r3											
 5126 0028 BFF36F8F 		isb														
 5127 002c BFF34F8F 		dsb														
 5128              	
 5129              	@ 0 "" 2
 5130              		.thumb
ARM GAS  /tmp/ccdaF48n.s 			page 155


 5131 0030 FB60     		str	r3, [r7, #12]
 5132              	.L325:
 5133              	.LBE162:
 5134              	.LBE161:
 5135              		.loc 1 3466 0 discriminator 1
 5136 0032 FEE7     		b	.L325
 5137              	.L324:
3467:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3468:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5138              		.loc 1 3468 0
 5139 0034 3B69     		ldr	r3, [r7, #16]
 5140 0036 1B6D     		ldr	r3, [r3, #80]
 5141 0038 002B     		cmp	r3, #0
 5142 003a 09D1     		bne	.L326
 5143              	.LBB163:
 5144              	.LBB164:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5145              		.loc 2 215 0 discriminator 1
 5146              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 5147 003c 4FF05003 			mov r3, #80												
 5148 0040 83F31188 		msr basepri, r3											
 5149 0044 BFF36F8F 		isb														
 5150 0048 BFF34F8F 		dsb														
 5151              	
 5152              	@ 0 "" 2
 5153              		.thumb
 5154 004c BB60     		str	r3, [r7, #8]
 5155              	.L327:
 5156              	.LBE164:
 5157              	.LBE163:
 5158              		.loc 1 3468 0 discriminator 2
 5159 004e FEE7     		b	.L327
 5160              	.L326:
3469:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5161              		.loc 1 3469 0
 5162 0050 3B69     		ldr	r3, [r7, #16]
 5163 0052 1B6D     		ldr	r3, [r3, #80]
 5164 0054 5A1E     		subs	r2, r3, #1
 5165 0056 3B69     		ldr	r3, [r7, #16]
 5166 0058 1A65     		str	r2, [r3, #80]
3470:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3472:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3473:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 5167              		.loc 1 3473 0
 5168 005a 3B69     		ldr	r3, [r7, #16]
 5169 005c DA6A     		ldr	r2, [r3, #44]
 5170 005e 3B69     		ldr	r3, [r7, #16]
 5171 0060 DB6C     		ldr	r3, [r3, #76]
 5172 0062 9A42     		cmp	r2, r3
 5173 0064 46D0     		beq	.L323
3474:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3475:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3476:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 5174              		.loc 1 3476 0
 5175 0066 3B69     		ldr	r3, [r7, #16]
 5176 0068 1B6D     		ldr	r3, [r3, #80]
ARM GAS  /tmp/ccdaF48n.s 			page 156


 5177 006a 002B     		cmp	r3, #0
 5178 006c 42D1     		bne	.L323
3477:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3478:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3479:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3480:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3481:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3482:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the	holding task from the ready	list. */
3483:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 5179              		.loc 1 3483 0
 5180 006e 3B69     		ldr	r3, [r7, #16]
 5181 0070 0433     		adds	r3, r3, #4
 5182 0072 1846     		mov	r0, r3
 5183 0074 FFF7FEFF 		bl	uxListRemove
 5184 0078 0346     		mov	r3, r0
 5185 007a 002B     		cmp	r3, #0
 5186 007c 15D1     		bne	.L328
3484:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3485:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 5187              		.loc 1 3485 0
 5188 007e 3B69     		ldr	r3, [r7, #16]
 5189 0080 DA6A     		ldr	r2, [r3, #44]
 5190 0082 2049     		ldr	r1, .L331+4
 5191 0084 1346     		mov	r3, r2
 5192 0086 9B00     		lsls	r3, r3, #2
 5193 0088 1344     		add	r3, r3, r2
 5194 008a 9B00     		lsls	r3, r3, #2
 5195 008c 0B44     		add	r3, r3, r1
 5196 008e 1B68     		ldr	r3, [r3]
 5197 0090 002B     		cmp	r3, #0
 5198 0092 0AD1     		bne	.L328
 5199              		.loc 1 3485 0 is_stmt 0 discriminator 1
 5200 0094 3B69     		ldr	r3, [r7, #16]
 5201 0096 DB6A     		ldr	r3, [r3, #44]
 5202 0098 1A46     		mov	r2, r3
 5203 009a 0123     		movs	r3, #1
 5204 009c 9340     		lsls	r3, r3, r2
 5205 009e DA43     		mvns	r2, r3
 5206 00a0 194B     		ldr	r3, .L331+8
 5207 00a2 1B68     		ldr	r3, [r3]
 5208 00a4 1340     		ands	r3, r3, r2
 5209 00a6 184A     		ldr	r2, .L331+8
 5210 00a8 1360     		str	r3, [r2]
 5211              	.L328:
3486:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3487:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3488:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3489:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3490:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3491:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3492:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3493:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3494:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3495:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 5212              		.loc 1 3495 0 is_stmt 1
 5213 00aa 3B69     		ldr	r3, [r7, #16]
 5214 00ac DA6C     		ldr	r2, [r3, #76]
ARM GAS  /tmp/ccdaF48n.s 			page 157


 5215 00ae 3B69     		ldr	r3, [r7, #16]
 5216 00b0 DA62     		str	r2, [r3, #44]
3496:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3498:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3499:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3500:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
 5217              		.loc 1 3500 0
 5218 00b2 3B69     		ldr	r3, [r7, #16]
 5219 00b4 DB6A     		ldr	r3, [r3, #44]
 5220 00b6 C3F10702 		rsb	r2, r3, #7
 5221 00ba 3B69     		ldr	r3, [r7, #16]
 5222 00bc 9A61     		str	r2, [r3, #24]
3501:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5223              		.loc 1 3501 0
 5224 00be 3B69     		ldr	r3, [r7, #16]
 5225 00c0 DB6A     		ldr	r3, [r3, #44]
 5226 00c2 1A46     		mov	r2, r3
 5227 00c4 0123     		movs	r3, #1
 5228 00c6 03FA02F2 		lsl	r2, r3, r2
 5229 00ca 0F4B     		ldr	r3, .L331+8
 5230 00cc 1B68     		ldr	r3, [r3]
 5231 00ce 1343     		orrs	r3, r3, r2
 5232 00d0 0D4A     		ldr	r2, .L331+8
 5233 00d2 1360     		str	r3, [r2]
 5234 00d4 3B69     		ldr	r3, [r7, #16]
 5235 00d6 DA6A     		ldr	r2, [r3, #44]
 5236 00d8 1346     		mov	r3, r2
 5237 00da 9B00     		lsls	r3, r3, #2
 5238 00dc 1344     		add	r3, r3, r2
 5239 00de 9B00     		lsls	r3, r3, #2
 5240 00e0 084A     		ldr	r2, .L331+4
 5241 00e2 1A44     		add	r2, r2, r3
 5242 00e4 3B69     		ldr	r3, [r7, #16]
 5243 00e6 0433     		adds	r3, r3, #4
 5244 00e8 1046     		mov	r0, r2
 5245 00ea 1946     		mov	r1, r3
 5246 00ec FFF7FEFF 		bl	vListInsertEnd
3502:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3503:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3504:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3505:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3506:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3507:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3508:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3509:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3510:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3511:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 5247              		.loc 1 3511 0
 5248 00f0 0123     		movs	r3, #1
 5249 00f2 7B61     		str	r3, [r7, #20]
 5250              	.L323:
3512:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3513:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3514:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3515:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3516:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/ccdaF48n.s 			page 158


3517:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3518:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3519:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3520:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3521:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3522:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3523:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3524:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3525:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3526:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3527:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3528:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5251              		.loc 1 3528 0
 5252 00f4 7B69     		ldr	r3, [r7, #20]
3529:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5253              		.loc 1 3529 0
 5254 00f6 1846     		mov	r0, r3
 5255 00f8 1837     		adds	r7, r7, #24
 5256              	.LCFI218:
 5257              		.cfi_def_cfa_offset 8
 5258 00fa BD46     		mov	sp, r7
 5259              	.LCFI219:
 5260              		.cfi_def_cfa_register 13
 5261              		@ sp needed
 5262 00fc 80BD     		pop	{r7, pc}
 5263              	.L332:
 5264 00fe 00BF     		.align	2
 5265              	.L331:
 5266 0100 00000000 		.word	pxCurrentTCB
 5267 0104 00000000 		.word	pxReadyTasksLists
 5268 0108 00000000 		.word	uxTopReadyPriority
 5269              		.cfi_endproc
 5270              	.LFE46:
 5272              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5273              		.align	2
 5274              		.global	uxTaskResetEventItemValue
 5275              		.thumb
 5276              		.thumb_func
 5278              	uxTaskResetEventItemValue:
 5279              	.LFB47:
3530:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3531:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3532:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3533:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3534:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3535:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3536:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
3537:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3538:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3539:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3540:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3541:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3542:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3543:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3544:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3545:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3546:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
ARM GAS  /tmp/ccdaF48n.s 			page 159


3547:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3548:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3549:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
3550:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3551:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3552:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3553:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3554:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3555:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3556:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3557:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3558:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3559:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3560:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3561:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3562:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3563:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3564:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3566:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3567:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
3568:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3569:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3570:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3571:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3572:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3573:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3574:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3576:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3577:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
3578:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3579:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3580:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3581:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3582:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3583:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3584:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3585:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3586:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3587:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3588:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3589:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3590:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3591:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3592:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3593:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3594:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3595:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3596:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3597:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3599:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3600:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3601:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3602:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t x;
3603:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 160


3604:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
3605:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3606:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
3608:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
3609:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3610:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3612:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
3615:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3616:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
3618:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
3619:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3620:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3621:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3622:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3623:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3624:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3625:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3627:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3629:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3630:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
3631:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
3633:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
3634:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3635:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3636:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3637:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
3638:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3639:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3640:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3641:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
3642:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3643:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3644:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3645:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3646:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3647:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3648:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3649:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
3650:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3651:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3652:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3653:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
3654:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
3655:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3656:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3657:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3658:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3659:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
ARM GAS  /tmp/ccdaF48n.s 			page 161


3661:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
3662:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3663:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3664:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task. */
3665:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3666:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3667:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3668:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3669:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
3670:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
3671:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3672:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
3673:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
3674:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3675:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
3676:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3677:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
3678:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3679:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3680:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
3681:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3682:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
3684:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3685:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3686:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
3687:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3688:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3689:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
3690:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
3691:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
3692:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
3693:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3694:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3695:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
3696:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
3697:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
3698:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3699:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
3700:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
3701:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
3702:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3703:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3704:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again. */
3705:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
3706:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3707:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3708:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3709:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3710:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3711:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3712:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3713:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
3714:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
3715:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3717:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 162


3718:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
3719:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3720:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3721:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3722:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
3723:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
3725:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3726:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
3727:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3728:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3729:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3730:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
3731:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
3732:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3733:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3734:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3735:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
3736:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3737:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
3738:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
3739:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
3740:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
3741:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3742:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
3743:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
3744:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
3745:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
3746:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
3747:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
3748:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
3749:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
3750:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3751:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3752:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
3753:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
3754:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3755:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3756:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3757:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3758:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3759:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
3760:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3761:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task. */
3763:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3764:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3766:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3767:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
3768:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
3769:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3770:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
3771:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
3772:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3773:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
3774:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
ARM GAS  /tmp/ccdaF48n.s 			page 163


3775:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3776:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
3777:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
3778:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3779:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
3780:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
3781:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
3782:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
3783:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3784:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
3785:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
3786:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
3787:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
3788:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3789:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
3790:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3791:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
3792:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3793:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
3794:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3795:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
3796:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3797:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
3798:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
3799:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
3800:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3801:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
3802:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3803:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3804:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3805:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
3806:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
3807:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
3808:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3809:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
3810:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3811:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
3812:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3813:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
3814:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
3815:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
3816:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3817:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
3818:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3819:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3820:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
3821:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3822:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3823:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3824:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3825:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3826:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3827:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3828:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again. */
3829:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
3830:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3831:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/ccdaF48n.s 			page 164


3832:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3833:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3834:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3835:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3836:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
3838:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3839:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3840:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
3841:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 5280              		.loc 1 3841 0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 8
 5283              		@ frame_needed = 1, uses_anonymous_args = 0
 5284              		@ link register save eliminated.
 5285 0000 80B4     		push	{r7}
 5286              	.LCFI220:
 5287              		.cfi_def_cfa_offset 4
 5288              		.cfi_offset 7, -4
 5289 0002 83B0     		sub	sp, sp, #12
 5290              	.LCFI221:
 5291              		.cfi_def_cfa_offset 16
 5292 0004 00AF     		add	r7, sp, #0
 5293              	.LCFI222:
 5294              		.cfi_def_cfa_register 7
3842:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
3843:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3844:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
 5295              		.loc 1 3844 0
 5296 0006 094B     		ldr	r3, .L335
 5297 0008 1B68     		ldr	r3, [r3]
 5298 000a 9B69     		ldr	r3, [r3, #24]
 5299 000c 7B60     		str	r3, [r7, #4]
3845:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3846:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
3847:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
3848:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
 5300              		.loc 1 3848 0
 5301 000e 074B     		ldr	r3, .L335
 5302 0010 1B68     		ldr	r3, [r3]
 5303 0012 064A     		ldr	r2, .L335
 5304 0014 1268     		ldr	r2, [r2]
 5305 0016 D26A     		ldr	r2, [r2, #44]
 5306 0018 C2F10702 		rsb	r2, r2, #7
 5307 001c 9A61     		str	r2, [r3, #24]
3849:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3850:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
 5308              		.loc 1 3850 0
 5309 001e 7B68     		ldr	r3, [r7, #4]
3851:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5310              		.loc 1 3851 0
 5311 0020 1846     		mov	r0, r3
 5312 0022 0C37     		adds	r7, r7, #12
 5313              	.LCFI223:
 5314              		.cfi_def_cfa_offset 4
 5315 0024 BD46     		mov	sp, r7
 5316              	.LCFI224:
ARM GAS  /tmp/ccdaF48n.s 			page 165


 5317              		.cfi_def_cfa_register 13
 5318              		@ sp needed
 5319 0026 5DF8047B 		ldr	r7, [sp], #4
 5320              	.LCFI225:
 5321              		.cfi_restore 7
 5322              		.cfi_def_cfa_offset 0
 5323 002a 7047     		bx	lr
 5324              	.L336:
 5325              		.align	2
 5326              	.L335:
 5327 002c 00000000 		.word	pxCurrentTCB
 5328              		.cfi_endproc
 5329              	.LFE47:
 5331              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5332              		.align	2
 5333              		.global	pvTaskIncrementMutexHeldCount
 5334              		.thumb
 5335              		.thumb_func
 5337              	pvTaskIncrementMutexHeldCount:
 5338              	.LFB48:
3852:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3853:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3855:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3856:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
3857:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5339              		.loc 1 3857 0
 5340              		.cfi_startproc
 5341              		@ args = 0, pretend = 0, frame = 0
 5342              		@ frame_needed = 1, uses_anonymous_args = 0
 5343              		@ link register save eliminated.
 5344 0000 80B4     		push	{r7}
 5345              	.LCFI226:
 5346              		.cfi_def_cfa_offset 4
 5347              		.cfi_offset 7, -4
 5348 0002 00AF     		add	r7, sp, #0
 5349              	.LCFI227:
 5350              		.cfi_def_cfa_register 7
3858:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
3859:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
3860:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
 5351              		.loc 1 3860 0
 5352 0004 074B     		ldr	r3, .L340
 5353 0006 1B68     		ldr	r3, [r3]
 5354 0008 002B     		cmp	r3, #0
 5355 000a 04D0     		beq	.L338
3861:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3862:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
 5356              		.loc 1 3862 0
 5357 000c 054B     		ldr	r3, .L340
 5358 000e 1B68     		ldr	r3, [r3]
 5359 0010 1A6D     		ldr	r2, [r3, #80]
 5360 0012 0132     		adds	r2, r2, #1
 5361 0014 1A65     		str	r2, [r3, #80]
 5362              	.L338:
3863:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3864:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 166


3865:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
 5363              		.loc 1 3865 0
 5364 0016 034B     		ldr	r3, .L340
 5365 0018 1B68     		ldr	r3, [r3]
3866:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5366              		.loc 1 3866 0
 5367 001a 1846     		mov	r0, r3
 5368 001c BD46     		mov	sp, r7
 5369              	.LCFI228:
 5370              		.cfi_def_cfa_register 13
 5371              		@ sp needed
 5372 001e 5DF8047B 		ldr	r7, [sp], #4
 5373              	.LCFI229:
 5374              		.cfi_restore 7
 5375              		.cfi_def_cfa_offset 0
 5376 0022 7047     		bx	lr
 5377              	.L341:
 5378              		.align	2
 5379              	.L340:
 5380 0024 00000000 		.word	pxCurrentTCB
 5381              		.cfi_endproc
 5382              	.LFE48:
 5384              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5385              		.align	2
 5386              		.global	ulTaskNotifyTake
 5387              		.thumb
 5388              		.thumb_func
 5390              	ulTaskNotifyTake:
 5391              	.LFB49:
3867:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3868:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3869:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3870:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3871:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
3872:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3873:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
3874:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5392              		.loc 1 3874 0
 5393              		.cfi_startproc
 5394              		@ args = 0, pretend = 0, frame = 16
 5395              		@ frame_needed = 1, uses_anonymous_args = 0
 5396 0000 80B5     		push	{r7, lr}
 5397              	.LCFI230:
 5398              		.cfi_def_cfa_offset 8
 5399              		.cfi_offset 7, -8
 5400              		.cfi_offset 14, -4
 5401 0002 84B0     		sub	sp, sp, #16
 5402              	.LCFI231:
 5403              		.cfi_def_cfa_offset 24
 5404 0004 00AF     		add	r7, sp, #0
 5405              	.LCFI232:
 5406              		.cfi_def_cfa_register 7
 5407 0006 7860     		str	r0, [r7, #4]
 5408 0008 3960     		str	r1, [r7]
3875:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
3876:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
3877:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/ccdaF48n.s 			page 167


3878:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5409              		.loc 1 3878 0
 5410 000a FFF7FEFF 		bl	vPortEnterCritical
3879:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3880:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
3881:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 5411              		.loc 1 3881 0
 5412 000e 314B     		ldr	r3, .L351
 5413 0010 1B68     		ldr	r3, [r3]
 5414 0012 5B6D     		ldr	r3, [r3, #84]
 5415 0014 002B     		cmp	r3, #0
 5416 0016 38D1     		bne	.L343
3882:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3883:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
3884:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->eNotifyState = eWaitingNotification;
 5417              		.loc 1 3884 0
 5418 0018 2E4B     		ldr	r3, .L351
 5419 001a 1B68     		ldr	r3, [r3]
 5420 001c 0122     		movs	r2, #1
 5421 001e 83F85820 		strb	r2, [r3, #88]
3885:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3886:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 5422              		.loc 1 3886 0
 5423 0022 3B68     		ldr	r3, [r7]
 5424 0024 002B     		cmp	r3, #0
 5425 0026 30D0     		beq	.L343
3887:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3888:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is going to block.  First it must be removed
3889:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from the ready list. */
3890:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 5426              		.loc 1 3890 0
 5427 0028 2A4B     		ldr	r3, .L351
 5428 002a 1B68     		ldr	r3, [r3]
 5429 002c 0433     		adds	r3, r3, #4
 5430 002e 1846     		mov	r0, r3
 5431 0030 FFF7FEFF 		bl	uxListRemove
 5432 0034 0346     		mov	r3, r0
 5433 0036 002B     		cmp	r3, #0
 5434 0038 0BD1     		bne	.L344
3891:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3892:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The current task must be in a ready list, so there is
3893:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						no need to check, and the port reset macro can be called
3894:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						directly. */
3895:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 5435              		.loc 1 3895 0
 5436 003a 264B     		ldr	r3, .L351
 5437 003c 1B68     		ldr	r3, [r3]
 5438 003e DB6A     		ldr	r3, [r3, #44]
 5439 0040 1A46     		mov	r2, r3
 5440 0042 0123     		movs	r3, #1
 5441 0044 9340     		lsls	r3, r3, r2
 5442 0046 DA43     		mvns	r2, r3
 5443 0048 234B     		ldr	r3, .L351+4
 5444 004a 1B68     		ldr	r3, [r3]
 5445 004c 1340     		ands	r3, r3, r2
 5446 004e 224A     		ldr	r2, .L351+4
 5447 0050 1360     		str	r3, [r2]
ARM GAS  /tmp/ccdaF48n.s 			page 168


 5448              	.L344:
3896:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3897:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3898:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3899:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3900:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3901:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3902:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if ( INCLUDE_vTaskSuspend == 1 )
3903:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3904:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( xTicksToWait == portMAX_DELAY )
 5449              		.loc 1 3904 0
 5450 0052 3B68     		ldr	r3, [r7]
 5451 0054 B3F1FF3F 		cmp	r3, #-1
 5452 0058 07D1     		bne	.L345
3905:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3906:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Add the task to the suspended task list instead
3907:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							of a delayed task list to ensure the task is not
3908:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken by a timing event.  It will block
3909:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							indefinitely. */
3910:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 5453              		.loc 1 3910 0
 5454 005a 1E4B     		ldr	r3, .L351
 5455 005c 1B68     		ldr	r3, [r3]
 5456 005e 0433     		adds	r3, r3, #4
 5457 0060 1E48     		ldr	r0, .L351+8
 5458 0062 1946     		mov	r1, r3
 5459 0064 FFF7FEFF 		bl	vListInsertEnd
 5460 0068 07E0     		b	.L346
 5461              	.L345:
3911:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3912:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
3913:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3914:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Calculate the time at which the task should be
3915:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken if no notification events occur.  This may
3916:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							overflow but this doesn't matter, the scheduler will
3917:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							handle it. */
3918:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xTimeToWake = xTickCount + xTicksToWait;
 5462              		.loc 1 3918 0
 5463 006a 1D4B     		ldr	r3, .L351+12
 5464 006c 1A68     		ldr	r2, [r3]
 5465 006e 3B68     		ldr	r3, [r7]
 5466 0070 1344     		add	r3, r3, r2
 5467 0072 FB60     		str	r3, [r7, #12]
3919:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							prvAddCurrentTaskToDelayedList( xTimeToWake );
 5468              		.loc 1 3919 0
 5469 0074 F868     		ldr	r0, [r7, #12]
 5470 0076 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5471              	.L346:
3920:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3921:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3922:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#else /* INCLUDE_vTaskSuspend */
3923:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3924:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Calculate the time at which the task should be
3925:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken if the event does not occur.  This may
3926:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							overflow but this doesn't matter, the scheduler will
3927:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							handle it. */
3928:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xTimeToWake = xTickCount + xTicksToWait;
ARM GAS  /tmp/ccdaF48n.s 			page 169


3929:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							prvAddCurrentTaskToDelayedList( xTimeToWake );
3930:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3931:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* INCLUDE_vTaskSuspend */
3932:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3933:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
3934:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
3935:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
3936:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
3937:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 5472              		.loc 1 3937 0
 5473 007a 1A4B     		ldr	r3, .L351+16
 5474 007c 4FF08052 		mov	r2, #268435456
 5475 0080 1A60     		str	r2, [r3]
 5476              	@ 3937 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5477 0082 BFF34F8F 		dsb
 5478              	@ 0 "" 2
 5479              	@ 3937 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5480 0086 BFF36F8F 		isb
 5481              	@ 0 "" 2
 5482              		.thumb
 5483              	.L343:
3938:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3946:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5484              		.loc 1 3949 0
 5485 008a FFF7FEFF 		bl	vPortExitCritical
3950:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3951:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5486              		.loc 1 3951 0
 5487 008e FFF7FEFF 		bl	vPortEnterCritical
3952:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3953:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5488              		.loc 1 3953 0
 5489 0092 104B     		ldr	r3, .L351
 5490 0094 1B68     		ldr	r3, [r3]
 5491 0096 5B6D     		ldr	r3, [r3, #84]
 5492 0098 BB60     		str	r3, [r7, #8]
3954:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3955:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
 5493              		.loc 1 3955 0
 5494 009a BB68     		ldr	r3, [r7, #8]
 5495 009c 002B     		cmp	r3, #0
 5496 009e 0CD0     		beq	.L347
3956:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3957:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
 5497              		.loc 1 3957 0
 5498 00a0 7B68     		ldr	r3, [r7, #4]
 5499 00a2 002B     		cmp	r3, #0
ARM GAS  /tmp/ccdaF48n.s 			page 170


 5500 00a4 04D0     		beq	.L348
3958:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3959:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
 5501              		.loc 1 3959 0
 5502 00a6 0B4B     		ldr	r3, .L351
 5503 00a8 1B68     		ldr	r3, [r3]
 5504 00aa 0022     		movs	r2, #0
 5505 00ac 5A65     		str	r2, [r3, #84]
 5506 00ae 04E0     		b	.L347
 5507              	.L348:
3960:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3961:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3962:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3963:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxCurrentTCB->ulNotifiedValue )--;
 5508              		.loc 1 3963 0
 5509 00b0 084B     		ldr	r3, .L351
 5510 00b2 1B68     		ldr	r3, [r3]
 5511 00b4 5A6D     		ldr	r2, [r3, #84]
 5512 00b6 013A     		subs	r2, r2, #1
 5513 00b8 5A65     		str	r2, [r3, #84]
 5514              	.L347:
3964:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3965:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3966:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3967:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3968:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3969:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3970:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3971:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->eNotifyState = eNotWaitingNotification;
 5515              		.loc 1 3971 0
 5516 00ba 064B     		ldr	r3, .L351
 5517 00bc 1B68     		ldr	r3, [r3]
 5518 00be 0022     		movs	r2, #0
 5519 00c0 83F85820 		strb	r2, [r3, #88]
3972:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3973:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5520              		.loc 1 3973 0
 5521 00c4 FFF7FEFF 		bl	vPortExitCritical
3974:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3975:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
 5522              		.loc 1 3975 0
 5523 00c8 BB68     		ldr	r3, [r7, #8]
3976:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5524              		.loc 1 3976 0
 5525 00ca 1846     		mov	r0, r3
 5526 00cc 1037     		adds	r7, r7, #16
 5527              	.LCFI233:
 5528              		.cfi_def_cfa_offset 8
 5529 00ce BD46     		mov	sp, r7
 5530              	.LCFI234:
 5531              		.cfi_def_cfa_register 13
 5532              		@ sp needed
 5533 00d0 80BD     		pop	{r7, pc}
 5534              	.L352:
 5535 00d2 00BF     		.align	2
 5536              	.L351:
 5537 00d4 00000000 		.word	pxCurrentTCB
ARM GAS  /tmp/ccdaF48n.s 			page 171


 5538 00d8 00000000 		.word	uxTopReadyPriority
 5539 00dc 00000000 		.word	xSuspendedTaskList
 5540 00e0 00000000 		.word	xTickCount
 5541 00e4 04ED00E0 		.word	-536810236
 5542              		.cfi_endproc
 5543              	.LFE49:
 5545              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5546              		.align	2
 5547              		.global	xTaskNotifyWait
 5548              		.thumb
 5549              		.thumb_func
 5551              	xTaskNotifyWait:
 5552              	.LFB50:
3977:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
3979:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3980:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
3982:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3983:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
3984:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5553              		.loc 1 3984 0
 5554              		.cfi_startproc
 5555              		@ args = 0, pretend = 0, frame = 24
 5556              		@ frame_needed = 1, uses_anonymous_args = 0
 5557 0000 80B5     		push	{r7, lr}
 5558              	.LCFI235:
 5559              		.cfi_def_cfa_offset 8
 5560              		.cfi_offset 7, -8
 5561              		.cfi_offset 14, -4
 5562 0002 86B0     		sub	sp, sp, #24
 5563              	.LCFI236:
 5564              		.cfi_def_cfa_offset 32
 5565 0004 00AF     		add	r7, sp, #0
 5566              	.LCFI237:
 5567              		.cfi_def_cfa_register 7
 5568 0006 F860     		str	r0, [r7, #12]
 5569 0008 B960     		str	r1, [r7, #8]
 5570 000a 7A60     		str	r2, [r7, #4]
 5571 000c 3B60     		str	r3, [r7]
3985:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
3986:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3987:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3988:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5572              		.loc 1 3988 0
 5573 000e FFF7FEFF 		bl	vPortEnterCritical
3989:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3990:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
3991:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->eNotifyState != eNotified )
 5574              		.loc 1 3991 0
 5575 0012 394B     		ldr	r3, .L362
 5576 0014 1B68     		ldr	r3, [r3]
 5577 0016 93F85830 		ldrb	r3, [r3, #88]
 5578 001a DBB2     		uxtb	r3, r3
 5579 001c 022B     		cmp	r3, #2
 5580 001e 3FD0     		beq	.L354
3992:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/ccdaF48n.s 			page 172


3993:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
3994:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
3995:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
3996:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
 5581              		.loc 1 3996 0
 5582 0020 354B     		ldr	r3, .L362
 5583 0022 1B68     		ldr	r3, [r3]
 5584 0024 596D     		ldr	r1, [r3, #84]
 5585 0026 FA68     		ldr	r2, [r7, #12]
 5586 0028 D243     		mvns	r2, r2
 5587 002a 0A40     		ands	r2, r2, r1
 5588 002c 5A65     		str	r2, [r3, #84]
3997:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3998:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
3999:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->eNotifyState = eWaitingNotification;
 5589              		.loc 1 3999 0
 5590 002e 324B     		ldr	r3, .L362
 5591 0030 1B68     		ldr	r3, [r3]
 5592 0032 0122     		movs	r2, #1
 5593 0034 83F85820 		strb	r2, [r3, #88]
4000:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 5594              		.loc 1 4001 0
 5595 0038 3B68     		ldr	r3, [r7]
 5596 003a 002B     		cmp	r3, #0
 5597 003c 30D0     		beq	.L354
4002:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4003:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is going to block.  First it must be removed
4004:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from the	ready list. */
4005:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
 5598              		.loc 1 4005 0
 5599 003e 2E4B     		ldr	r3, .L362
 5600 0040 1B68     		ldr	r3, [r3]
 5601 0042 0433     		adds	r3, r3, #4
 5602 0044 1846     		mov	r0, r3
 5603 0046 FFF7FEFF 		bl	uxListRemove
 5604 004a 0346     		mov	r3, r0
 5605 004c 002B     		cmp	r3, #0
 5606 004e 0BD1     		bne	.L355
4006:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4007:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The current task must be in a ready list, so there is
4008:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						no need to check, and the port reset macro can be called
4009:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						directly. */
4010:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
 5607              		.loc 1 4010 0
 5608 0050 294B     		ldr	r3, .L362
 5609 0052 1B68     		ldr	r3, [r3]
 5610 0054 DB6A     		ldr	r3, [r3, #44]
 5611 0056 1A46     		mov	r2, r3
 5612 0058 0123     		movs	r3, #1
 5613 005a 9340     		lsls	r3, r3, r2
 5614 005c DA43     		mvns	r2, r3
 5615 005e 274B     		ldr	r3, .L362+4
 5616 0060 1B68     		ldr	r3, [r3]
 5617 0062 1340     		ands	r3, r3, r2
 5618 0064 254A     		ldr	r2, .L362+4
 5619 0066 1360     		str	r3, [r2]
ARM GAS  /tmp/ccdaF48n.s 			page 173


 5620              	.L355:
4011:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4012:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4013:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4014:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4015:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4016:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4017:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if ( INCLUDE_vTaskSuspend == 1 )
4018:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4019:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( xTicksToWait == portMAX_DELAY )
 5621              		.loc 1 4019 0
 5622 0068 3B68     		ldr	r3, [r7]
 5623 006a B3F1FF3F 		cmp	r3, #-1
 5624 006e 07D1     		bne	.L356
4020:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4021:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Add the task to the suspended task list instead
4022:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							of a delayed task list to ensure the task is not
4023:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken by a timing event.  It will block
4024:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							indefinitely. */
4025:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xGenericListItem ) );
 5625              		.loc 1 4025 0
 5626 0070 214B     		ldr	r3, .L362
 5627 0072 1B68     		ldr	r3, [r3]
 5628 0074 0433     		adds	r3, r3, #4
 5629 0076 2248     		ldr	r0, .L362+8
 5630 0078 1946     		mov	r1, r3
 5631 007a FFF7FEFF 		bl	vListInsertEnd
 5632 007e 07E0     		b	.L357
 5633              	.L356:
4026:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4027:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4028:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Calculate the time at which the task should be
4030:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken if no notification events occur.  This may
4031:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							overflow but this doesn't matter, the scheduler will
4032:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							handle it. */
4033:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xTimeToWake = xTickCount + xTicksToWait;
 5634              		.loc 1 4033 0
 5635 0080 204B     		ldr	r3, .L362+12
 5636 0082 1A68     		ldr	r2, [r3]
 5637 0084 3B68     		ldr	r3, [r7]
 5638 0086 1344     		add	r3, r3, r2
 5639 0088 3B61     		str	r3, [r7, #16]
4034:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							prvAddCurrentTaskToDelayedList( xTimeToWake );
 5640              		.loc 1 4034 0
 5641 008a 3869     		ldr	r0, [r7, #16]
 5642 008c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5643              	.L357:
4035:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4036:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4037:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#else /* INCLUDE_vTaskSuspend */
4038:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4039:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* Calculate the time at which the task should be
4040:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							woken if the event does not occur.  This may
4041:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							overflow but this doesn't matter, the scheduler will
4042:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							handle it. */
4043:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xTimeToWake = xTickCount + xTicksToWait;
ARM GAS  /tmp/ccdaF48n.s 			page 174


4044:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							prvAddCurrentTaskToDelayedList( xTimeToWake );
4045:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4046:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* INCLUDE_vTaskSuspend */
4047:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4048:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4049:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4050:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4051:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4052:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 5644              		.loc 1 4052 0
 5645 0090 1D4B     		ldr	r3, .L362+16
 5646 0092 4FF08052 		mov	r2, #268435456
 5647 0096 1A60     		str	r2, [r3]
 5648              	@ 4052 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5649 0098 BFF34F8F 		dsb
 5650              	@ 0 "" 2
 5651              	@ 4052 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5652 009c BFF36F8F 		isb
 5653              	@ 0 "" 2
 5654              		.thumb
 5655              	.L354:
4053:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4054:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4055:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4056:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4057:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4058:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4059:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4060:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4061:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4062:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4063:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4064:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5656              		.loc 1 4064 0
 5657 00a0 FFF7FEFF 		bl	vPortExitCritical
4065:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4066:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5658              		.loc 1 4066 0
 5659 00a4 FFF7FEFF 		bl	vPortEnterCritical
4067:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4068:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
 5660              		.loc 1 4068 0
 5661 00a8 7B68     		ldr	r3, [r7, #4]
 5662 00aa 002B     		cmp	r3, #0
 5663 00ac 04D0     		beq	.L358
4069:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4070:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4071:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4072:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
 5664              		.loc 1 4072 0
 5665 00ae 124B     		ldr	r3, .L362
 5666 00b0 1B68     		ldr	r3, [r3]
 5667 00b2 5A6D     		ldr	r2, [r3, #84]
 5668 00b4 7B68     		ldr	r3, [r7, #4]
 5669 00b6 1A60     		str	r2, [r3]
 5670              	.L358:
4073:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/ccdaF48n.s 			page 175


4074:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4075:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If eNotifyValue is set then either the task never entered the
4076:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4077:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4078:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4079:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->eNotifyState == eWaitingNotification )
 5671              		.loc 1 4079 0
 5672 00b8 0F4B     		ldr	r3, .L362
 5673 00ba 1B68     		ldr	r3, [r3]
 5674 00bc 93F85830 		ldrb	r3, [r3, #88]
 5675 00c0 DBB2     		uxtb	r3, r3
 5676 00c2 012B     		cmp	r3, #1
 5677 00c4 02D1     		bne	.L359
4080:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4081:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4082:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 5678              		.loc 1 4082 0
 5679 00c6 0023     		movs	r3, #0
 5680 00c8 7B61     		str	r3, [r7, #20]
 5681 00ca 08E0     		b	.L360
 5682              	.L359:
4083:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4084:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4085:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4086:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4087:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4088:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
 5683              		.loc 1 4088 0
 5684 00cc 0A4B     		ldr	r3, .L362
 5685 00ce 1B68     		ldr	r3, [r3]
 5686 00d0 596D     		ldr	r1, [r3, #84]
 5687 00d2 BA68     		ldr	r2, [r7, #8]
 5688 00d4 D243     		mvns	r2, r2
 5689 00d6 0A40     		ands	r2, r2, r1
 5690 00d8 5A65     		str	r2, [r3, #84]
4089:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5691              		.loc 1 4089 0
 5692 00da 0123     		movs	r3, #1
 5693 00dc 7B61     		str	r3, [r7, #20]
 5694              	.L360:
4090:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4091:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->eNotifyState = eNotWaitingNotification;
 5695              		.loc 1 4092 0
 5696 00de 064B     		ldr	r3, .L362
 5697 00e0 1B68     		ldr	r3, [r3]
 5698 00e2 0022     		movs	r2, #0
 5699 00e4 83F85820 		strb	r2, [r3, #88]
4093:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4094:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5700              		.loc 1 4094 0
 5701 00e8 FFF7FEFF 		bl	vPortExitCritical
4095:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5702              		.loc 1 4096 0
 5703 00ec 7B69     		ldr	r3, [r7, #20]
4097:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/ccdaF48n.s 			page 176


 5704              		.loc 1 4097 0
 5705 00ee 1846     		mov	r0, r3
 5706 00f0 1837     		adds	r7, r7, #24
 5707              	.LCFI238:
 5708              		.cfi_def_cfa_offset 8
 5709 00f2 BD46     		mov	sp, r7
 5710              	.LCFI239:
 5711              		.cfi_def_cfa_register 13
 5712              		@ sp needed
 5713 00f4 80BD     		pop	{r7, pc}
 5714              	.L363:
 5715 00f6 00BF     		.align	2
 5716              	.L362:
 5717 00f8 00000000 		.word	pxCurrentTCB
 5718 00fc 00000000 		.word	uxTopReadyPriority
 5719 0100 00000000 		.word	xSuspendedTaskList
 5720 0104 00000000 		.word	xTickCount
 5721 0108 04ED00E0 		.word	-536810236
 5722              		.cfi_endproc
 5723              	.LFE50:
 5725              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5726              		.align	2
 5727              		.global	xTaskGenericNotify
 5728              		.thumb
 5729              		.thumb_func
 5731              	xTaskGenericNotify:
 5732              	.LFB51:
4098:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4100:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4103:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4105:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5733              		.loc 1 4105 0
 5734              		.cfi_startproc
 5735              		@ args = 0, pretend = 0, frame = 40
 5736              		@ frame_needed = 1, uses_anonymous_args = 0
 5737 0000 80B5     		push	{r7, lr}
 5738              	.LCFI240:
 5739              		.cfi_def_cfa_offset 8
 5740              		.cfi_offset 7, -8
 5741              		.cfi_offset 14, -4
 5742 0002 8AB0     		sub	sp, sp, #40
 5743              	.LCFI241:
 5744              		.cfi_def_cfa_offset 48
 5745 0004 00AF     		add	r7, sp, #0
 5746              	.LCFI242:
 5747              		.cfi_def_cfa_register 7
 5748 0006 F860     		str	r0, [r7, #12]
 5749 0008 B960     		str	r1, [r7, #8]
 5750 000a 3B60     		str	r3, [r7]
 5751 000c 1346     		mov	r3, r2
 5752 000e FB71     		strb	r3, [r7, #7]
4106:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4107:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eNotifyValue eOriginalNotifyState;
ARM GAS  /tmp/ccdaF48n.s 			page 177


4108:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5753              		.loc 1 4108 0
 5754 0010 0123     		movs	r3, #1
 5755 0012 7B62     		str	r3, [r7, #36]
4109:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4110:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 5756              		.loc 1 4110 0
 5757 0014 FB68     		ldr	r3, [r7, #12]
 5758 0016 002B     		cmp	r3, #0
 5759 0018 09D1     		bne	.L365
 5760              	.LBB165:
 5761              	.LBB166:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5762              		.loc 2 215 0 discriminator 1
 5763              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 5764 001a 4FF05003 			mov r3, #80												
 5765 001e 83F31188 		msr basepri, r3											
 5766 0022 BFF36F8F 		isb														
 5767 0026 BFF34F8F 		dsb														
 5768              	
 5769              	@ 0 "" 2
 5770              		.thumb
 5771 002a BB61     		str	r3, [r7, #24]
 5772              	.L366:
 5773              	.LBE166:
 5774              	.LBE165:
 5775              		.loc 1 4110 0 discriminator 1
 5776 002c FEE7     		b	.L366
 5777              	.L365:
4111:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 5778              		.loc 1 4111 0
 5779 002e FB68     		ldr	r3, [r7, #12]
 5780 0030 3B62     		str	r3, [r7, #32]
4112:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4113:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5781              		.loc 1 4113 0
 5782 0032 FFF7FEFF 		bl	vPortEnterCritical
4114:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4115:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 5783              		.loc 1 4115 0
 5784 0036 3B68     		ldr	r3, [r7]
 5785 0038 002B     		cmp	r3, #0
 5786 003a 03D0     		beq	.L367
4116:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4117:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 5787              		.loc 1 4117 0
 5788 003c 3B6A     		ldr	r3, [r7, #32]
 5789 003e 5A6D     		ldr	r2, [r3, #84]
 5790 0040 3B68     		ldr	r3, [r7]
 5791 0042 1A60     		str	r2, [r3]
 5792              	.L367:
4118:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4119:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4120:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eOriginalNotifyState = pxTCB->eNotifyState;
 5793              		.loc 1 4120 0
 5794 0044 3B6A     		ldr	r3, [r7, #32]
 5795 0046 93F85830 		ldrb	r3, [r3, #88]
ARM GAS  /tmp/ccdaF48n.s 			page 178


 5796 004a FB77     		strb	r3, [r7, #31]
4121:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->eNotifyState = eNotified;
 5797              		.loc 1 4122 0
 5798 004c 3B6A     		ldr	r3, [r7, #32]
 5799 004e 0222     		movs	r2, #2
 5800 0050 83F85820 		strb	r2, [r3, #88]
4123:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4124:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 5801              		.loc 1 4124 0
 5802 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5803 0056 042B     		cmp	r3, #4
 5804 0058 27D8     		bhi	.L368
 5805 005a 01A2     		adr	r2, .L370
 5806 005c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5807              		.p2align 2
 5808              	.L370:
 5809 0060 AB000000 		.word	.L368+1
 5810 0064 75000000 		.word	.L371+1
 5811 0068 83000000 		.word	.L372+1
 5812 006c 8F000000 		.word	.L373+1
 5813 0070 97000000 		.word	.L374+1
 5814              		.p2align 1
 5815              	.L371:
4125:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4126:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4127:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 5816              		.loc 1 4127 0
 5817 0074 3B6A     		ldr	r3, [r7, #32]
 5818 0076 5A6D     		ldr	r2, [r3, #84]
 5819 0078 BB68     		ldr	r3, [r7, #8]
 5820 007a 1A43     		orrs	r2, r2, r3
 5821 007c 3B6A     		ldr	r3, [r7, #32]
 5822 007e 5A65     		str	r2, [r3, #84]
4128:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5823              		.loc 1 4128 0
 5824 0080 13E0     		b	.L368
 5825              	.L372:
4129:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4130:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4131:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 5826              		.loc 1 4131 0
 5827 0082 3B6A     		ldr	r3, [r7, #32]
 5828 0084 5B6D     		ldr	r3, [r3, #84]
 5829 0086 5A1C     		adds	r2, r3, #1
 5830 0088 3B6A     		ldr	r3, [r7, #32]
 5831 008a 5A65     		str	r2, [r3, #84]
4132:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5832              		.loc 1 4132 0
 5833 008c 0DE0     		b	.L368
 5834              	.L373:
4133:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4135:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 5835              		.loc 1 4135 0
 5836 008e 3B6A     		ldr	r3, [r7, #32]
 5837 0090 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccdaF48n.s 			page 179


 5838 0092 5A65     		str	r2, [r3, #84]
4136:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5839              		.loc 1 4136 0
 5840 0094 09E0     		b	.L368
 5841              	.L374:
4137:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4138:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4139:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eOriginalNotifyState != eNotified )
 5842              		.loc 1 4139 0
 5843 0096 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5844 0098 022B     		cmp	r3, #2
 5845 009a 03D0     		beq	.L375
4140:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4141:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 5846              		.loc 1 4141 0
 5847 009c 3B6A     		ldr	r3, [r7, #32]
 5848 009e BA68     		ldr	r2, [r7, #8]
 5849 00a0 5A65     		str	r2, [r3, #84]
4142:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4143:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4144:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4145:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4147:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4148:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5850              		.loc 1 4148 0
 5851 00a2 01E0     		b	.L381
 5852              	.L375:
4146:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5853              		.loc 1 4146 0
 5854 00a4 0023     		movs	r3, #0
 5855 00a6 7B62     		str	r3, [r7, #36]
 5856              	.L381:
 5857              		.loc 1 4148 0
 5858 00a8 00BF     		nop
 5859              	.L368:
4149:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4150:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4151:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4152:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4153:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4154:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4155:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4156:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4157:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4158:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4159:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eOriginalNotifyState == eWaitingNotification )
 5860              		.loc 1 4159 0
 5861 00aa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5862 00ac 012B     		cmp	r3, #1
 5863 00ae 3AD1     		bne	.L377
4160:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4161:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 5864              		.loc 1 4161 0
 5865 00b0 3B6A     		ldr	r3, [r7, #32]
 5866 00b2 0433     		adds	r3, r3, #4
 5867 00b4 1846     		mov	r0, r3
ARM GAS  /tmp/ccdaF48n.s 			page 180


 5868 00b6 FFF7FEFF 		bl	uxListRemove
4162:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5869              		.loc 1 4162 0
 5870 00ba 3B6A     		ldr	r3, [r7, #32]
 5871 00bc DB6A     		ldr	r3, [r3, #44]
 5872 00be 1A46     		mov	r2, r3
 5873 00c0 0123     		movs	r3, #1
 5874 00c2 03FA02F2 		lsl	r2, r3, r2
 5875 00c6 1B4B     		ldr	r3, .L382
 5876 00c8 1B68     		ldr	r3, [r3]
 5877 00ca 1343     		orrs	r3, r3, r2
 5878 00cc 194A     		ldr	r2, .L382
 5879 00ce 1360     		str	r3, [r2]
 5880 00d0 3B6A     		ldr	r3, [r7, #32]
 5881 00d2 DA6A     		ldr	r2, [r3, #44]
 5882 00d4 1346     		mov	r3, r2
 5883 00d6 9B00     		lsls	r3, r3, #2
 5884 00d8 1344     		add	r3, r3, r2
 5885 00da 9B00     		lsls	r3, r3, #2
 5886 00dc 164A     		ldr	r2, .L382+4
 5887 00de 1A44     		add	r2, r2, r3
 5888 00e0 3B6A     		ldr	r3, [r7, #32]
 5889 00e2 0433     		adds	r3, r3, #4
 5890 00e4 1046     		mov	r0, r2
 5891 00e6 1946     		mov	r1, r3
 5892 00e8 FFF7FEFF 		bl	vListInsertEnd
4163:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4164:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4165:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 5893              		.loc 1 4165 0
 5894 00ec 3B6A     		ldr	r3, [r7, #32]
 5895 00ee 9B6A     		ldr	r3, [r3, #40]
 5896 00f0 002B     		cmp	r3, #0
 5897 00f2 09D0     		beq	.L378
 5898              	.LBB167:
 5899              	.LBB168:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5900              		.loc 2 215 0 discriminator 1
 5901              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 5902 00f4 4FF05003 			mov r3, #80												
 5903 00f8 83F31188 		msr basepri, r3											
 5904 00fc BFF36F8F 		isb														
 5905 0100 BFF34F8F 		dsb														
 5906              	
 5907              	@ 0 "" 2
 5908              		.thumb
 5909 0104 7B61     		str	r3, [r7, #20]
 5910              	.L379:
 5911              	.LBE168:
 5912              	.LBE167:
 5913              		.loc 1 4165 0 discriminator 2
 5914 0106 FEE7     		b	.L379
 5915              	.L378:
4166:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4167:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 5916              		.loc 1 4167 0
 5917 0108 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccdaF48n.s 			page 181


 5918 010a DA6A     		ldr	r2, [r3, #44]
 5919 010c 0B4B     		ldr	r3, .L382+8
 5920 010e 1B68     		ldr	r3, [r3]
 5921 0110 DB6A     		ldr	r3, [r3, #44]
 5922 0112 9A42     		cmp	r2, r3
 5923 0114 07D9     		bls	.L377
4168:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4169:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4170:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4171:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 5924              		.loc 1 4171 0
 5925 0116 0A4B     		ldr	r3, .L382+12
 5926 0118 4FF08052 		mov	r2, #268435456
 5927 011c 1A60     		str	r2, [r3]
 5928              	@ 4171 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5929 011e BFF34F8F 		dsb
 5930              	@ 0 "" 2
 5931              	@ 4171 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thi
 5932 0122 BFF36F8F 		isb
 5933              	@ 0 "" 2
 5934              		.thumb
 5935              	.L377:
4172:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4173:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4174:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4175:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4176:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4177:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4178:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4179:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4180:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4181:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4182:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4183:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5936              		.loc 1 4183 0
 5937 0126 FFF7FEFF 		bl	vPortExitCritical
4184:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4185:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5938              		.loc 1 4185 0
 5939 012a 7B6A     		ldr	r3, [r7, #36]
4186:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5940              		.loc 1 4186 0
 5941 012c 1846     		mov	r0, r3
 5942 012e 2837     		adds	r7, r7, #40
 5943              	.LCFI243:
 5944              		.cfi_def_cfa_offset 8
 5945 0130 BD46     		mov	sp, r7
 5946              	.LCFI244:
 5947              		.cfi_def_cfa_register 13
 5948              		@ sp needed
 5949 0132 80BD     		pop	{r7, pc}
 5950              	.L383:
 5951              		.align	2
 5952              	.L382:
 5953 0134 00000000 		.word	uxTopReadyPriority
 5954 0138 00000000 		.word	pxReadyTasksLists
 5955 013c 00000000 		.word	pxCurrentTCB
ARM GAS  /tmp/ccdaF48n.s 			page 182


 5956 0140 04ED00E0 		.word	-536810236
 5957              		.cfi_endproc
 5958              	.LFE51:
 5960              		.section	.text.xTaskNotifyFromISR,"ax",%progbits
 5961              		.align	2
 5962              		.global	xTaskNotifyFromISR
 5963              		.thumb
 5964              		.thumb_func
 5966              	xTaskNotifyFromISR:
 5967              	.LFB52:
4187:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4188:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4189:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4190:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4192:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4193:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4194:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 5968              		.loc 1 4194 0
 5969              		.cfi_startproc
 5970              		@ args = 0, pretend = 0, frame = 56
 5971              		@ frame_needed = 1, uses_anonymous_args = 0
 5972 0000 80B5     		push	{r7, lr}
 5973              	.LCFI245:
 5974              		.cfi_def_cfa_offset 8
 5975              		.cfi_offset 7, -8
 5976              		.cfi_offset 14, -4
 5977 0002 8EB0     		sub	sp, sp, #56
 5978              	.LCFI246:
 5979              		.cfi_def_cfa_offset 64
 5980 0004 00AF     		add	r7, sp, #0
 5981              	.LCFI247:
 5982              		.cfi_def_cfa_register 7
 5983 0006 F860     		str	r0, [r7, #12]
 5984 0008 B960     		str	r1, [r7, #8]
 5985 000a 3B60     		str	r3, [r7]
 5986 000c 1346     		mov	r3, r2
 5987 000e FB71     		strb	r3, [r7, #7]
4195:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4196:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eNotifyValue eOriginalNotifyState;
4197:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5988              		.loc 1 4197 0
 5989 0010 0123     		movs	r3, #1
 5990 0012 7B63     		str	r3, [r7, #52]
4198:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4199:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4200:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 5991              		.loc 1 4200 0
 5992 0014 FB68     		ldr	r3, [r7, #12]
 5993 0016 002B     		cmp	r3, #0
 5994 0018 09D1     		bne	.L385
 5995              	.LBB169:
 5996              	.LBB170:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5997              		.loc 2 215 0 discriminator 1
 5998              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 5999 001a 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccdaF48n.s 			page 183


 6000 001e 83F31188 		msr basepri, r3											
 6001 0022 BFF36F8F 		isb														
 6002 0026 BFF34F8F 		dsb														
 6003              	
 6004              	@ 0 "" 2
 6005              		.thumb
 6006 002a 7B62     		str	r3, [r7, #36]
 6007              	.L386:
 6008              	.LBE170:
 6009              	.LBE169:
 6010              		.loc 1 4200 0 discriminator 1
 6011 002c FEE7     		b	.L386
 6012              	.L385:
4201:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4202:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4203:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4204:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4205:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4206:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4207:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4208:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4209:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4210:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4211:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4212:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4213:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4214:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4216:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4217:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4218:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 6013              		.loc 1 4218 0
 6014 002e FFF7FEFF 		bl	vPortValidateInterruptPriority
4219:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4220:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 6015              		.loc 1 4220 0
 6016 0032 FB68     		ldr	r3, [r7, #12]
 6017 0034 3B63     		str	r3, [r7, #48]
 6018              	.LBB171:
 6019              	.LBB172:
 231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6020              		.loc 2 231 0
 6021              	@ 231 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6022 0036 EFF31182 			mrs r2, basepri											
 6023 003a 4FF05003 		mov r3, #80												
 6024 003e 83F31188 		msr basepri, r3											
 6025 0042 BFF36F8F 		isb														
 6026 0046 BFF34F8F 		dsb														
 6027              	
 6028              	@ 0 "" 2
 6029              		.thumb
 6030 004a 3A62     		str	r2, [r7, #32]
 6031 004c FB61     		str	r3, [r7, #28]
 243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6032              		.loc 2 243 0
 6033 004e 3B6A     		ldr	r3, [r7, #32]
 6034              	.LBE172:
ARM GAS  /tmp/ccdaF48n.s 			page 184


 6035              	.LBE171:
4221:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4222:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 6036              		.loc 1 4222 0
 6037 0050 FB62     		str	r3, [r7, #44]
4223:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4224:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eOriginalNotifyState = pxTCB->eNotifyState;
 6038              		.loc 1 4224 0
 6039 0052 3B6B     		ldr	r3, [r7, #48]
 6040 0054 93F85830 		ldrb	r3, [r3, #88]
 6041 0058 87F82B30 		strb	r3, [r7, #43]
4225:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4226:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->eNotifyState = eNotified;
 6042              		.loc 1 4226 0
 6043 005c 3B6B     		ldr	r3, [r7, #48]
 6044 005e 0222     		movs	r2, #2
 6045 0060 83F85820 		strb	r2, [r3, #88]
4227:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4228:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 6046              		.loc 1 4228 0
 6047 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6048 0066 042B     		cmp	r3, #4
 6049 0068 28D8     		bhi	.L388
 6050 006a 01A2     		adr	r2, .L390
 6051 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6052              		.p2align 2
 6053              	.L390:
 6054 0070 BD000000 		.word	.L388+1
 6055 0074 85000000 		.word	.L391+1
 6056 0078 93000000 		.word	.L392+1
 6057 007c 9F000000 		.word	.L393+1
 6058 0080 A7000000 		.word	.L394+1
 6059              		.p2align 1
 6060              	.L391:
4229:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4230:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 6061              		.loc 1 4231 0
 6062 0084 3B6B     		ldr	r3, [r7, #48]
 6063 0086 5A6D     		ldr	r2, [r3, #84]
 6064 0088 BB68     		ldr	r3, [r7, #8]
 6065 008a 1A43     		orrs	r2, r2, r3
 6066 008c 3B6B     		ldr	r3, [r7, #48]
 6067 008e 5A65     		str	r2, [r3, #84]
4232:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6068              		.loc 1 4232 0
 6069 0090 14E0     		b	.L388
 6070              	.L392:
4233:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4234:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4235:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 6071              		.loc 1 4235 0
 6072 0092 3B6B     		ldr	r3, [r7, #48]
 6073 0094 5B6D     		ldr	r3, [r3, #84]
 6074 0096 5A1C     		adds	r2, r3, #1
 6075 0098 3B6B     		ldr	r3, [r7, #48]
 6076 009a 5A65     		str	r2, [r3, #84]
ARM GAS  /tmp/ccdaF48n.s 			page 185


4236:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6077              		.loc 1 4236 0
 6078 009c 0EE0     		b	.L388
 6079              	.L393:
4237:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4238:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4239:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 6080              		.loc 1 4239 0
 6081 009e 3B6B     		ldr	r3, [r7, #48]
 6082 00a0 BA68     		ldr	r2, [r7, #8]
 6083 00a2 5A65     		str	r2, [r3, #84]
4240:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6084              		.loc 1 4240 0
 6085 00a4 0AE0     		b	.L388
 6086              	.L394:
4241:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4242:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eOriginalNotifyState != eNotified )
 6087              		.loc 1 4243 0
 6088 00a6 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 6089 00aa 022B     		cmp	r3, #2
 6090 00ac 03D0     		beq	.L395
4244:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4245:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 6091              		.loc 1 4245 0
 6092 00ae 3B6B     		ldr	r3, [r7, #48]
 6093 00b0 BA68     		ldr	r2, [r7, #8]
 6094 00b2 5A65     		str	r2, [r3, #84]
4246:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4247:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4248:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4251:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4252:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 6095              		.loc 1 4252 0
 6096 00b4 01E0     		b	.L404
 6097              	.L395:
4250:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6098              		.loc 1 4250 0
 6099 00b6 0023     		movs	r3, #0
 6100 00b8 7B63     		str	r3, [r7, #52]
 6101              	.L404:
 6102              		.loc 1 4252 0
 6103 00ba 00BF     		nop
 6104              	.L388:
4253:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4254:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4255:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4256:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4257:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4258:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4259:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4260:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4262:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4263:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eOriginalNotifyState == eWaitingNotification )
ARM GAS  /tmp/ccdaF48n.s 			page 186


 6105              		.loc 1 4263 0
 6106 00bc 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 6107 00c0 012B     		cmp	r3, #1
 6108 00c2 43D1     		bne	.L397
4264:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4265:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4266:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6109              		.loc 1 4266 0
 6110 00c4 3B6B     		ldr	r3, [r7, #48]
 6111 00c6 9B6A     		ldr	r3, [r3, #40]
 6112 00c8 002B     		cmp	r3, #0
 6113 00ca 09D0     		beq	.L398
 6114              	.LBB173:
 6115              	.LBB174:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6116              		.loc 2 215 0 discriminator 1
 6117              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6118 00cc 4FF05003 			mov r3, #80												
 6119 00d0 83F31188 		msr basepri, r3											
 6120 00d4 BFF36F8F 		isb														
 6121 00d8 BFF34F8F 		dsb														
 6122              	
 6123              	@ 0 "" 2
 6124              		.thumb
 6125 00dc BB61     		str	r3, [r7, #24]
 6126              	.L399:
 6127              	.LBE174:
 6128              	.LBE173:
 6129              		.loc 1 4266 0 discriminator 2
 6130 00de FEE7     		b	.L399
 6131              	.L398:
4267:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4268:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 6132              		.loc 1 4268 0
 6133 00e0 1F4B     		ldr	r3, .L405
 6134 00e2 1B68     		ldr	r3, [r3]
 6135 00e4 002B     		cmp	r3, #0
 6136 00e6 1ED1     		bne	.L400
4269:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 6137              		.loc 1 4270 0
 6138 00e8 3B6B     		ldr	r3, [r7, #48]
 6139 00ea 0433     		adds	r3, r3, #4
 6140 00ec 1846     		mov	r0, r3
 6141 00ee FFF7FEFF 		bl	uxListRemove
4271:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6142              		.loc 1 4271 0
 6143 00f2 3B6B     		ldr	r3, [r7, #48]
 6144 00f4 DB6A     		ldr	r3, [r3, #44]
 6145 00f6 1A46     		mov	r2, r3
 6146 00f8 0123     		movs	r3, #1
 6147 00fa 03FA02F2 		lsl	r2, r3, r2
 6148 00fe 194B     		ldr	r3, .L405+4
 6149 0100 1B68     		ldr	r3, [r3]
 6150 0102 1343     		orrs	r3, r3, r2
 6151 0104 174A     		ldr	r2, .L405+4
 6152 0106 1360     		str	r3, [r2]
ARM GAS  /tmp/ccdaF48n.s 			page 187


 6153 0108 3B6B     		ldr	r3, [r7, #48]
 6154 010a DA6A     		ldr	r2, [r3, #44]
 6155 010c 1346     		mov	r3, r2
 6156 010e 9B00     		lsls	r3, r3, #2
 6157 0110 1344     		add	r3, r3, r2
 6158 0112 9B00     		lsls	r3, r3, #2
 6159 0114 144A     		ldr	r2, .L405+8
 6160 0116 1A44     		add	r2, r2, r3
 6161 0118 3B6B     		ldr	r3, [r7, #48]
 6162 011a 0433     		adds	r3, r3, #4
 6163 011c 1046     		mov	r0, r2
 6164 011e 1946     		mov	r1, r3
 6165 0120 FFF7FEFF 		bl	vListInsertEnd
 6166 0124 05E0     		b	.L401
 6167              	.L400:
4272:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4273:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4274:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4275:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4276:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4277:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 6168              		.loc 1 4277 0
 6169 0126 3B6B     		ldr	r3, [r7, #48]
 6170 0128 1833     		adds	r3, r3, #24
 6171 012a 1048     		ldr	r0, .L405+12
 6172 012c 1946     		mov	r1, r3
 6173 012e FFF7FEFF 		bl	vListInsertEnd
 6174              	.L401:
4278:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4279:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4280:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6175              		.loc 1 4280 0
 6176 0132 3B6B     		ldr	r3, [r7, #48]
 6177 0134 DA6A     		ldr	r2, [r3, #44]
 6178 0136 0E4B     		ldr	r3, .L405+16
 6179 0138 1B68     		ldr	r3, [r3]
 6180 013a DB6A     		ldr	r3, [r3, #44]
 6181 013c 9A42     		cmp	r2, r3
 6182 013e 05D9     		bls	.L397
4281:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4282:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4283:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4284:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 6183              		.loc 1 4284 0
 6184 0140 3B68     		ldr	r3, [r7]
 6185 0142 002B     		cmp	r3, #0
 6186 0144 02D0     		beq	.L397
4285:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4286:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 6187              		.loc 1 4286 0
 6188 0146 3B68     		ldr	r3, [r7]
 6189 0148 0122     		movs	r2, #1
 6190 014a 1A60     		str	r2, [r3]
 6191              	.L397:
 6192 014c FB6A     		ldr	r3, [r7, #44]
 6193 014e 7B61     		str	r3, [r7, #20]
 6194              	.LBB175:
ARM GAS  /tmp/ccdaF48n.s 			page 188


 6195              	.LBB176:
 6196              		.loc 2 249 0
 6197 0150 7B69     		ldr	r3, [r7, #20]
 6198              	@ 249 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6199 0152 83F31188 			msr basepri, r3	
 6200              	@ 0 "" 2
 6201              		.thumb
 6202              	.LBE176:
 6203              	.LBE175:
4287:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4288:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4289:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4290:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4291:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4292:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4293:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4294:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4295:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4296:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6204              		.loc 1 4297 0
 6205 0156 7B6B     		ldr	r3, [r7, #52]
4298:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6206              		.loc 1 4298 0
 6207 0158 1846     		mov	r0, r3
 6208 015a 3837     		adds	r7, r7, #56
 6209              	.LCFI248:
 6210              		.cfi_def_cfa_offset 8
 6211 015c BD46     		mov	sp, r7
 6212              	.LCFI249:
 6213              		.cfi_def_cfa_register 13
 6214              		@ sp needed
 6215 015e 80BD     		pop	{r7, pc}
 6216              	.L406:
 6217              		.align	2
 6218              	.L405:
 6219 0160 00000000 		.word	uxSchedulerSuspended
 6220 0164 00000000 		.word	uxTopReadyPriority
 6221 0168 00000000 		.word	pxReadyTasksLists
 6222 016c 00000000 		.word	xPendingReadyList
 6223 0170 00000000 		.word	pxCurrentTCB
 6224              		.cfi_endproc
 6225              	.LFE52:
 6227              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6228              		.align	2
 6229              		.global	vTaskNotifyGiveFromISR
 6230              		.thumb
 6231              		.thumb_func
 6233              	vTaskNotifyGiveFromISR:
 6234              	.LFB53:
4299:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4301:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4302:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4303:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4304:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
ARM GAS  /tmp/ccdaF48n.s 			page 189


4306:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 6235              		.loc 1 4306 0
 6236              		.cfi_startproc
 6237              		@ args = 0, pretend = 0, frame = 40
 6238              		@ frame_needed = 1, uses_anonymous_args = 0
 6239 0000 80B5     		push	{r7, lr}
 6240              	.LCFI250:
 6241              		.cfi_def_cfa_offset 8
 6242              		.cfi_offset 7, -8
 6243              		.cfi_offset 14, -4
 6244 0002 8AB0     		sub	sp, sp, #40
 6245              	.LCFI251:
 6246              		.cfi_def_cfa_offset 48
 6247 0004 00AF     		add	r7, sp, #0
 6248              	.LCFI252:
 6249              		.cfi_def_cfa_register 7
 6250 0006 7860     		str	r0, [r7, #4]
 6251 0008 3960     		str	r1, [r7]
4307:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4308:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eNotifyValue eOriginalNotifyState;
4309:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4310:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4311:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 6252              		.loc 1 4311 0
 6253 000a 7B68     		ldr	r3, [r7, #4]
 6254 000c 002B     		cmp	r3, #0
 6255 000e 09D1     		bne	.L408
 6256              	.LBB177:
 6257              	.LBB178:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6258              		.loc 2 215 0 discriminator 1
 6259              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6260 0010 4FF05003 			mov r3, #80												
 6261 0014 83F31188 		msr basepri, r3											
 6262 0018 BFF36F8F 		isb														
 6263 001c BFF34F8F 		dsb														
 6264              	
 6265              	@ 0 "" 2
 6266              		.thumb
 6267 0020 BB61     		str	r3, [r7, #24]
 6268              	.L409:
 6269              	.LBE178:
 6270              	.LBE177:
 6271              		.loc 1 4311 0 discriminator 1
 6272 0022 FEE7     		b	.L409
 6273              	.L408:
4312:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4313:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4314:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4315:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4316:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4317:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4318:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4319:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4320:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4321:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4322:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
ARM GAS  /tmp/ccdaF48n.s 			page 190


4323:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4324:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4325:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4326:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4327:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4328:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4329:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 6274              		.loc 1 4329 0
 6275 0024 FFF7FEFF 		bl	vPortValidateInterruptPriority
4330:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4331:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 6276              		.loc 1 4331 0
 6277 0028 7B68     		ldr	r3, [r7, #4]
 6278 002a 7B62     		str	r3, [r7, #36]
 6279              	.LBB179:
 6280              	.LBB180:
 231:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6281              		.loc 2 231 0
 6282              	@ 231 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6283 002c EFF31182 			mrs r2, basepri											
 6284 0030 4FF05003 		mov r3, #80												
 6285 0034 83F31188 		msr basepri, r3											
 6286 0038 BFF36F8F 		isb														
 6287 003c BFF34F8F 		dsb														
 6288              	
 6289              	@ 0 "" 2
 6290              		.thumb
 6291 0040 7A61     		str	r2, [r7, #20]
 6292 0042 3B61     		str	r3, [r7, #16]
 243:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6293              		.loc 2 243 0
 6294 0044 7B69     		ldr	r3, [r7, #20]
 6295              	.LBE180:
 6296              	.LBE179:
4332:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4333:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 6297              		.loc 1 4333 0
 6298 0046 3B62     		str	r3, [r7, #32]
4334:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4335:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eOriginalNotifyState = pxTCB->eNotifyState;
 6299              		.loc 1 4335 0
 6300 0048 7B6A     		ldr	r3, [r7, #36]
 6301 004a 93F85830 		ldrb	r3, [r3, #88]
 6302 004e FB77     		strb	r3, [r7, #31]
4336:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->eNotifyState = eNotified;
 6303              		.loc 1 4336 0
 6304 0050 7B6A     		ldr	r3, [r7, #36]
 6305 0052 0222     		movs	r2, #2
 6306 0054 83F85820 		strb	r2, [r3, #88]
4337:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4338:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4339:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4340:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
 6307              		.loc 1 4340 0
 6308 0058 7B6A     		ldr	r3, [r7, #36]
 6309 005a 5B6D     		ldr	r3, [r3, #84]
 6310 005c 5A1C     		adds	r2, r3, #1
ARM GAS  /tmp/ccdaF48n.s 			page 191


 6311 005e 7B6A     		ldr	r3, [r7, #36]
 6312 0060 5A65     		str	r2, [r3, #84]
4341:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4342:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4343:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4344:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eOriginalNotifyState == eWaitingNotification )
 6313              		.loc 1 4344 0
 6314 0062 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6315 0064 012B     		cmp	r3, #1
 6316 0066 43D1     		bne	.L411
4345:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4346:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4347:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6317              		.loc 1 4347 0
 6318 0068 7B6A     		ldr	r3, [r7, #36]
 6319 006a 9B6A     		ldr	r3, [r3, #40]
 6320 006c 002B     		cmp	r3, #0
 6321 006e 09D0     		beq	.L412
 6322              	.LBB181:
 6323              	.LBB182:
 215:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6324              		.loc 2 215 0 discriminator 1
 6325              	@ 215 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6326 0070 4FF05003 			mov r3, #80												
 6327 0074 83F31188 		msr basepri, r3											
 6328 0078 BFF36F8F 		isb														
 6329 007c BFF34F8F 		dsb														
 6330              	
 6331              	@ 0 "" 2
 6332              		.thumb
 6333 0080 FB60     		str	r3, [r7, #12]
 6334              	.L413:
 6335              	.LBE182:
 6336              	.LBE181:
 6337              		.loc 1 4347 0 discriminator 2
 6338 0082 FEE7     		b	.L413
 6339              	.L412:
4348:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4349:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 6340              		.loc 1 4349 0
 6341 0084 1E4B     		ldr	r3, .L417
 6342 0086 1B68     		ldr	r3, [r3]
 6343 0088 002B     		cmp	r3, #0
 6344 008a 1ED1     		bne	.L414
4350:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4351:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
 6345              		.loc 1 4351 0
 6346 008c 7B6A     		ldr	r3, [r7, #36]
 6347 008e 0433     		adds	r3, r3, #4
 6348 0090 1846     		mov	r0, r3
 6349 0092 FFF7FEFF 		bl	uxListRemove
4352:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6350              		.loc 1 4352 0
 6351 0096 7B6A     		ldr	r3, [r7, #36]
 6352 0098 DB6A     		ldr	r3, [r3, #44]
 6353 009a 1A46     		mov	r2, r3
 6354 009c 0123     		movs	r3, #1
ARM GAS  /tmp/ccdaF48n.s 			page 192


 6355 009e 03FA02F2 		lsl	r2, r3, r2
 6356 00a2 184B     		ldr	r3, .L417+4
 6357 00a4 1B68     		ldr	r3, [r3]
 6358 00a6 1343     		orrs	r3, r3, r2
 6359 00a8 164A     		ldr	r2, .L417+4
 6360 00aa 1360     		str	r3, [r2]
 6361 00ac 7B6A     		ldr	r3, [r7, #36]
 6362 00ae DA6A     		ldr	r2, [r3, #44]
 6363 00b0 1346     		mov	r3, r2
 6364 00b2 9B00     		lsls	r3, r3, #2
 6365 00b4 1344     		add	r3, r3, r2
 6366 00b6 9B00     		lsls	r3, r3, #2
 6367 00b8 134A     		ldr	r2, .L417+8
 6368 00ba 1A44     		add	r2, r2, r3
 6369 00bc 7B6A     		ldr	r3, [r7, #36]
 6370 00be 0433     		adds	r3, r3, #4
 6371 00c0 1046     		mov	r0, r2
 6372 00c2 1946     		mov	r1, r3
 6373 00c4 FFF7FEFF 		bl	vListInsertEnd
 6374 00c8 05E0     		b	.L415
 6375              	.L414:
4353:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4354:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4355:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4356:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4357:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4358:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 6376              		.loc 1 4358 0
 6377 00ca 7B6A     		ldr	r3, [r7, #36]
 6378 00cc 1833     		adds	r3, r3, #24
 6379 00ce 0F48     		ldr	r0, .L417+12
 6380 00d0 1946     		mov	r1, r3
 6381 00d2 FFF7FEFF 		bl	vListInsertEnd
 6382              	.L415:
4359:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4360:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4361:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6383              		.loc 1 4361 0
 6384 00d6 7B6A     		ldr	r3, [r7, #36]
 6385 00d8 DA6A     		ldr	r2, [r3, #44]
 6386 00da 0D4B     		ldr	r3, .L417+16
 6387 00dc 1B68     		ldr	r3, [r3]
 6388 00de DB6A     		ldr	r3, [r3, #44]
 6389 00e0 9A42     		cmp	r2, r3
 6390 00e2 05D9     		bls	.L411
4362:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4363:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4364:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4365:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 6391              		.loc 1 4365 0
 6392 00e4 3B68     		ldr	r3, [r7]
 6393 00e6 002B     		cmp	r3, #0
 6394 00e8 02D0     		beq	.L411
4366:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4367:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 6395              		.loc 1 4367 0
 6396 00ea 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccdaF48n.s 			page 193


 6397 00ec 0122     		movs	r2, #1
 6398 00ee 1A60     		str	r2, [r3]
 6399              	.L411:
 6400 00f0 3B6A     		ldr	r3, [r7, #32]
 6401 00f2 BB60     		str	r3, [r7, #8]
 6402              	.LBB183:
 6403              	.LBB184:
 6404              		.loc 2 249 0
 6405 00f4 BB68     		ldr	r3, [r7, #8]
 6406              	@ 249 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Thir
 6407 00f6 83F31188 			msr basepri, r3	
 6408              	@ 0 "" 2
 6409              		.thumb
 6410              	.LBE184:
 6411              	.LBE183:
4368:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4369:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4370:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4371:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4372:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4373:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4374:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4375:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4376:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4377:/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6412              		.loc 1 4377 0
 6413 00fa 2837     		adds	r7, r7, #40
 6414              	.LCFI253:
 6415              		.cfi_def_cfa_offset 8
 6416 00fc BD46     		mov	sp, r7
 6417              	.LCFI254:
 6418              		.cfi_def_cfa_register 13
 6419              		@ sp needed
 6420 00fe 80BD     		pop	{r7, pc}
 6421              	.L418:
 6422              		.align	2
 6423              	.L417:
 6424 0100 00000000 		.word	uxSchedulerSuspended
 6425 0104 00000000 		.word	uxTopReadyPriority
 6426 0108 00000000 		.word	pxReadyTasksLists
 6427 010c 00000000 		.word	xPendingReadyList
 6428 0110 00000000 		.word	pxCurrentTCB
 6429              		.cfi_endproc
 6430              	.LFE53:
 6432              		.text
 6433              	.Letext0:
 6434              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 6435              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 6436              		.file 5 "/usr/include/newlib/stdint.h"
 6437              		.file 6 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
 6438              		.file 7 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
 6439              		.file 8 "/home/vadimstupakov/Data/STM32/STM32Cube/Repository/STM32Cube_FW_F4_V1.10.0/Middlewares/T
ARM GAS  /tmp/ccdaF48n.s 			page 194


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccdaF48n.s:24     .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccdaF48n.s:21     .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccdaF48n.s:27     .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccdaF48n.s:30     .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccdaF48n.s:33     .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccdaF48n.s:36     .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccdaF48n.s:39     .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccdaF48n.s:42     .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccdaF48n.s:45     .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccdaF48n.s:48     .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccdaF48n.s:51     .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccdaF48n.s:54     .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccdaF48n.s:57     .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccdaF48n.s:60     .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccdaF48n.s:63     .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccdaF48n.s:66     .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccdaF48n.s:69     .bss.uxTasksDeleted:0000000000000000 $d
     /tmp/ccdaF48n.s:72     .bss.uxTasksDeleted:0000000000000000 uxTasksDeleted
     /tmp/ccdaF48n.s:75     .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccdaF48n.s:78     .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccdaF48n.s:81     .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccdaF48n.s:84     .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccdaF48n.s:87     .bss.xTickCount:0000000000000000 $d
     /tmp/ccdaF48n.s:90     .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccdaF48n.s:93     .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccdaF48n.s:96     .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccdaF48n.s:99     .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccdaF48n.s:102    .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccdaF48n.s:105    .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccdaF48n.s:108    .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccdaF48n.s:111    .bss.xYieldPending:0000000000000000 $d
     /tmp/ccdaF48n.s:114    .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccdaF48n.s:117    .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccdaF48n.s:120    .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccdaF48n.s:123    .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccdaF48n.s:126    .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccdaF48n.s:129    .data.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccdaF48n.s:132    .data.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccdaF48n.s:135    .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccdaF48n.s:138    .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccdaF48n.s:141    .text.xTaskGenericCreate:0000000000000000 $t
     /tmp/ccdaF48n.s:146    .text.xTaskGenericCreate:0000000000000000 xTaskGenericCreate
     /tmp/ccdaF48n.s:4314   .text.prvAllocateTCBAndStack:0000000000000000 prvAllocateTCBAndStack
     /tmp/ccdaF48n.s:3909   .text.prvInitialiseTCBVariables:0000000000000000 prvInitialiseTCBVariables
     /tmp/ccdaF48n.s:4038   .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccdaF48n.s:417    .text.xTaskGenericCreate:0000000000000188 $d
     /tmp/ccdaF48n.s:428    .text.vTaskDelete:0000000000000000 $t
     /tmp/ccdaF48n.s:433    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccdaF48n.s:4722   .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccdaF48n.s:597    .text.vTaskDelete:00000000000000e0 $d
     /tmp/ccdaF48n.s:610    .text.vTaskDelay:0000000000000000 $t
     /tmp/ccdaF48n.s:615    .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccdaF48n.s:1940   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccdaF48n.s:4229   .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccdaF48n.s:1983   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
ARM GAS  /tmp/ccdaF48n.s 			page 195


     /tmp/ccdaF48n.s:729    .text.vTaskDelay:0000000000000090 $d
     /tmp/ccdaF48n.s:738    .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccdaF48n.s:743    .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccdaF48n.s:798    .text.uxTaskPriorityGet:0000000000000030 $d
     /tmp/ccdaF48n.s:803    .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccdaF48n.s:808    .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccdaF48n.s:893    .text.uxTaskPriorityGetFromISR:0000000000000054 $d
     /tmp/ccdaF48n.s:898    .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccdaF48n.s:903    .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccdaF48n.s:1140   .text.vTaskPrioritySet:000000000000014c $d
     /tmp/ccdaF48n.s:1148   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccdaF48n.s:1153   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccdaF48n.s:2752   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccdaF48n.s:1327   .text.vTaskSuspend:00000000000000f0 $d
     /tmp/ccdaF48n.s:1339   .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccdaF48n.s:1343   .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccdaF48n.s:1449   .text.prvTaskIsTaskSuspended:000000000000006c $d
     /tmp/ccdaF48n.s:1455   .text.vTaskResume:0000000000000000 $t
     /tmp/ccdaF48n.s:1460   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccdaF48n.s:1585   .text.vTaskResume:00000000000000ac $d
     /tmp/ccdaF48n.s:1593   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccdaF48n.s:1598   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccdaF48n.s:1754   .text.xTaskResumeFromISR:00000000000000d0 $d
     /tmp/ccdaF48n.s:1763   .rodata:0000000000000000 $d
     /tmp/ccdaF48n.s:1767   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccdaF48n.s:1772   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccdaF48n.s:1868   .text.vTaskStartScheduler:0000000000000070 $d
     /tmp/ccdaF48n.s:3856   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccdaF48n.s:1876   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccdaF48n.s:1881   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccdaF48n.s:1930   .text.vTaskEndScheduler:0000000000000028 $d
     /tmp/ccdaF48n.s:1935   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccdaF48n.s:1973   .text.vTaskSuspendAll:0000000000000018 $d
     /tmp/ccdaF48n.s:1978   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccdaF48n.s:2491   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccdaF48n.s:2172   .text.xTaskResumeAll:0000000000000108 $d
     /tmp/ccdaF48n.s:2185   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccdaF48n.s:2190   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccdaF48n.s:2230   .text.xTaskGetTickCount:000000000000001c $d
     /tmp/ccdaF48n.s:2235   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccdaF48n.s:2240   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccdaF48n.s:2281   .text.xTaskGetTickCountFromISR:0000000000000020 $d
     /tmp/ccdaF48n.s:2286   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccdaF48n.s:2291   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccdaF48n.s:2322   .text.uxTaskGetNumberOfTasks:0000000000000014 $d
     /tmp/ccdaF48n.s:2327   .text.uxTaskGetSystemState:0000000000000000 $t
     /tmp/ccdaF48n.s:2332   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
     /tmp/ccdaF48n.s:4414   .text.prvListTaskWithinSingleList:0000000000000000 prvListTaskWithinSingleList
     /tmp/ccdaF48n.s:2476   .text.uxTaskGetSystemState:00000000000000e0 $d
     /tmp/ccdaF48n.s:2486   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccdaF48n.s:2732   .text.xTaskIncrementTick:0000000000000154 $d
     /tmp/ccdaF48n.s:2747   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccdaF48n.s:2886   .text.vTaskSwitchContext:00000000000000a0 $d
     /tmp/ccdaF48n.s:2895   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccdaF48n.s:2900   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccdaF48n.s:3006   .text.vTaskPlaceOnEventList:000000000000008c $d
     /tmp/ccdaF48n.s:3014   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
ARM GAS  /tmp/ccdaF48n.s 			page 196


     /tmp/ccdaF48n.s:3019   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccdaF48n.s:3155   .text.vTaskPlaceOnUnorderedEventList:00000000000000b4 $d
     /tmp/ccdaF48n.s:3164   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccdaF48n.s:3169   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccdaF48n.s:3298   .text.xTaskRemoveFromEventList:00000000000000b0 $d
     /tmp/ccdaF48n.s:3308   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccdaF48n.s:3313   .text.xTaskRemoveFromUnorderedEventList:0000000000000000 xTaskRemoveFromUnorderedEventList
     /tmp/ccdaF48n.s:3454   .text.xTaskRemoveFromUnorderedEventList:00000000000000bc $d
     /tmp/ccdaF48n.s:3463   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccdaF48n.s:3468   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccdaF48n.s:3534   .text.vTaskSetTimeOutState:000000000000003c $d
     /tmp/ccdaF48n.s:3540   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccdaF48n.s:3545   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccdaF48n.s:3692   .text.xTaskCheckForTimeOut:00000000000000b4 $d
     /tmp/ccdaF48n.s:3698   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccdaF48n.s:3703   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccdaF48n.s:3734   .text.vTaskMissedYield:0000000000000014 $d
     /tmp/ccdaF48n.s:3739   .text.uxTaskGetTaskNumber:0000000000000000 $t
     /tmp/ccdaF48n.s:3744   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
     /tmp/ccdaF48n.s:3799   .text.vTaskSetTaskNumber:0000000000000000 $t
     /tmp/ccdaF48n.s:3804   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
     /tmp/ccdaF48n.s:3852   .text.prvIdleTask:0000000000000000 $t
     /tmp/ccdaF48n.s:4130   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccdaF48n.s:3899   .text.prvIdleTask:0000000000000028 $d
     /tmp/ccdaF48n.s:3905   .text.prvInitialiseTCBVariables:0000000000000000 $t
     /tmp/ccdaF48n.s:4034   .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccdaF48n.s:4114   .text.prvInitialiseTaskLists:000000000000005c $d
     /tmp/ccdaF48n.s:4126   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccdaF48n.s:4679   .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccdaF48n.s:4218   .text.prvCheckTasksWaitingTermination:0000000000000068 $d
     /tmp/ccdaF48n.s:4225   .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccdaF48n.s:4301   .text.prvAddCurrentTaskToDelayedList:0000000000000058 $d
     /tmp/ccdaF48n.s:4310   .text.prvAllocateTCBAndStack:0000000000000000 $t
     /tmp/ccdaF48n.s:4410   .text.prvListTaskWithinSingleList:0000000000000000 $t
     /tmp/ccdaF48n.s:4612   .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
     /tmp/ccdaF48n.s:4608   .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
     /tmp/ccdaF48n.s:4675   .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccdaF48n.s:4718   .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccdaF48n.s:4789   .text.prvResetNextTaskUnblockTime:0000000000000040 $d
     /tmp/ccdaF48n.s:4795   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccdaF48n.s:4800   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccdaF48n.s:4840   .text.xTaskGetCurrentTaskHandle:000000000000001c $d
     /tmp/ccdaF48n.s:4845   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccdaF48n.s:4850   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccdaF48n.s:4910   .text.xTaskGetSchedulerState:0000000000000034 $d
     /tmp/ccdaF48n.s:4916   .text.vTaskPriorityInherit:0000000000000000 $t
     /tmp/ccdaF48n.s:4921   .text.vTaskPriorityInherit:0000000000000000 vTaskPriorityInherit
     /tmp/ccdaF48n.s:5074   .text.vTaskPriorityInherit:00000000000000e4 $d
     /tmp/ccdaF48n.s:5081   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccdaF48n.s:5086   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccdaF48n.s:5266   .text.xTaskPriorityDisinherit:0000000000000100 $d
     /tmp/ccdaF48n.s:5273   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccdaF48n.s:5278   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccdaF48n.s:5327   .text.uxTaskResetEventItemValue:000000000000002c $d
     /tmp/ccdaF48n.s:5332   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccdaF48n.s:5337   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccdaF48n.s:5380   .text.pvTaskIncrementMutexHeldCount:0000000000000024 $d
ARM GAS  /tmp/ccdaF48n.s 			page 197


     /tmp/ccdaF48n.s:5385   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccdaF48n.s:5390   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccdaF48n.s:5537   .text.ulTaskNotifyTake:00000000000000d4 $d
     /tmp/ccdaF48n.s:5546   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccdaF48n.s:5551   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccdaF48n.s:5717   .text.xTaskNotifyWait:00000000000000f8 $d
     /tmp/ccdaF48n.s:5726   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccdaF48n.s:5731   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccdaF48n.s:5809   .text.xTaskGenericNotify:0000000000000060 $d
     /tmp/ccdaF48n.s:5814   .text.xTaskGenericNotify:0000000000000074 $t
     /tmp/ccdaF48n.s:5953   .text.xTaskGenericNotify:0000000000000134 $d
     /tmp/ccdaF48n.s:5961   .text.xTaskNotifyFromISR:0000000000000000 $t
     /tmp/ccdaF48n.s:5966   .text.xTaskNotifyFromISR:0000000000000000 xTaskNotifyFromISR
     /tmp/ccdaF48n.s:6054   .text.xTaskNotifyFromISR:0000000000000070 $d
     /tmp/ccdaF48n.s:6059   .text.xTaskNotifyFromISR:0000000000000084 $t
     /tmp/ccdaF48n.s:6219   .text.xTaskNotifyFromISR:0000000000000160 $d
     /tmp/ccdaF48n.s:6228   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccdaF48n.s:6233   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccdaF48n.s:6424   .text.vTaskNotifyGiveFromISR:0000000000000100 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vPortValidateInterruptPriority
xPortStartScheduler
vPortEndScheduler
vListInsert
vListInitialiseItem
vListInitialise
pvPortMalloc
vPortFree
memset
